{"version":3,"file":"static/js/854.3fe25606.chunk.js","mappings":"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","sources":["components/CrmAssistantPanel/index.tsx","pages/Dashboard/components/DynamicKPIStats.tsx","pages/Dashboard/components/TrendingInsightsPredictions.tsx","pages/Dashboard/components/DynamicCharts.tsx","pages/Dashboard/components/SavedReports.tsx","services/globalAISearch/index.ts","pages/Dashboard/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  TextField,\r\n  InputAdornment,\r\n  Paper,\r\n  Chip,\r\n  Button,\r\n  Avatar,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Skeleton,\r\n  Alert,\r\n  Snackbar,\r\n  useTheme,\r\n  alpha,\r\n  Fade,\r\n  Slide\r\n} from '@mui/material';\r\nimport {\r\n  Close as CloseIcon,\r\n  Minimize as MinimizeIcon,\r\n  Fullscreen as ExpandIcon,\r\n  Send as SendIcon,\r\n  AttachFile as AttachIcon,\r\n  SmartToy as AIIcon,\r\n  Person as PersonIcon,\r\n  Business as BusinessIcon,\r\n  TrendingUp as TrendingIcon,\r\n  Email as EmailIcon,\r\n  Add as AddIcon,\r\n  Task as TaskIcon,\r\n  OpenInNew as OpenIcon\r\n} from '@mui/icons-material';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// Types\r\nexport interface ChatMessage {\r\n  id: string;\r\n  type: 'user' | 'assistant';\r\n  content: string;\r\n  timestamp: Date;\r\n  isCard?: boolean;\r\n  cardData?: AssistantCardData;\r\n}\r\n\r\nexport interface ContactData {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  owner: string;\r\n  leadStatus: string;\r\n  statusColor: string;\r\n}\r\n\r\nexport interface DealData {\r\n  id: string;\r\n  name: string;\r\n  customer: string;\r\n  amount: number;\r\n  stage: string;\r\n  stageColor: string;\r\n  deadline: string;\r\n}\r\n\r\nexport interface AssistantCardData {\r\n  query: string;\r\n  summary: string[];\r\n  contacts: ContactData[];\r\n  deals: DealData[];\r\n  showContacts: boolean;\r\n  showDeals: boolean;\r\n}\r\n\r\nexport interface CrmAssistantPanelProps {\r\n  open: boolean;\r\n  initialQuery?: string;\r\n  onClose: () => void;\r\n  onMinimize: () => void;\r\n}\r\n\r\n// Mock data\r\nconst mockContacts: ContactData[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Nguyễn Văn An',\r\n    email: 'an.nguyen@company.com',\r\n    phone: '0901234567',\r\n    owner: 'Trần Thị B',\r\n    leadStatus: 'Hot Lead',\r\n    statusColor: '#f44336'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Lê Thị Cẩm',\r\n    email: 'cam.le@business.com',\r\n    phone: '0987654321',\r\n    owner: 'Phạm Văn C',\r\n    leadStatus: 'Qualified',\r\n    statusColor: '#4caf50'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Hoàng Minh Đức',\r\n    email: 'duc.hoang@tech.vn',\r\n    phone: '0912345678',\r\n    owner: 'Nguyễn Thị D',\r\n    leadStatus: 'New Lead',\r\n    statusColor: '#2196f3'\r\n  }\r\n];\r\n\r\nconst mockDeals: DealData[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Hệ thống CRM cho ABC Corp',\r\n    customer: 'ABC Corporation',\r\n    amount: 250000000,\r\n    stage: 'Đã gửi báo giá',\r\n    stageColor: '#ff9800',\r\n    deadline: '2024-02-15'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Giải pháp ERP XYZ',\r\n    customer: 'XYZ Trading',\r\n    amount: 180000000,\r\n    stage: 'Đang đàm phán',\r\n    stageColor: '#9c27b0',\r\n    deadline: '2024-02-28'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Tư vấn Marketing Digital',\r\n    customer: 'Innovation Startup',\r\n    amount: 75000000,\r\n    stage: 'Liên hệ ban đầu',\r\n    stageColor: '#607d8b',\r\n    deadline: '2024-03-10'\r\n  }\r\n];\r\n\r\n// Helper functions\r\nconst formatAmount = (amount: number): string => {\r\n  if (amount >= 1000000000) {\r\n    return `${(amount / 1000000000).toFixed(1)}B₫`;\r\n  } else if (amount >= 1000000) {\r\n    return `${(amount / 1000000).toFixed(1)}M₫`;\r\n  } else if (amount >= 1000) {\r\n    return `${(amount / 1000).toFixed(1)}K₫`;\r\n  }\r\n  return `${amount}₫`;\r\n};\r\n\r\nconst generateConversationTitle = (query: string): string => {\r\n  const words = query.split(' ').slice(0, 6);\r\n  return words.join(' ');\r\n};\r\n\r\nconst generateMockSummary = (query: string, t: (key: string, options?: any) => string): string[] => {\r\n  const totalAmount = mockDeals.reduce((sum, deal) => sum + deal.amount, 0);\r\n  const stageCounts = mockDeals.reduce<Record<string, number>>((acc, d) => {\r\n    acc[d.stage] = (acc[d.stage] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  const mostCommonStage = Object.entries(stageCounts).sort((a, b) => b[1] - a[1])[0]?.[0] || '';\r\n\r\n  return [\r\n    t('pages.assistant.mock.summary.foundContacts', { count: mockContacts.length }),\r\n    t('pages.assistant.mock.summary.openDealsTotal', { count: mockDeals.length, total: formatAmount(totalAmount) }),\r\n    t('pages.assistant.mock.summary.manyDealsAtStage', { stage: mostCommonStage }),\r\n    t('pages.assistant.mock.summary.currentLeadConversion', { percent: 65 })\r\n  ];\r\n};\r\n\r\n// Mini Table Component\r\nconst MiniTable: React.FC<{\r\n  type: 'contacts' | 'deals';\r\n  data: ContactData[] | DealData[];\r\n  onAction: (action: string, id: string) => void;\r\n}> = ({ type, data, onAction }) => {\r\n  const theme = useTheme();\r\n  const { t, i18n } = useTranslation();\r\n  const locale = i18n.language && i18n.language.startsWith('ja') ? 'ja-JP' : 'en-US';\r\n  const formatDate = (dateStr: string) => {\r\n    const d = new Date(dateStr);\r\n    return new Intl.DateTimeFormat(locale, { year: 'numeric', month: '2-digit', day: '2-digit' }).format(d);\r\n  };\r\n\r\n  if (type === 'contacts') {\r\n    const contacts = data as ContactData[];\r\n    return (\r\n      <TableContainer component={Paper} sx={{ maxHeight: 200, border: `1px solid ${alpha(theme.palette.divider, 0.3)}` }}>\r\n        <Table size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.contacts.columns.name')}</TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.contacts.columns.email')}</TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.contacts.columns.owner')}</TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.contacts.columns.leadStatus')}</TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.contacts.columns.actions')}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {contacts.map((contact) => (\r\n              <TableRow key={contact.id} hover>\r\n                <TableCell sx={{ fontSize: '0.8rem', fontWeight: 'medium' }}>{contact.name}</TableCell>\r\n                <TableCell sx={{ fontSize: '0.75rem' }}>{contact.email}</TableCell>\r\n                <TableCell sx={{ fontSize: '0.75rem' }}>{contact.owner}</TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    label={contact.leadStatus}\r\n                    size=\"small\"\r\n                    sx={{\r\n                      backgroundColor: alpha(contact.statusColor, 0.1),\r\n                      color: contact.statusColor,\r\n                      border: `1px solid ${alpha(contact.statusColor, 0.3)}`,\r\n                      fontSize: '0.65rem',\r\n                      height: 20\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Button\r\n                    size=\"small\"\r\n                    startIcon={<OpenIcon fontSize=\"small\" />}\r\n                    onClick={() => onAction('open', contact.id)}\r\n                    sx={{ fontSize: '0.7rem', minWidth: 'auto', px: 1 }}\r\n                  >\r\n                    {t('pages.assistant.buttons.open')}\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n  const deals = data as DealData[];\r\n  return (\r\n    <TableContainer component={Paper} sx={{ maxHeight: 200, border: `1px solid ${alpha(theme.palette.divider, 0.3)}` }}>\r\n      <Table size=\"small\" stickyHeader>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.deals.columns.dealName')}</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.deals.columns.customer')}</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.deals.columns.amount')}</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.deals.columns.stage')}</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.deals.columns.expectedCloseDate')}</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.deals.columns.actions')}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {deals.map((deal) => (\r\n            <TableRow key={deal.id} hover>\r\n              <TableCell sx={{ fontSize: '0.8rem', fontWeight: 'medium' }}>{deal.name}</TableCell>\r\n              <TableCell sx={{ fontSize: '0.75rem' }}>{deal.customer}</TableCell>\r\n              <TableCell sx={{ fontSize: '0.8rem', fontWeight: 'bold', color: 'success.main' }}>\r\n                {formatAmount(deal.amount)}\r\n              </TableCell>\r\n              <TableCell>\r\n                <Chip\r\n                  label={deal.stage}\r\n                  size=\"small\"\r\n                  sx={{\r\n                    backgroundColor: alpha(deal.stageColor, 0.1),\r\n                    color: deal.stageColor,\r\n                    border: `1px solid ${alpha(deal.stageColor, 0.3)}`,\r\n                    fontSize: '0.65rem',\r\n                    height: 20\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell sx={{ fontSize: '0.75rem' }}>{formatDate(deal.deadline)}</TableCell>\r\n              <TableCell>\r\n                <Box sx={{ display: 'flex', gap: 0.5 }}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    startIcon={<OpenIcon fontSize=\"small\" />}\r\n                    onClick={() => onAction('open', deal.id)}\r\n                    sx={{ fontSize: '0.7rem', minWidth: 'auto', px: 1 }}\r\n                  >\r\n                    {t('pages.assistant.buttons.open')}\r\n                  </Button>\r\n                  <Button\r\n                    size=\"small\"\r\n                    startIcon={<TaskIcon fontSize=\"small\" />}\r\n                    onClick={() => onAction('task', deal.id)}\r\n                    sx={{ fontSize: '0.7rem', minWidth: 'auto', px: 1 }}\r\n                  >\r\n                    {t('pages.assistant.buttons.task')}\r\n                  </Button>\r\n                </Box>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\n// Assistant Card Component\r\nconst AssistantCard: React.FC<{\r\n  data: AssistantCardData;\r\n  loading?: boolean;\r\n  onToggleSection: (section: 'contacts' | 'deals') => void;\r\n  onAction: (action: string, id?: string) => void;\r\n}> = ({ data, loading, onToggleSection, onAction }) => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n\r\n  if (loading) {\r\n    return (\r\n      <Paper sx={{ p: 3, mb: 2, borderRadius: 3, border: `1px solid ${alpha(theme.palette.primary.main, 0.2)}` }}>\r\n        <Skeleton variant=\"text\" width=\"60%\" height={32} sx={{ mb: 2 }} />\r\n        <Box sx={{ mb: 2 }}>\r\n          {[1, 2, 3].map((i) => (\r\n            <Skeleton key={i} variant=\"text\" width=\"80%\" height={24} sx={{ mb: 0.5 }} />\r\n          ))}\r\n        </Box>\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={120} sx={{ mb: 2, borderRadius: 1 }} />\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={120} sx={{ borderRadius: 1 }} />\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper sx={{ \r\n      p: 3, \r\n      mb: 2, \r\n      borderRadius: 3, \r\n      border: `1px solid ${alpha(theme.palette.primary.main, 0.2)}`,\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.02)\r\n    }}>\r\n      <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mb: 2, color: 'primary.main' }}>\r\n        {t('pages.assistant.resultsFor', { query: data.query })}\r\n      </Typography>\r\n\r\n      {/* Summary */}\r\n      <Box sx={{ mb: 3 }}>\r\n        {data.summary.map((item, index) => (\r\n          <Typography key={index} variant=\"body2\" sx={{ mb: 0.5, display: 'flex', alignItems: 'center' }}>\r\n            <Box sx={{ width: 4, height: 4, borderRadius: '50%', backgroundColor: 'primary.main', mr: 1 }} />\r\n            {item}\r\n          </Typography>\r\n        ))}\r\n      </Box>\r\n\r\n      {/* Filter Chips */}\r\n      <Box sx={{ display: 'flex', gap: 1, mb: 3 }}>\r\n        <Chip\r\n          icon={<PersonIcon fontSize=\"small\" />}\r\n          label={t('common.contacts')}\r\n          variant={data.showContacts ? 'filled' : 'outlined'}\r\n          color={data.showContacts ? 'primary' : 'default'}\r\n          onClick={() => onToggleSection('contacts')}\r\n          sx={{ cursor: 'pointer' }}\r\n        />\r\n        <Chip\r\n          icon={<BusinessIcon fontSize=\"small\" />}\r\n          label={t('common.deals')}\r\n          variant={data.showDeals ? 'filled' : 'outlined'}\r\n          color={data.showDeals ? 'primary' : 'default'}\r\n          onClick={() => onToggleSection('deals')}\r\n          sx={{ cursor: 'pointer' }}\r\n        />\r\n      </Box>\r\n\r\n      {/* Top Contacts */}\r\n      {data.showContacts && (\r\n        <Box sx={{ mb: 3 }}>\r\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold', mb: 1.5 }}>\r\n            {t('pages.assistant.topContacts')}\r\n          </Typography>\r\n          <MiniTable type=\"contacts\" data={data.contacts} onAction={onAction} />\r\n        </Box>\r\n      )}\r\n\r\n      {/* Open Deals */}\r\n      {data.showDeals && (\r\n        <Box sx={{ mb: 3 }}>\r\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold', mb: 1.5 }}>\r\n            {t('pages.assistant.openDeals')}\r\n          </Typography>\r\n          <MiniTable type=\"deals\" data={data.deals} onAction={onAction} />\r\n        </Box>\r\n      )}\r\n\r\n      {/* Suggested Actions */}\r\n      <Box>\r\n        <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold', mb: 1.5 }}>\r\n          {t('pages.assistant.nextSuggestions')}\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<AddIcon fontSize=\"small\" />}\r\n            variant=\"outlined\"\r\n            onClick={() => onAction('create-contact')}\r\n          >\r\n            {t('pages.assistant.actions.createContact')}\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<TrendingIcon fontSize=\"small\" />}\r\n            variant=\"outlined\"\r\n            onClick={() => onAction('create-deal')}\r\n          >\r\n            {t('pages.assistant.actions.createDeal')}\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<EmailIcon fontSize=\"small\" />}\r\n            variant=\"outlined\"\r\n            onClick={() => onAction('send-email')}\r\n          >\r\n            {t('pages.assistant.actions.sendDraftEmail')}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// Chat Message Component\r\nconst ChatMessage: React.FC<{\r\n  message: ChatMessage;\r\n  onToggleSection?: (section: 'contacts' | 'deals') => void;\r\n  onAction?: (action: string, id?: string) => void;\r\n}> = ({ message, onToggleSection, onAction }) => {\r\n  const theme = useTheme();\r\n  const isUser = message.type === 'user';\r\n\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      justifyContent: isUser ? 'flex-end' : 'flex-start',\r\n      mb: 2\r\n    }}>\r\n      <Box sx={{ maxWidth: '80%', width: message.isCard ? '100%' : 'auto' }}>\r\n        {message.isCard && message.cardData ? (\r\n          <AssistantCard\r\n            data={message.cardData}\r\n            onToggleSection={onToggleSection!}\r\n            onAction={onAction!}\r\n          />\r\n        ) : (\r\n          <Paper sx={{\r\n            p: 2,\r\n            backgroundColor: isUser ? 'primary.main' : 'grey.100',\r\n            color: isUser ? 'primary.contrastText' : 'text.primary',\r\n            borderRadius: isUser ? '18px 18px 4px 18px' : '18px 18px 18px 4px',\r\n            maxWidth: 'fit-content'\r\n          }}>\r\n            <Typography variant=\"body2\">\r\n              {message.content}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Main CRM Assistant Panel Component\r\nconst CrmAssistantPanel: React.FC<CrmAssistantPanelProps> = ({\r\n  open,\r\n  initialQuery = '',\r\n  onClose,\r\n  onMinimize\r\n}) => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n\r\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [conversationTitle, setConversationTitle] = useState('');\r\n  const [cardData, setCardData] = useState<AssistantCardData | null>(null);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '' });\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Initialize with initial query\r\n  useEffect(() => {\r\n    if (open && initialQuery && messages.length === 0) {\r\n      setConversationTitle(generateConversationTitle(initialQuery));\r\n      handleSendMessage(initialQuery, true);\r\n    }\r\n  }, [open, initialQuery]);\r\n\r\n  // Auto scroll to bottom\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async (message: string, isInitial = false) => {\r\n    if (!message.trim()) return;\r\n\r\n    // Add user message\r\n    const userMessage: ChatMessage = {\r\n      id: Date.now().toString(),\r\n      type: 'user',\r\n      content: message,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setIsTyping(true);\r\n\r\n    // Simulate typing delay\r\n    setTimeout(() => {\r\n      setIsTyping(false);\r\n      \r\n      if (isInitial) {\r\n        // Create card response for initial query\r\n        const newCardData: AssistantCardData = {\r\n          query: message,\r\n          summary: generateMockSummary(message, t),\r\n          contacts: mockContacts,\r\n          deals: mockDeals,\r\n          showContacts: true,\r\n          showDeals: true\r\n        };\r\n\r\n        const assistantMessage: ChatMessage = {\r\n          id: (Date.now() + 1).toString(),\r\n          type: 'assistant',\r\n          content: '',\r\n          timestamp: new Date(),\r\n          isCard: true,\r\n          cardData: newCardData\r\n        };\r\n\r\n        setCardData(newCardData);\r\n        setMessages(prev => [...prev, assistantMessage]);\r\n      } else {\r\n        // Regular text response\r\n        const responses = [\r\n          'Tôi đã phân tích dữ liệu và tìm thấy một số thông tin hữu ích. Bạn có muốn tôi tạo báo cáo chi tiết không?',\r\n          'Dựa trên dữ liệu hiện tại, tôi khuyên bạn nên tập trung vào các lead đang ở giai đoạn \"Đã gửi báo giá\".',\r\n          'Có vẻ như bạn có nhiều cơ hội tiềm năng. Tôi có thể giúp bạn ưu tiên theo giá trị deal.',\r\n          'Tôi nhận thấy một số xu hướng thú vị trong dữ liệu của bạn. Bạn muốn xem phân tích chi tiết không?'\r\n        ];\r\n\r\n        const assistantMessage: ChatMessage = {\r\n          id: (Date.now() + 1).toString(),\r\n          type: 'assistant',\r\n          content: responses[Math.floor(Math.random() * responses.length)],\r\n          timestamp: new Date()\r\n        };\r\n\r\n        setMessages(prev => [...prev, assistantMessage]);\r\n      }\r\n    }, 1500);\r\n  };\r\n\r\n  const handleToggleSection = (section: 'contacts' | 'deals') => {\r\n    if (!cardData) return;\r\n\r\n    const updatedCardData = {\r\n      ...cardData,\r\n      [section === 'contacts' ? 'showContacts' : 'showDeals']: \r\n        !cardData[section === 'contacts' ? 'showContacts' : 'showDeals']\r\n    };\r\n\r\n    setCardData(updatedCardData);\r\n    \r\n    // Update the card message\r\n    setMessages(prev => prev.map(msg => \r\n      msg.isCard ? { ...msg, cardData: updatedCardData } : msg\r\n    ));\r\n  };\r\n\r\n  const handleAction = (action: string, id?: string) => {\r\n    const actionMessages: { [key: string]: string } = {\r\n      'open': '(mock) Đã mở chi tiết',\r\n      'task': '(mock) Đã tạo task',\r\n      'create-contact': '(mock) Đã tạo liên hệ mới',\r\n      'create-deal': '(mock) Đã tạo cơ hội mới',\r\n      'send-email': '(mock) Đã gửi email nháp'\r\n    };\r\n\r\n    setSnackbar({\r\n      open: true,\r\n      message: actionMessages[action] || '(mock) Đã thực hiện'\r\n    });\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage(inputValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        onClose={onClose}\r\n        maxWidth={false}\r\n        PaperProps={{\r\n          sx: {\r\n            width: '960px',\r\n            height: '75vh',\r\n            maxWidth: '90vw',\r\n            maxHeight: '90vh',\r\n            borderRadius: 3,\r\n            overflow: 'hidden'\r\n          }\r\n        }}\r\n        BackdropProps={{\r\n          sx: {\r\n            backgroundColor: alpha(theme.palette.common.black, 0.5),\r\n            backdropFilter: 'blur(4px)'\r\n          }\r\n        }}\r\n      >\r\n        {/* Header */}\r\n        <Box sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          p: 2,\r\n          borderBottom: `1px solid ${theme.palette.divider}`,\r\n          backgroundColor: theme.palette.background.paper,\r\n          position: 'sticky',\r\n          top: 0,\r\n          zIndex: 1\r\n        }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n            <AIIcon color=\"primary\" />\r\n            <Box>\r\n              <Typography variant=\"h6\" sx={{ fontWeight: 'bold', lineHeight: 1 }}>\r\n                {t('pages.assistant.assistant')}\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                {conversationTitle || 'Start new chat'}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          \r\n          <Box sx={{ display: 'flex', gap: 0.5 }}>\r\n            <IconButton size=\"small\" onClick={onMinimize}>\r\n              <MinimizeIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton size=\"small\">\r\n              <ExpandIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton size=\"small\" onClick={onClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Chat Body */}\r\n        <DialogContent sx={{ \r\n          flex: 1, \r\n          p: 0, \r\n          display: 'flex', \r\n          flexDirection: 'column',\r\n          overflow: 'hidden'\r\n        }}>\r\n          <Box sx={{ \r\n            flex: 1, \r\n            overflow: 'auto', \r\n            p: 2,\r\n            '&::-webkit-scrollbar': {\r\n              width: '6px',\r\n            },\r\n            '&::-webkit-scrollbar-track': {\r\n              backgroundColor: alpha(theme.palette.grey[300], 0.2),\r\n            },\r\n            '&::-webkit-scrollbar-thumb': {\r\n              backgroundColor: alpha(theme.palette.primary.main, 0.3),\r\n              borderRadius: '3px',\r\n              '&:hover': {\r\n                backgroundColor: alpha(theme.palette.primary.main, 0.5),\r\n              }\r\n            }\r\n          }}>\r\n            {messages.length === 0 ? (\r\n              <Box sx={{ \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                height: '100%',\r\n                flexDirection: 'column',\r\n                color: 'text.secondary'\r\n              }}>\r\n                <AIIcon sx={{ fontSize: 48, mb: 2, opacity: 0.5 }} />\r\n                <Typography variant=\"body1\">\r\n                  {t('pages.assistant.emptyPrompt')}\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <>\r\n                {messages.map((message) => (\r\n                  <ChatMessage\r\n                    key={message.id}\r\n                    message={message}\r\n                    onToggleSection={handleToggleSection}\r\n                    onAction={handleAction}\r\n                  />\r\n                ))}\r\n                \r\n                {isTyping && (\r\n                  <Box sx={{ display: 'flex', justifyContent: 'flex-start', mb: 2 }}>\r\n                    <Paper sx={{\r\n                      p: 2,\r\n                      backgroundColor: 'grey.100',\r\n                      borderRadius: '18px 18px 18px 4px',\r\n                      maxWidth: 'fit-content'\r\n                    }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {t('pages.assistant.typing')}\r\n                      </Typography>\r\n                    </Paper>\r\n                  </Box>\r\n                )}\r\n                \r\n                <div ref={messagesEndRef} />\r\n              </>\r\n            )}\r\n          </Box>\r\n\r\n          {/* Composer */}\r\n          <Box sx={{\r\n            p: 2,\r\n            borderTop: `1px solid ${theme.palette.divider}`,\r\n            backgroundColor: theme.palette.background.paper,\r\n            position: 'sticky',\r\n            bottom: 0\r\n          }}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              maxRows={3}\r\n              placeholder={t('pages.assistant.inputPlaceholder')}\r\n              value={inputValue}\r\n              onChange={(e) => setInputValue(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton size=\"small\" sx={{ mr: 0.5 }}>\r\n                      <AttachIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      onClick={() => handleSendMessage(inputValue)}\r\n                      disabled={!inputValue.trim()}\r\n                    >\r\n                      <SendIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n                sx: {\r\n                  borderRadius: 3,\r\n                  '& .MuiOutlinedInput-notchedOutline': {\r\n                    borderColor: alpha(theme.palette.primary.main, 0.3),\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 0.5, display: 'block' }}>\r\n              {t('pages.assistant.mock.disclaimer')}\r\n            </Typography>\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Snackbar for actions */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={3000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n        message={snackbar.message}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrmAssistantPanel;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Chip,\r\n  LinearProgress,\r\n  useTheme,\r\n  alpha,\r\n  Skeleton,\r\n  IconButton,\r\n  Tooltip,\r\n  Fade,\r\n  Grid,\r\n  Stack\r\n} from '@mui/material';\r\nimport {\r\n  TrendingUp as TrendingUpIcon,\r\n  TrendingDown as TrendingDownIcon,\r\n  People as PeopleIcon,\r\n  AttachMoney as MoneyIcon,\r\n  Assignment as DealsIcon,\r\n  Timeline as TimelineIcon,\r\n  Refresh as RefreshIcon,\r\n  Star as StarIcon,\r\n  ViewModule as ViewModuleIcon,\r\n  ViewCarousel as ViewCarouselIcon\r\n} from '@mui/icons-material';\r\nimport { aiOrchestrator, AIRequest } from '../../../services/aiOrchestration';\r\n\r\ninterface KPIData {\r\n  id: string;\r\n  title: string;\r\n  value: string | number;\r\n  change: number;\r\n  changeLabel: string;\r\n  icon: React.ReactNode;\r\n  color: string;\r\n  description: string;\r\n  isLoading?: boolean;\r\n  lastUpdated?: Date;\r\n}\r\n\r\ninterface DynamicUpdate {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  timestamp: Date;\r\n  type: 'new_customer' | 'deal_closed' | 'revenue_milestone' | 'market_trend';\r\n  value?: string;\r\n  isNew?: boolean;\r\n}\r\n\r\nconst DynamicKPIStats: React.FC = () => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n  const [kpiData, setKpiData] = useState<KPIData[]>([]);\r\n  const [dynamicUpdates, setDynamicUpdates] = useState<DynamicUpdate[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [lastRefresh, setLastRefresh] = useState<Date>(new Date());\r\n  const [activeKpiIndex, setActiveKpiIndex] = useState<number>(0);\r\n  const [showAllKpis, setShowAllKpis] = useState<boolean>(false);\r\n\r\n  // Initialize KPI data\r\n  useEffect(() => {\r\n    loadKPIData();\r\n    loadDynamicUpdates();\r\n    \r\n    // Set up real-time updates\r\n    const interval = setInterval(() => {\r\n      updateKPIData();\r\n      addRandomUpdate();\r\n    }, 30000); // Update every 30 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Rotate through KPI cards with animation\r\n  useEffect(() => {\r\n    if (kpiData.length === 0 || showAllKpis) return;\r\n    \r\n    const rotationInterval = setInterval(() => {\r\n      setActiveKpiIndex(prevIndex => (prevIndex + 1) % kpiData.length);\r\n    }, 5000); // Rotate every 5 seconds\r\n    \r\n    return () => clearInterval(rotationInterval);\r\n  }, [kpiData.length, showAllKpis]);\r\n\r\n  const loadKPIData = async () => {\r\n    setIsLoading(true);\r\n    \r\n    // Simulate API call to get real-time data\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    const currentDate = new Date();\r\n    const kpis: KPIData[] = [\r\n      {\r\n        id: 'new_customers',\r\n        title: t('pages.dashboard.kpiStats.newCustomers'),\r\n        value: Math.floor(Math.random() * 20) + 15, // 15-35\r\n        change: Math.random() * 30 - 10, // -10% to +20%\r\n        changeLabel: t('pages.dashboard.kpiStats.comparedToLastWeek'),\r\n        icon: <PeopleIcon />,\r\n        color: theme.palette.primary.main,\r\n        description: t('pages.dashboard.kpiStats.newCustomers'),\r\n        lastUpdated: currentDate\r\n      },\r\n      {\r\n        id: 'total_deals',\r\n        title: t('pages.dashboard.kpiStats.totalDeals'),\r\n        value: Math.floor(Math.random() * 50) + 120, // 120-170\r\n        change: Math.random() * 25 - 5, // -5% to +20%\r\n        changeLabel: t('pages.dashboard.kpiStats.comparedToLastMonth'),\r\n        icon: <DealsIcon />,\r\n        color: theme.palette.success.main,\r\n        description: t('pages.dashboard.kpiStats.totalDeals'),\r\n        lastUpdated: currentDate\r\n      },\r\n      {\r\n        id: 'revenue',\r\n        title: t('pages.dashboard.kpiStats.revenueActual'),\r\n        value: `${(Math.random() * 500 + 1500).toFixed(0)}K`,\r\n        change: Math.random() * 40 - 10, // -10% to +30%\r\n        changeLabel: t('pages.dashboard.kpiStats.comparedToLastMonth'),\r\n        icon: <MoneyIcon />,\r\n        color: theme.palette.warning.main,\r\n        description: t('pages.dashboard.kpiStats.revenueActual'),\r\n        lastUpdated: currentDate\r\n      },\r\n      {\r\n        id: 'deal_pipeline',\r\n        title: t('pages.dashboard.kpiStats.dealByStage'),\r\n        value: `${Math.floor(Math.random() * 10) + 25}`,\r\n        change: Math.random() * 20 - 5, // -5% to +15%\r\n        changeLabel: t('pages.dashboard.kpiStats.closedThisMonth'),\r\n        icon: <TimelineIcon />,\r\n        color: theme.palette.info.main,\r\n        description: t('pages.dashboard.kpiStats.dealByStage'),\r\n        lastUpdated: currentDate\r\n      },\r\n      {\r\n        id: 'top_performer',\r\n        title: t('pages.dashboard.kpiStats.topEmployee'),\r\n        value: 'Nguyễn Văn A',\r\n        change: 8, // Number of deals\r\n        changeLabel: t('pages.dashboard.kpiStats.closedThisMonth'),\r\n        icon: <StarIcon />,\r\n        color: theme.palette.secondary.main,\r\n        description: t('pages.dashboard.kpiStats.topEmployee'),\r\n        lastUpdated: currentDate\r\n      }\r\n    ];\r\n\r\n    setKpiData(kpis);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const loadDynamicUpdates = async () => {\r\n    // Simulate loading dynamic updates similar to Crunchbase\r\n    const updates: DynamicUpdate[] = [\r\n      {\r\n        id: 'update_1',\r\n        title: t('pages.dashboard.dynamicKPI.updates.dealCreated.title'),\r\n        description: t('pages.dashboard.dynamicKPI.updates.dealCreated.description', { value: '250K' }),\r\n        timestamp: new Date(Date.now() - 5 * 60 * 1000), // 5 minutes ago\r\n        type: 'deal_closed',\r\n        value: '250K',\r\n        isNew: true\r\n      },\r\n      {\r\n        id: 'update_2',\r\n        title: t('pages.dashboard.dynamicKPI.updates.newCustomer.title'),\r\n        description: t('pages.dashboard.dynamicKPI.updates.newCustomer.description', { customer: 'XYZ Corporation' }),\r\n        timestamp: new Date(Date.now() - 15 * 60 * 1000), // 15 minutes ago\r\n        type: 'new_customer',\r\n        isNew: true\r\n      },\r\n      {\r\n        id: 'update_3',\r\n        title: t('pages.dashboard.dynamicKPI.updates.marketTrend.title'),\r\n        description: t('pages.dashboard.dynamicKPI.updates.marketTrend.description', { percent: 35 }),\r\n        timestamp: new Date(Date.now() - 30 * 60 * 1000), // 30 minutes ago\r\n        type: 'market_trend'\r\n      }\r\n    ];\r\n\r\n    setDynamicUpdates(updates);\r\n  };\r\n\r\n  const updateKPIData = async () => {\r\n    // Simulate real-time KPI updates\r\n    setKpiData(prev => prev.map(kpi => ({\r\n      ...kpi,\r\n      value: kpi.id === 'new_customers' \r\n        ? Math.floor(Math.random() * 20) + 15\r\n        : kpi.id === 'total_deals'\r\n        ? Math.floor(Math.random() * 50) + 120\r\n        : kpi.id === 'revenue'\r\n        ? `${(Math.random() * 500 + 1500).toFixed(0)}K`\r\n        : kpi.value,\r\n      change: Math.random() * 30 - 10,\r\n      lastUpdated: new Date()\r\n    })));\r\n    \r\n    setLastRefresh(new Date());\r\n  };\r\n\r\n  const addRandomUpdate = () => {\r\n    const newUpdates = [\r\n      {\r\n        title: t('pages.dashboard.dynamicKPI.updates.dealUpdated.title'),\r\n        description: t('pages.dashboard.dynamicKPI.updates.dealUpdated.description', { deal: 'CRM System' }),\r\n        type: 'deal_closed' as const\r\n      },\r\n      {\r\n        title: t('pages.dashboard.dynamicKPI.updates.newCustomer.title'),\r\n        description: t('pages.dashboard.dynamicKPI.updates.newCustomer.description', { customer: 'Tech Startup DEF' }),\r\n        type: 'new_customer' as const\r\n      },\r\n      {\r\n        title: t('pages.dashboard.dynamicKPI.updates.revenueMilestone.title'),\r\n        description: t('pages.dashboard.dynamicKPI.updates.revenueMilestone.description', { value: '2M' }),\r\n        type: 'revenue_milestone' as const,\r\n        value: '2M'\r\n      }\r\n    ];\r\n\r\n    const randomUpdate = newUpdates[Math.floor(Math.random() * newUpdates.length)];\r\n    \r\n    const update: DynamicUpdate = {\r\n      id: `update_${Date.now()}`,\r\n      title: randomUpdate.title,\r\n      description: randomUpdate.description,\r\n      timestamp: new Date(),\r\n      type: randomUpdate.type,\r\n      value: randomUpdate.value,\r\n      isNew: true\r\n    };\r\n\r\n    setDynamicUpdates(prev => [update, ...prev.slice(0, 9)]); // Keep only 10 latest\r\n    \r\n    // Remove \"new\" flag after 10 seconds\r\n    setTimeout(() => {\r\n      setDynamicUpdates(prev => \r\n        prev.map(u => u.id === update.id ? { ...u, isNew: false } : u)\r\n      );\r\n    }, 10000);\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    await updateKPIData();\r\n    addRandomUpdate();\r\n  };\r\n\r\n  const getChangeColor = (change: number) => {\r\n    if (change > 0) return theme.palette.success.main;\r\n    if (change < 0) return theme.palette.error.main;\r\n    return theme.palette.text.secondary;\r\n  };\r\n\r\n  const getChangeIcon = (change: number) => {\r\n    if (change > 0) return <TrendingUpIcon sx={{ fontSize: 16 }} />;\r\n    if (change < 0) return <TrendingDownIcon sx={{ fontSize: 16 }} />;\r\n    return null;\r\n  };\r\n\r\n  const formatTimeAgo = (date: Date) => {\r\n    const now = new Date();\r\n    const diffMs = now.getTime() - date.getTime();\r\n    const diffMins = Math.floor(diffMs / 60000);\r\n    const diffHours = Math.floor(diffMs / 3600000);\r\n    \r\n    if (diffMins < 1) return t('pages.dashboard.dynamicKPI.timeAgo.justNow');\r\n    if (diffMins < 60) return t('pages.dashboard.dynamicKPI.timeAgo.minutes', { count: diffMins });\r\n    if (diffHours < 24) return t('pages.dashboard.dynamicKPI.timeAgo.hours', { count: diffHours });\r\n    return t('pages.dashboard.dynamicKPI.timeAgo.date', { date: date.toLocaleDateString() });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mb: 4 }}>\r\n      {/* Header similar to Crunchbase */}\r\n      <Box sx={{ \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-between',\r\n        mb: 3 \r\n      }}>\r\n        <Box>\r\n          <Typography variant=\"h5\" sx={{ fontWeight: 'bold', color: 'text.primary' }}>\r\n            {t('pages.dashboard.dynamicKPI.header')}\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mt: 1 }}>\r\n            <Chip \r\n              label={t('pages.dashboard.dynamicKPI.updatesCount', { count: dynamicUpdates.length })}\r\n              size=\"small\"\r\n              sx={{ \r\n                backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 'bold'\r\n              }}\r\n            />\r\n            <Typography variant=\"caption\" color=\"text.secondary\">\r\n              {t('pages.dashboard.dynamicKPI.lastUpdated', { time: formatTimeAgo(lastRefresh) })}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <Tooltip title={showAllKpis ? t('pages.dashboard.dynamicKPI.tooltip.showCarousel') : t('pages.dashboard.dynamicKPI.tooltip.showAll')}>\r\n            <IconButton \r\n              size=\"small\" \r\n              onClick={() => setShowAllKpis(!showAllKpis)}\r\n            >\r\n              {showAllKpis ? <ViewCarouselIcon /> : <ViewModuleIcon />}\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title={t('pages.dashboard.dynamicKPI.tooltip.refresh')}>\r\n            <IconButton onClick={handleRefresh} color=\"primary\">\r\n              <RefreshIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* KPI Stats Grid */}\r\n      <Box sx={{ position: 'relative', minHeight: 180, mb: 4 }}>\r\n        <Box sx={{ \r\n          display: showAllKpis ? 'grid' : 'block',\r\n          gridTemplateColumns: {\r\n            xs: '1fr',\r\n            sm: 'repeat(2, 1fr)',\r\n            md: 'repeat(5, 1fr)'\r\n          },\r\n          gap: 3,\r\n          position: 'relative',\r\n          minHeight: 150\r\n        }}>\r\n          {kpiData.map((kpi, index) => (\r\n            <Fade \r\n              key={kpi.id}\r\n              in={showAllKpis || activeKpiIndex === index} \r\n              timeout={{ enter: 500, exit: 300 }}\r\n              style={{\r\n                display: (!showAllKpis && activeKpiIndex !== index) ? 'none' : 'block',\r\n                transitionDelay: showAllKpis ? `${index * 100}ms` : '0ms'\r\n              }}\r\n            >\r\n              <Paper\r\n                elevation={2}\r\n                sx={{\r\n                  p: 2.5,\r\n                  height: '100%',\r\n                  borderRadius: 2,\r\n                  background: `linear-gradient(135deg, ${alpha(kpi.color, 0.05)} 0%, ${alpha(kpi.color, 0.02)} 100%)`,\r\n                  border: `1px solid ${alpha(kpi.color, 0.1)}`,\r\n                  transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                  position: !showAllKpis ? 'absolute' : 'relative',\r\n                  top: 0,\r\n                  left: 0,\r\n                  width: !showAllKpis ? '100%' : 'auto',\r\n                  zIndex: !showAllKpis && activeKpiIndex === index ? 2 : 1,\r\n                  '&:hover': {\r\n                    transform: 'translateY(-2px)',\r\n                    boxShadow: `0 8px 25px ${alpha(kpi.color, 0.15)}`\r\n                  }\r\n                }}\r\n              >\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                  <Box \r\n                    sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      p: 1, \r\n                      borderRadius: 1,\r\n                      backgroundColor: alpha(kpi.color, 0.1)\r\n                    }}\r\n                  >\r\n                    <Box sx={{ color: kpi.color }}>\r\n                      {kpi.icon}\r\n                    </Box>\r\n                  </Box>\r\n                  <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', color: kpi.color }}>\r\n                    {kpi.title}\r\n                  </Typography>\r\n                </Box>\r\n                \r\n                {isLoading ? (\r\n                  <Skeleton variant=\"rectangular\" width=\"100%\" height={40} />\r\n                ) : (\r\n                  <Typography variant=\"h4\" sx={{ fontWeight: 'bold', mb: 1, color: 'text.primary' }}>\r\n                    {kpi.value}\r\n                  </Typography>\r\n                )}\r\n\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                  {getChangeIcon(kpi.change)}\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    sx={{\r\n                      color: getChangeColor(kpi.change),\r\n                      fontWeight: 'medium'\r\n                    }}\r\n                  >\r\n                    {kpi.change > 0 ? '+' : ''}{kpi.change.toFixed(1)}%\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                    {kpi.changeLabel}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, display: 'block' }}>\r\n                  {kpi.description}\r\n                </Typography>\r\n              </Paper>\r\n            </Fade>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Dynamic Updates Section - Similar to Crunchbase activity feed */}\r\n      <Paper\r\n        elevation={1}\r\n        sx={{\r\n          borderRadius: 2,\r\n          overflow: 'hidden',\r\n          border: `1px solid ${theme.palette.divider}`\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            p: 2,\r\n            backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n            borderBottom: `1px solid ${theme.palette.divider}`\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n            {t('pages.dashboard.dynamicKPI.activity.title')}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            {t('pages.dashboard.dynamicKPI.activity.subtitle')}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box sx={{ maxHeight: 300, overflow: 'auto' }}>\r\n          {dynamicUpdates.map((update, index) => (\r\n            <Box\r\n              key={update.id}\r\n              sx={{\r\n                p: 2,\r\n                borderBottom: index < dynamicUpdates.length - 1 ? `1px solid ${theme.palette.divider}` : 'none',\r\n                backgroundColor: update.isNew ? alpha(theme.palette.success.main, 0.05) : 'transparent',\r\n                transition: 'all 0.3s ease',\r\n                '&:hover': {\r\n                  backgroundColor: alpha(theme.palette.action.hover, 0.5)\r\n                }\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\r\n                <Box sx={{ flex: 1 }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 0.5 }}>\r\n                    <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold' }}>\r\n                      {update.title}\r\n                    </Typography>\r\n                    {update.isNew && (\r\n                      <Chip\r\n                        label={t('pages.dashboard.dynamicKPI.activity.new')}\r\n                        size=\"small\"\r\n                        sx={{\r\n                          height: 18,\r\n                          fontSize: '0.7rem',\r\n                          backgroundColor: theme.palette.success.main,\r\n                          color: 'white'\r\n                        }}\r\n                      />\r\n                    )}\r\n                    {update.value && (\r\n                      <Chip\r\n                        label={update.value}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        sx={{ height: 18, fontSize: '0.7rem' }}\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {update.description}\r\n                  </Typography>\r\n                </Box>\r\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 2 }}>\r\n                  {formatTimeAgo(update.timestamp)}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DynamicKPIStats;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Chip,\r\n  Card,\r\n  CardContent,\r\n  LinearProgress,\r\n  useTheme,\r\n  alpha,\r\n  Tab,\r\n  Tabs,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport {\r\n  TrendingUp as TrendingUpIcon,\r\n  Psychology as PsychologyIcon,\r\n  Timeline as TimelineIcon,\r\n  Lightbulb as LightbulbIcon,\r\n  ShowChart as ShowChartIcon,\r\n  AttachMoney as MoneyIcon,\r\n  People as PeopleIcon,\r\n  Business as BusinessIcon,\r\n  Refresh as RefreshIcon,\r\n  Star as StarIcon,\r\n  ArrowUpward as ArrowUpIcon,\r\n  ArrowDownward as ArrowDownIcon\r\n} from '@mui/icons-material';\r\nimport { aiOrchestrator, AIRequest } from '../../../services/aiOrchestration';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\ninterface TrendingItem {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  growth: string;\r\n  confidence: number;\r\n  category: 'market' | 'technology' | 'industry';\r\n  icon: React.ReactNode;\r\n  color: string;\r\n}\r\n\r\ninterface InsightItem {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  impact: 'high' | 'medium' | 'low';\r\n  actionable: boolean;\r\n  source: string;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface PredictionItem {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  probability: number;\r\n  timeframe: string;\r\n  value?: string;\r\n  type: 'deal' | 'market' | 'customer' | 'revenue';\r\n  riskLevel: 'low' | 'medium' | 'high';\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ pt: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TrendingInsightsPredictions: React.FC = () => {\r\n  const theme = useTheme();\r\n  const { t, i18n } = useTranslation();\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [trendingData, setTrendingData] = useState<TrendingItem[]>([]);\r\n  const [insightsData, setInsightsData] = useState<InsightItem[]>([]);\r\n  const [predictionsData, setPredictionsData] = useState<PredictionItem[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadAllData();\r\n    \r\n    // Auto refresh every 2 minutes\r\n    const interval = setInterval(loadAllData, 120000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const loadAllData = async () => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Load trending data\r\n      const trendingRequest: AIRequest = {\r\n        id: `trending_${Date.now()}`,\r\n        type: 'market_analysis',\r\n        data: { type: 'trending' },\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      const trendingResponse = await aiOrchestrator.processRequest(trendingRequest);\r\n      setTrendingData(generateTrendingData(trendingResponse.result));\r\n\r\n      // Load insights data\r\n      const insightsRequest: AIRequest = {\r\n        id: `insights_${Date.now()}`,\r\n        type: 'market_analysis',\r\n        data: { type: 'insights' },\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      const insightsResponse = await aiOrchestrator.processRequest(insightsRequest);\r\n      setInsightsData(generateInsightsData(insightsResponse.result));\r\n\r\n      // Load predictions data\r\n      const predictionsRequest: AIRequest = {\r\n        id: `predictions_${Date.now()}`,\r\n        type: 'deal_prediction',\r\n        data: { type: 'predictions' },\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      const predictionsResponse = await aiOrchestrator.processRequest(predictionsRequest);\r\n      setPredictionsData(generatePredictionsData(predictionsResponse.result));\r\n      \r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateTrendingData = (aiResult: any): TrendingItem[] => {\r\n    const trends = aiResult?.trends || [];\r\n    \r\n    const defaultTrends: TrendingItem[] = [\r\n      {\r\n        id: 'cloud-computing',\r\n        title: 'Cloud Computing',\r\n        description: t('pages.dashboard.trendingDefaults.trends.cloud', 'SMEs are moving to cloud at record speed'),\r\n        growth: '+25%',\r\n        confidence: 0.92,\r\n        category: 'technology',\r\n        icon: <ShowChartIcon />,\r\n        color: theme.palette.primary.main\r\n      },\r\n      {\r\n        id: 'ai-solutions',\r\n        title: 'AI/ML Solutions',\r\n        description: t('pages.dashboard.trendingDefaults.trends.ai', 'Demand for AI solutions surges across enterprises'),\r\n        growth: '+35%',\r\n        confidence: 0.88,\r\n        category: 'technology',\r\n        icon: <PsychologyIcon />,\r\n        color: theme.palette.secondary.main\r\n      },\r\n      {\r\n        id: 'cybersecurity',\r\n        title: 'Cybersecurity',\r\n        description: t('pages.dashboard.trendingDefaults.trends.cyber', 'Cybersecurity becomes top priority after attacks'),\r\n        growth: '+18%',\r\n        confidence: 0.85,\r\n        category: 'technology',\r\n        icon: <BusinessIcon />,\r\n        color: theme.palette.warning.main\r\n      },\r\n      {\r\n        id: 'digital-transformation',\r\n        title: 'Digital Transformation',\r\n        description: t('pages.dashboard.trendingDefaults.trends.dx', 'Digital transformation accelerates across industries'),\r\n        growth: '+22%',\r\n        confidence: 0.90,\r\n        category: 'industry',\r\n        icon: <TrendingUpIcon />,\r\n        color: theme.palette.success.main\r\n      }\r\n    ];\r\n\r\n    // Merge AI data with default data\r\n    return trends.length > 0 ? trends.map((trend: any, index: number) => ({\r\n      ...defaultTrends[index % defaultTrends.length],\r\n      title: trend.name || defaultTrends[index % defaultTrends.length].title,\r\n      growth: trend.growth || defaultTrends[index % defaultTrends.length].growth,\r\n      confidence: trend.confidence || defaultTrends[index % defaultTrends.length].confidence\r\n    })) : defaultTrends;\r\n  };\r\n\r\n  const generateInsightsData = (aiResult: any): InsightItem[] => {\r\n    const insights = aiResult?.insights || [];\r\n    \r\n    const defaultInsights: InsightItem[] = [\r\n      {\r\n        id: 'market-growth',\r\n        title: t('pages.dashboard.trendingDefaults.insights.marketGrowth.title', 'Tech market booms in Q4'),\r\n        description: t('pages.dashboard.trendingDefaults.insights.marketGrowth.desc', 'Revenue from tech projects up 28% vs Q3, led by AI and Cloud'),\r\n        impact: 'high',\r\n        actionable: true,\r\n        source: 'Market Analysis AI',\r\n        timestamp: new Date()\r\n      },\r\n      {\r\n        id: 'customer-behavior',\r\n        title: t('pages.dashboard.trendingDefaults.insights.customerBehavior.title', 'Customer behavior shifts'),\r\n        description: t('pages.dashboard.trendingDefaults.insights.customerBehavior.desc', 'SMEs prefer integrated solutions over standalone products'),\r\n        impact: 'medium',\r\n        actionable: true,\r\n        source: 'Customer Analytics',\r\n        timestamp: new Date(Date.now() - 30 * 60 * 1000)\r\n      },\r\n      {\r\n        id: 'competitive-landscape',\r\n        title: t('pages.dashboard.trendingDefaults.insights.competitive.title', 'Competitive landscape shifts'),\r\n        description: t('pages.dashboard.trendingDefaults.insights.competitive.desc', 'Rivals focus on pricing; adjust pricing strategy'),\r\n        impact: 'high',\r\n        actionable: true,\r\n        source: 'Competitive Intelligence',\r\n        timestamp: new Date(Date.now() - 60 * 60 * 1000)\r\n      },\r\n      {\r\n        id: 'technology-adoption',\r\n        title: t('pages.dashboard.trendingDefaults.insights.techAdoption.title', 'Faster tech adoption'),\r\n        description: t('pages.dashboard.trendingDefaults.insights.techAdoption.desc', 'Time from demo to purchase down 40%—faster decisions'),\r\n        impact: 'medium',\r\n        actionable: false,\r\n        source: 'Sales Analytics',\r\n        timestamp: new Date(Date.now() - 90 * 60 * 1000)\r\n      }\r\n    ];\r\n\r\n    return insights.length > 0 ? insights.map((insight: string, index: number) => ({\r\n      ...defaultInsights[index % defaultInsights.length],\r\n      description: insight\r\n    })) : defaultInsights;\r\n  };\r\n\r\n  const generatePredictionsData = (aiResult: any): PredictionItem[] => {\r\n    const predictions = aiResult?.topDeals || [];\r\n    \r\n    const defaultPredictions: PredictionItem[] = [\r\n      {\r\n        id: 'deal-abc-corp',\r\n        title: t('pages.dashboard.trendingDefaults.predictions.abcDeal.title', 'Deal ABC Corp - ERP System'),\r\n        description: t('pages.dashboard.trendingDefaults.predictions.abcDeal.desc', 'ERP implementation for ABC Corp likely to succeed'),\r\n        probability: 0.85,\r\n        timeframe: t('pages.dashboard.trendingDefaults.predictions.abcDeal.timeframe', '2 weeks'),\r\n        value: '250K',\r\n        type: 'deal',\r\n        riskLevel: 'low'\r\n      },\r\n      {\r\n        id: 'market-ai-growth',\r\n        title: t('pages.dashboard.trendingDefaults.predictions.aiMarket.title', 'AI market will surge'),\r\n        description: t('pages.dashboard.trendingDefaults.predictions.aiMarket.desc', 'AI/ML market to grow 40% in next 6 months'),\r\n        probability: 0.78,\r\n        timeframe: t('pages.dashboard.trendingDefaults.predictions.aiMarket.timeframe', '6 months'),\r\n        type: 'market',\r\n        riskLevel: 'medium'\r\n      },\r\n      {\r\n        id: 'customer-xyz-expansion',\r\n        title: t('pages.dashboard.trendingDefaults.predictions.xyzCustomer.title', 'Customer XYZ expansion'),\r\n        description: t('pages.dashboard.trendingDefaults.predictions.xyzCustomer.desc', 'XYZ Ltd likely to buy CRM module in Q1 next year'),\r\n        probability: 0.72,\r\n        timeframe: t('pages.dashboard.trendingDefaults.predictions.xyzCustomer.timeframe', '3 months'),\r\n        value: '180K',\r\n        type: 'customer',\r\n        riskLevel: 'low'\r\n      },\r\n      {\r\n        id: 'revenue-milestone',\r\n        title: t('pages.dashboard.trendingDefaults.predictions.revenueMilestone.title', 'Reach 3M revenue milestone'),\r\n        description: t('pages.dashboard.trendingDefaults.predictions.revenueMilestone.desc', 'Forecast to reach 3M revenue in Q1 next year'),\r\n        probability: 0.68,\r\n        timeframe: t('pages.dashboard.trendingDefaults.predictions.revenueMilestone.timeframe', '4 months'),\r\n        value: '3M',\r\n        type: 'revenue',\r\n        riskLevel: 'medium'\r\n      }\r\n    ];\r\n\r\n    return predictions.length > 0 ? predictions.map((prediction: any, index: number) => ({\r\n      ...defaultPredictions[index % defaultPredictions.length],\r\n      title: prediction.name || defaultPredictions[index % defaultPredictions.length].title,\r\n      probability: prediction.probability || defaultPredictions[index % defaultPredictions.length].probability,\r\n      value: prediction.value ? `${prediction.value}` : defaultPredictions[index % defaultPredictions.length].value\r\n    })) : defaultPredictions;\r\n  };\r\n\r\n  const getImpactColor = (impact: string) => {\r\n    switch (impact) {\r\n      case 'high': return theme.palette.error.main;\r\n      case 'medium': return theme.palette.warning.main;\r\n      case 'low': return theme.palette.success.main;\r\n      default: return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const getRiskColor = (risk: string) => {\r\n    switch (risk) {\r\n      case 'high': return theme.palette.error.main;\r\n      case 'medium': return theme.palette.warning.main;\r\n      case 'low': return theme.palette.success.main;\r\n      default: return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const getTypeIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'deal': return <MoneyIcon />;\r\n      case 'market': return <ShowChartIcon />;\r\n      case 'customer': return <PeopleIcon />;\r\n      case 'revenue': return <TrendingUpIcon />;\r\n      default: return <StarIcon />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={2} sx={{ borderRadius: 2, overflow: 'hidden' }}>\r\n      {/* Header */}\r\n      <Box sx={{ \r\n        p: 3, \r\n        backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n        borderBottom: `1px solid ${theme.palette.divider}`\r\n      }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <Box>\r\n            <Typography variant=\"h5\" sx={{ fontWeight: 'bold', mb: 1 }}>\r\n              {t('pages.dashboard.trendingInsights.header')}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {t('pages.dashboard.trendingInsights.subtitle')}\r\n            </Typography>\r\n          </Box>\r\n          <Tooltip title={t('pages.dashboard.trendingInsights.tooltip.refresh')}>\r\n            <IconButton onClick={loadAllData} color=\"primary\">\r\n              <RefreshIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Tabs */}\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs \r\n          value={tabValue} \r\n          onChange={(e, newValue) => setTabValue(newValue)}\r\n          sx={{ px: 3 }}\r\n        >\r\n          <Tab \r\n            icon={<TrendingUpIcon />} \r\n            label={t('pages.dashboard.trendingInsights.tabs.trending')} \r\n            iconPosition=\"start\"\r\n            sx={{ minHeight: 'auto', py: 2 }}\r\n          />\r\n          <Tab \r\n            icon={<LightbulbIcon />} \r\n            label={t('pages.dashboard.trendingInsights.tabs.insights')} \r\n            iconPosition=\"start\"\r\n            sx={{ minHeight: 'auto', py: 2 }}\r\n          />\r\n          <Tab \r\n            icon={<TimelineIcon />} \r\n            label={t('pages.dashboard.trendingInsights.tabs.predictions')} \r\n            iconPosition=\"start\"\r\n            sx={{ minHeight: 'auto', py: 2 }}\r\n          />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      {/* Tab Panels */}\r\n      <Box sx={{ p: 3 }}>\r\n        {/* Trending Panel */}\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box \r\n            sx={{ \r\n              display: 'grid',\r\n              gridTemplateColumns: {\r\n                xs: '1fr',\r\n                sm: 'repeat(2, 1fr)'\r\n              },\r\n              gap: 2\r\n            }}\r\n          >\r\n            {trendingData.map((trend) => (\r\n              <Card \r\n                key={trend.id}\r\n                elevation={1}\r\n                sx={{ \r\n                  height: '100%',\r\n                  border: `1px solid ${alpha(trend.color, 0.2)}`,\r\n                  '&:hover': {\r\n                    transform: 'translateY(-2px)',\r\n                    boxShadow: `0 4px 20px ${alpha(trend.color, 0.15)}`\r\n                  },\r\n                  transition: 'all 0.3s ease'\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <Avatar\r\n                      sx={{\r\n                        backgroundColor: alpha(trend.color, 0.1),\r\n                        color: trend.color,\r\n                        mr: 2\r\n                      }}\r\n                    >\r\n                      {trend.icon}\r\n                    </Avatar>\r\n                    <Box sx={{ flex: 1 }}>\r\n                      <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n                        {trend.title}\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                        <Chip\r\n                          label={trend.growth}\r\n                          size=\"small\"\r\n                          icon={<ArrowUpIcon sx={{ fontSize: 14 }} />}\r\n                          sx={{\r\n                            backgroundColor: alpha(theme.palette.success.main, 0.1),\r\n                            color: theme.palette.success.main,\r\n                            fontWeight: 'bold'\r\n                          }}\r\n                        />\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {t('pages.dashboard.trendingInsights.labels.confidence')}: {Math.round(trend.confidence * 100)}%\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {trend.description}\r\n                  </Typography>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    value={trend.confidence * 100}\r\n                    sx={{\r\n                      mt: 2,\r\n                      height: 6,\r\n                      borderRadius: 3,\r\n                      backgroundColor: alpha(trend.color, 0.1),\r\n                      '& .MuiLinearProgress-bar': {\r\n                        backgroundColor: trend.color,\r\n                        borderRadius: 3\r\n                      }\r\n                    }}\r\n                  />\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n        </TabPanel>\r\n\r\n        {/* Insights Panel */}\r\n        <TabPanel value={tabValue} index={1}>\r\n          <List>\r\n            {insightsData.map((insight, index) => (\r\n              <React.Fragment key={insight.id}>\r\n                <ListItem alignItems=\"flex-start\" sx={{ px: 0 }}>\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      sx={{\r\n                        backgroundColor: alpha(getImpactColor(insight.impact), 0.1),\r\n                        color: getImpactColor(insight.impact)\r\n                      }}\r\n                    >\r\n                      <LightbulbIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\r\n                        <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\r\n                          {insight.title}\r\n                        </Typography>\r\n                        <Chip\r\n                          label={insight.impact.toUpperCase()}\r\n                          size=\"small\"\r\n                          sx={{\r\n                            backgroundColor: alpha(getImpactColor(insight.impact), 0.1),\r\n                            color: getImpactColor(insight.impact),\r\n                            fontWeight: 'bold',\r\n                            fontSize: '0.7rem'\r\n                          }}\r\n                        />\r\n                        {insight.actionable && (\r\n                          <Chip\r\n                            label={t('pages.dashboard.trendingInsights.labels.actionable')}\r\n                            size=\"small\"\r\n                            sx={{\r\n                              backgroundColor: alpha(theme.palette.info.main, 0.1),\r\n                              color: theme.palette.info.main,\r\n                              fontSize: '0.7rem'\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </Box>\r\n                    }\r\n                    secondary={\r\n                      <Box>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                          {insight.description}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {t('pages.dashboard.trendingInsights.labels.source')}: {insight.source} • {insight.timestamp.toLocaleTimeString(i18n.language)}\r\n                        </Typography>\r\n                      </Box>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                {index < insightsData.length - 1 && <Divider variant=\"inset\" component=\"li\" />}\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n        </TabPanel>\r\n\r\n        {/* Predictions Panel */}\r\n        <TabPanel value={tabValue} index={2}>\r\n          <Box \r\n            sx={{ \r\n              display: 'grid',\r\n              gridTemplateColumns: {\r\n                xs: '1fr',\r\n                sm: 'repeat(2, 1fr)'\r\n              },\r\n              gap: 2\r\n            }}\r\n          >\r\n            {predictionsData.map((prediction) => (\r\n              <Card \r\n                key={prediction.id}\r\n                elevation={1}\r\n                sx={{ \r\n                  height: '100%',\r\n                  border: `1px solid ${alpha(getRiskColor(prediction.riskLevel), 0.2)}`,\r\n                  '&:hover': {\r\n                    transform: 'translateY(-2px)',\r\n                    boxShadow: `0 4px 20px ${alpha(getRiskColor(prediction.riskLevel), 0.15)}`\r\n                  },\r\n                  transition: 'all 0.3s ease'\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <Avatar\r\n                      sx={{\r\n                        backgroundColor: alpha(getRiskColor(prediction.riskLevel), 0.1),\r\n                        color: getRiskColor(prediction.riskLevel),\r\n                        mr: 2\r\n                      }}\r\n                    >\r\n                      {getTypeIcon(prediction.type)}\r\n                    </Avatar>\r\n                    <Box sx={{ flex: 1 }}>\r\n                      <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', mb: 0.5 }}>\r\n                        {prediction.title}\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flexWrap: 'wrap' }}>\r\n                        <Chip\r\n                          label={t('pages.dashboard.trendingInsights.labels.probability', { percent: Math.round(prediction.probability * 100) })}\r\n                          size=\"small\"\r\n                          sx={{\r\n                            backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                            color: theme.palette.primary.main,\r\n                            fontWeight: 'bold'\r\n                          }}\r\n                        />\r\n                        {prediction.value && (\r\n                          <Chip\r\n                            label={prediction.value}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                          />\r\n                        )}\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {prediction.timeframe}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n                    {prediction.description}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <Chip\r\n                      label={`${t('pages.dashboard.trendingInsights.labels.risk')}: ${prediction.riskLevel}`}\r\n                      size=\"small\"\r\n                      sx={{\r\n                        backgroundColor: alpha(getRiskColor(prediction.riskLevel), 0.1),\r\n                        color: getRiskColor(prediction.riskLevel),\r\n                        textTransform: 'capitalize'\r\n                      }}\r\n                    />\r\n                    <LinearProgress\r\n                      variant=\"determinate\"\r\n                      value={prediction.probability * 100}\r\n                      sx={{\r\n                        width: '60%',\r\n                        height: 6,\r\n                        borderRadius: 3,\r\n                        backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                        '& .MuiLinearProgress-bar': {\r\n                          backgroundColor: theme.palette.primary.main,\r\n                          borderRadius: 3\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n        </TabPanel>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TrendingInsightsPredictions;\r\n","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { \r\n  Box, \r\n  Paper, \r\n  Typography, \r\n  ToggleButtonGroup, \r\n  ToggleButton,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  SelectChangeEvent\r\n} from '@mui/material';\r\nimport {\r\n  BarChart as BarChartIcon,\r\n  PieChart as PieChartIcon,\r\n  ShowChart as LineChartIcon,\r\n  TableChart as TableChartIcon\r\n} from '@mui/icons-material';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  LineChart,\r\n  Line\r\n} from 'recharts';\r\n\r\n// Dữ liệu mẫu cho biểu đồ doanh thu theo nhân viên (tên nhân sự là dữ liệu mẫu, giữ nguyên)\r\nconst REVENUE_DATA = [\r\n  { name: 'Nguyễn Văn A', value: 1200 },\r\n  { name: 'Trần Thị B', value: 950 },\r\n  { name: 'Lê Văn C', value: 850 },\r\n  { name: 'Phạm Thị D', value: 700 },\r\n  { name: 'Hoàng Văn E', value: 500 },\r\n];\r\n\r\n// Các tập dữ liệu dùng nhãn cần được bản địa hóa sẽ được tạo bên trong component bằng t()\r\n\r\n// Dữ liệu mẫu cho khách hàng mới sẽ được tạo trong component\r\n\r\n// Dữ liệu mẫu cho doanh thu theo tháng sẽ được tạo trong component\r\n\r\n// Dữ liệu mẫu cho tỉ lệ chuyển đổi sẽ được tạo trong component\r\n\r\n// Dữ liệu mẫu cho biểu đồ doanh thu theo tháng sẽ được tạo trong component\r\n\r\n// Màu sắc cho biểu đồ\r\nconst COLORS = ['#3b82f6', '#10b981', '#f59e0b', '#8b5cf6', '#ef4444'];\r\n\r\n// Loại biểu đồ\r\ntype ChartType = 'bar' | 'pie' | 'line' | 'table';\r\n\r\n// Loại thời gian\r\ntype TimeRange = 'today' | 'week' | 'month' | 'quarter' | 'year';\r\n\r\ninterface DynamicChartsProps {\r\n  query: string;\r\n}\r\n\r\nconst DynamicCharts: React.FC<DynamicChartsProps> = ({ query }) => {\r\n  const { t } = useTranslation();\r\n  const [chartType, setChartType] = useState<ChartType>('bar');\r\n  const [timeRange, setTimeRange] = useState<TimeRange>('month');\r\n\r\n  const handleChartTypeChange = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newChartType: ChartType | null,\r\n  ) => {\r\n    if (newChartType !== null) {\r\n      setChartType(newChartType);\r\n    }\r\n  };\r\n\r\n  const handleTimeRangeChange = (event: SelectChangeEvent) => {\r\n    setTimeRange(event.target.value as TimeRange);\r\n  };\r\n\r\n  // Xác định loại biểu đồ và dữ liệu dựa trên query\r\n  const getChartTypeFromQuery = (query: string): { type: string; chartType: ChartType } => {\r\n    const lowercaseQuery = query.toLowerCase();\r\n    \r\n    // Khách hàng mới\r\n    if (lowercaseQuery.includes('khách hàng mới') || \r\n        (lowercaseQuery.includes('khách hàng') && lowercaseQuery.includes('mới'))) {\r\n      return { type: 'newCustomers', chartType: 'bar' };\r\n    }\r\n    \r\n    // Doanh thu theo nhân viên\r\n    else if (lowercaseQuery.includes('doanh thu') && lowercaseQuery.includes('nhân viên')) {\r\n      return { type: 'revenueByEmployee', chartType: 'bar' };\r\n    }\r\n    \r\n    // Trạng thái deal\r\n    else if ((lowercaseQuery.includes('deal') || lowercaseQuery.includes('giao dịch')) && \r\n             (lowercaseQuery.includes('trạng thái') || lowercaseQuery.includes('giai đoạn'))) {\r\n      return { type: 'dealStatus', chartType: 'pie' };\r\n    }\r\n    \r\n    // Doanh thu theo tháng\r\n    else if (lowercaseQuery.includes('doanh thu') && \r\n             (lowercaseQuery.includes('tháng') || lowercaseQuery.includes('thời gian'))) {\r\n      return { type: 'revenueByMonth', chartType: 'line' };\r\n    }\r\n    \r\n    // Tỉ lệ chuyển đổi\r\n    else if (lowercaseQuery.includes('tỉ lệ') || lowercaseQuery.includes('chuyển đổi')) {\r\n      return { type: 'conversionRate', chartType: 'pie' };\r\n    }\r\n    \r\n    // Mặc định hiển thị biểu đồ doanh thu theo nhân viên\r\n    return { type: 'revenueByEmployee', chartType: 'bar' };\r\n  };\r\n\r\n  const { type: chartDataType } = getChartTypeFromQuery(query || '');\r\n  \r\n  // Tự động cập nhật loại biểu đồ dựa trên câu hỏi nếu có query mới\r\n  React.useEffect(() => {\r\n    if (query) {\r\n      const { chartType: newChartType } = getChartTypeFromQuery(query);\r\n      setChartType(newChartType);\r\n    }\r\n  }, [query]);\r\n  \r\n  // Tạo dữ liệu bản địa hóa cho các tập dữ liệu dùng nhãn\r\n  const dealStatusData = [\r\n    { name: t('pages.dashboard.dynamicCharts.dealStatus.lead', { defaultValue: 'Lead' }), value: 45, color: '#f87171' },\r\n    { name: t('pages.dashboard.dynamicCharts.dealStatus.quote', { defaultValue: 'Quote' }), value: 32, color: '#fbbf24' },\r\n    { name: t('pages.dashboard.dynamicCharts.dealStatus.negotiation', { defaultValue: 'Negotiation' }), value: 18, color: '#60a5fa' },\r\n    { name: t('pages.dashboard.dynamicCharts.dealStatus.win', { defaultValue: 'Win' }), value: 38, color: '#34d399' },\r\n    { name: t('pages.dashboard.dynamicCharts.dealStatus.lose', { defaultValue: 'Lose' }), value: 23, color: '#9ca3af' },\r\n  ];\r\n\r\n  const newCustomersData = [\r\n    { name: t('pages.dashboard.dynamicCharts.newCustomers.today', { defaultValue: 'Today' }), value: 12 },\r\n    { name: t('pages.dashboard.dynamicCharts.newCustomers.yesterday', { defaultValue: 'Yesterday' }), value: 10 },\r\n    { name: t('pages.dashboard.dynamicCharts.newCustomers.daysAgo2', { defaultValue: '2 days ago' }), value: 8 },\r\n    { name: t('pages.dashboard.dynamicCharts.newCustomers.daysAgo3', { defaultValue: '3 days ago' }), value: 15 },\r\n    { name: t('pages.dashboard.dynamicCharts.newCustomers.daysAgo4', { defaultValue: '4 days ago' }), value: 7 },\r\n  ];\r\n\r\n  const revenueByMonthData = [\r\n    { name: t('pages.dashboard.dynamicCharts.months.m1', { defaultValue: 'Jan' }), value: 800 },\r\n    { name: t('pages.dashboard.dynamicCharts.months.m2', { defaultValue: 'Feb' }), value: 950 },\r\n    { name: t('pages.dashboard.dynamicCharts.months.m3', { defaultValue: 'Mar' }), value: 1100 },\r\n    { name: t('pages.dashboard.dynamicCharts.months.m4', { defaultValue: 'Apr' }), value: 1250 },\r\n    { name: t('pages.dashboard.dynamicCharts.months.m5', { defaultValue: 'May' }), value: 1400 },\r\n    { name: t('pages.dashboard.dynamicCharts.months.m6', { defaultValue: 'Jun' }), value: 1600 },\r\n  ];\r\n\r\n  const conversionRateData = [\r\n    { name: t('pages.dashboard.dynamicCharts.conversion.converted', { defaultValue: 'Converted' }), value: 65, color: '#34d399' },\r\n    { name: t('pages.dashboard.dynamicCharts.conversion.notConverted', { defaultValue: 'Not converted' }), value: 35, color: '#f87171' },\r\n  ];\r\n\r\n  const monthlyRevenueData = [\r\n    { name: t('pages.dashboard.dynamicCharts.months.m1', { defaultValue: 'Jan' }), value: 1200 },\r\n    { name: t('pages.dashboard.dynamicCharts.months.m2', { defaultValue: 'Feb' }), value: 1900 },\r\n    { name: t('pages.dashboard.dynamicCharts.months.m3', { defaultValue: 'Mar' }), value: 1500 },\r\n    { name: t('pages.dashboard.dynamicCharts.months.m4', { defaultValue: 'Apr' }), value: 2200 },\r\n    { name: t('pages.dashboard.dynamicCharts.months.m5', { defaultValue: 'May' }), value: 1800 },\r\n    { name: t('pages.dashboard.dynamicCharts.months.m6', { defaultValue: 'Jun' }), value: 2400 },\r\n    { name: t('pages.dashboard.dynamicCharts.months.m7', { defaultValue: 'Jul' }), value: 2100 },\r\n  ];\r\n\r\n  // Lấy dữ liệu phù hợp với loại biểu đồ\r\n  const getChartData = () => {\r\n    switch (chartDataType) {\r\n      case 'newCustomers':\r\n        return newCustomersData;\r\n      case 'dealStatus':\r\n        return dealStatusData;\r\n      case 'revenueByMonth':\r\n        return revenueByMonthData;\r\n      case 'conversionRate':\r\n        return conversionRateData;\r\n      case 'revenueByEmployee':\r\n      default:\r\n        return REVENUE_DATA;\r\n    }\r\n  };\r\n  \r\n  const chartData = getChartData();\r\n\r\n  // Format giá trị tiền tệ\r\n  const formatValue = (value: number) => {\r\n    return t('pages.dashboard.dynamicCharts.valueWithUnit', { value, defaultValue: `${value} triệu` });\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={2} sx={{ p: 3, borderRadius: 2, mb: 4 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n          {query\r\n            ? t('pages.dashboard.dynamicCharts.resultsFor', { query, defaultValue: `📈 Results for: \"${query}\"` })\r\n            : t('pages.dashboard.dynamicCharts.title', { defaultValue: '📈 Business data analytics' })}\r\n        </Typography>\r\n        \r\n        <Box sx={{ display: 'flex', gap: 2 }}>\r\n          <ToggleButtonGroup\r\n            size=\"small\"\r\n            value={chartType}\r\n            exclusive\r\n            onChange={handleChartTypeChange}\r\n            aria-label=\"chart type\"\r\n          >\r\n            <ToggleButton value=\"bar\" aria-label=\"bar chart\">\r\n              <BarChartIcon fontSize=\"small\" />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"pie\" aria-label=\"pie chart\">\r\n              <PieChartIcon fontSize=\"small\" />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"line\" aria-label=\"line chart\">\r\n              <LineChartIcon fontSize=\"small\" />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"table\" aria-label=\"table\">\r\n              <TableChartIcon fontSize=\"small\" />\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n          \r\n          <FormControl size=\"small\" sx={{ minWidth: 120 }}>\r\n            <InputLabel id=\"time-range-label\">{t('pages.dashboard.dynamicCharts.time', { defaultValue: 'Time' })}</InputLabel>\r\n            <Select\r\n              labelId=\"time-range-label\"\r\n              id=\"time-range\"\r\n              value={timeRange}\r\n              label={t('pages.dashboard.dynamicCharts.time', { defaultValue: 'Time' })}\r\n              onChange={handleTimeRangeChange}\r\n            >\r\n              <MenuItem value=\"today\">{t('pages.dashboard.dynamicCharts.timeRanges.today', { defaultValue: 'Today' })}</MenuItem>\r\n              <MenuItem value=\"week\">{t('pages.dashboard.dynamicCharts.timeRanges.week', { defaultValue: 'This week' })}</MenuItem>\r\n              <MenuItem value=\"month\">{t('pages.dashboard.dynamicCharts.timeRanges.month', { defaultValue: 'This month' })}</MenuItem>\r\n              <MenuItem value=\"quarter\">{t('pages.dashboard.dynamicCharts.timeRanges.quarter', { defaultValue: 'This quarter' })}</MenuItem>\r\n              <MenuItem value=\"year\">{t('pages.dashboard.dynamicCharts.timeRanges.year', { defaultValue: 'This year' })}</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box sx={{ height: 400, width: '100%' }}>\r\n        {chartType === 'bar' && (\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart\r\n              data={chartDataType === 'revenueByMonth' ? monthlyRevenueData : REVENUE_DATA}\r\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis />\r\n              <Tooltip formatter={(value) => formatValue(value as number)} />\r\n              <Legend />\r\n              <Bar \r\n                dataKey=\"value\" \r\n                name={chartDataType === 'revenueByMonth' \r\n                  ? t('pages.dashboard.dynamicCharts.series.revenueByMonth', { defaultValue: 'Revenue by month' }) \r\n                  : t('pages.dashboard.dynamicCharts.series.revenueByEmployee', { defaultValue: 'Revenue by employee' })} \r\n                fill=\"#3b82f6\" \r\n              />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n\r\n        {chartType === 'pie' && (\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <PieChart>\r\n              <Pie\r\n                data={chartDataType === 'dealStatus' ? dealStatusData : REVENUE_DATA}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                labelLine={false}\r\n                outerRadius={150}\r\n                fill=\"#8884d8\"\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                label={({ name, percent }) => `${name}: ${percent ? (percent * 100).toFixed(0) : 0}%`}\r\n              >\r\n                {chartData.map((entry, index) => (\r\n                  <Cell \r\n                    key={`cell-${index}`} \r\n                    fill={(entry as any).color || COLORS[index % COLORS.length]} \r\n                  />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip formatter={(value) => formatValue(value as number)} />\r\n              <Legend />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n\r\n        {chartType === 'line' && (\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <LineChart\r\n              data={monthlyRevenueData}\r\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis />\r\n              <Tooltip formatter={(value) => formatValue(value as number)} />\r\n              <Legend />\r\n              <Line \r\n                type=\"monotone\" \r\n                dataKey=\"value\" \r\n                name={t('pages.dashboard.dynamicCharts.series.revenueByMonth', { defaultValue: 'Revenue by month' })} \r\n                stroke=\"#3b82f6\" \r\n                activeDot={{ r: 8 }} \r\n              />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n\r\n        {chartType === 'table' && (\r\n          <Box sx={{ height: '100%', overflow: 'auto' }}>\r\n            <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n              <thead>\r\n                <tr style={{ borderBottom: '2px solid #e2e8f0' }}>\r\n                  <th style={{ padding: '12px 16px', textAlign: 'left' }}>{t('pages.dashboard.dynamicCharts.table.name', { defaultValue: 'Name' })}</th>\r\n                  <th style={{ padding: '12px 16px', textAlign: 'right' }}>{t('pages.dashboard.dynamicCharts.table.value', { defaultValue: 'Value' })}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {(chartDataType === 'dealStatus' ? dealStatusData : \r\n                  chartDataType === 'revenueByMonth' ? monthlyRevenueData : REVENUE_DATA)\r\n                  .map((item, index) => (\r\n                  <tr \r\n                    key={index} \r\n                    style={{ \r\n                      borderBottom: '1px solid #e2e8f0',\r\n                      backgroundColor: index % 2 === 0 ? '#f8fafc' : 'white'\r\n                    }}\r\n                  >\r\n                    <td style={{ padding: '12px 16px' }}>{item.name}</td>\r\n                    <td style={{ padding: '12px 16px', textAlign: 'right' }}>\r\n                      {formatValue(item.value)}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DynamicCharts;","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { \r\n  Box, \r\n  Paper, \r\n  Typography, \r\n  List, \r\n  ListItem, \r\n  ListItemText, \r\n  ListItemSecondaryAction, \r\n  IconButton, \r\n  Divider,\r\n  Menu,\r\n  MenuItem,\r\n  Chip,\r\n  TextField,\r\n  InputAdornment\r\n} from '@mui/material';\r\nimport {\r\n  MoreVert as MoreVertIcon,\r\n  Download as DownloadIcon,\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  Search as SearchIcon,\r\n  Share as ShareIcon,\r\n  Favorite as FavoriteIcon,\r\n  FavoriteBorder as FavoriteBorderIcon\r\n} from '@mui/icons-material';\r\n\r\n// Dữ liệu mẫu cho các báo cáo đã lưu (mặc định, dùng khi bản địa hóa chưa có)\r\nconst DEFAULT_SAVED_REPORTS = [\r\n  {\r\n    id: 1,\r\n    title: 'Báo cáo doanh thu theo nhân viên Q2/2025',\r\n    createdAt: '2025-06-30',\r\n    type: 'bar',\r\n    favorite: true,\r\n    tags: ['doanh thu', 'nhân viên', 'quý 2']\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Phân tích tỉ lệ chuyển đổi lead sang khách hàng',\r\n    createdAt: '2025-06-25',\r\n    type: 'pie',\r\n    favorite: false,\r\n    tags: ['lead', 'chuyển đổi', 'phễu bán hàng']\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Báo cáo doanh thu theo tháng năm 2025',\r\n    createdAt: '2025-06-20',\r\n    type: 'line',\r\n    favorite: true,\r\n    tags: ['doanh thu', 'tháng', '2025']\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Top 10 khách hàng tiềm năng tháng 6',\r\n    createdAt: '2025-06-15',\r\n    type: 'table',\r\n    favorite: false,\r\n    tags: ['khách hàng tiềm năng', 'top 10']\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Phân tích hiệu quả chiến dịch marketing Q2',\r\n    createdAt: '2025-06-10',\r\n    type: 'bar',\r\n    favorite: false,\r\n    tags: ['marketing', 'chiến dịch', 'quý 2']\r\n  }\r\n];\r\n\r\nconst SavedReports: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  // Lấy items bản địa hóa từ file dịch; nếu không có thì để trống và sẽ fallback\r\n  const localizedItems = t('pages.dashboard.savedReports.items', { returnObjects: true }) as Record<string, { title: string; tags: string[] }> | undefined;\r\n  // Trộn dữ liệu mặc định với tiêu đề & tag bản địa hóa theo id\r\n  const SAVED_REPORTS = DEFAULT_SAVED_REPORTS.map((item) => {\r\n    const loc = localizedItems?.[String(item.id)];\r\n    return {\r\n      ...item,\r\n      title: loc?.title ?? item.title,\r\n      tags: Array.isArray(loc?.tags) ? loc!.tags : item.tags,\r\n    };\r\n  });\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [selectedReportId, setSelectedReportId] = useState<number | null>(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [favorites, setFavorites] = useState<Record<number, boolean>>(\r\n    SAVED_REPORTS.reduce((acc, report) => ({\r\n      ...acc,\r\n      [report.id]: report.favorite\r\n    }), {})\r\n  );\r\n\r\n  const handleMenuOpen = (event: React.MouseEvent<HTMLElement>, id: number) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedReportId(id);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setSelectedReportId(null);\r\n  };\r\n\r\n  const handleToggleFavorite = (id: number) => {\r\n    setFavorites(prev => ({\r\n      ...prev,\r\n      [id]: !prev[id]\r\n    }));\r\n  };\r\n\r\n  const getChartIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'bar':\r\n        return '📊';\r\n      case 'pie':\r\n        return '🥧';\r\n      case 'line':\r\n        return '📈';\r\n      case 'table':\r\n        return '📋';\r\n      default:\r\n        return '📄';\r\n    }\r\n  };\r\n\r\n  const filteredReports = SAVED_REPORTS.filter(report => \r\n    report.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    report.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))\r\n  );\r\n\r\n  return (\r\n    <Paper elevation={2} sx={{ borderRadius: 2 }}>\r\n      <Box sx={{ p: 2, borderBottom: '1px solid #e2e8f0' }}>\r\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mb: 2 }}>\r\n          {t('pages.dashboard.savedReports.title')}\r\n        </Typography>\r\n        \r\n        <TextField\r\n          fullWidth\r\n          size=\"small\"\r\n          placeholder={t('pages.dashboard.savedReports.searchPlaceholder')}\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon fontSize=\"small\" />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          sx={{ mb: 1 }}\r\n        />\r\n      </Box>\r\n\r\n      <List sx={{ maxHeight: '400px', overflow: 'auto' }}>\r\n        {filteredReports.length === 0 ? (\r\n          <ListItem>\r\n            <ListItemText \r\n              primary={t('pages.dashboard.savedReports.emptyTitle')} \r\n              secondary={t('pages.dashboard.savedReports.emptySubtitle')} \r\n            />\r\n          </ListItem>\r\n        ) : (\r\n          filteredReports.map((report) => (\r\n            <React.Fragment key={report.id}>\r\n              <ListItem \r\n                sx={{ \r\n                  cursor: 'pointer',\r\n                  '&:hover': { \r\n                    backgroundColor: '#f8fafc' \r\n                  }\r\n                }}\r\n              >\r\n                <Box sx={{ mr: 1, fontSize: '1.5rem' }}>\r\n                  {getChartIcon(report.type)}\r\n                </Box>\r\n                <ListItemText\r\n                  primary={\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <Typography variant=\"body1\" sx={{ fontWeight: 'medium' }}>\r\n                        {report.title}\r\n                      </Typography>\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleToggleFavorite(report.id);\r\n                        }}\r\n                        sx={{ ml: 1, color: favorites[report.id] ? '#f43f5e' : 'inherit' }}\r\n                      >\r\n                        {favorites[report.id] ? <FavoriteIcon fontSize=\"small\" /> : <FavoriteBorderIcon fontSize=\"small\" />}\r\n                      </IconButton>\r\n                    </Box>\r\n                  }\r\n                  secondary={\r\n                    <Box sx={{ mt: 0.5 }}>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\r\n                        {t('pages.dashboard.savedReports.createdAt')}: {report.createdAt}\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mt: 0.5 }}>\r\n                        {report.tags.map((tag, idx) => (\r\n                          <Chip \r\n                            key={idx} \r\n                            label={tag} \r\n                            size=\"small\" \r\n                            sx={{ \r\n                              height: 20, \r\n                              fontSize: '0.65rem',\r\n                              backgroundColor: '#f1f5f9'\r\n                            }} \r\n                          />\r\n                        ))}\r\n                      </Box>\r\n                    </Box>\r\n                  }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton \r\n                    edge=\"end\" \r\n                    onClick={(e) => handleMenuOpen(e, report.id)}\r\n                  >\r\n                    <MoreVertIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </React.Fragment>\r\n          ))\r\n        )}\r\n      </List>\r\n\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleMenuClose}\r\n        id={`report-menu-${selectedReportId}`}\r\n      >\r\n        <MenuItem onClick={handleMenuClose}>\r\n          <DownloadIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n          {t('pages.dashboard.savedReports.menu.download')}\r\n        </MenuItem>\r\n        <MenuItem onClick={handleMenuClose}>\r\n          <EditIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n          {t('pages.dashboard.savedReports.menu.edit')}\r\n        </MenuItem>\r\n        <MenuItem onClick={handleMenuClose}>\r\n          <ShareIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n          {t('pages.dashboard.savedReports.menu.share')}\r\n        </MenuItem>\r\n        <Divider />\r\n        <MenuItem onClick={handleMenuClose} sx={{ color: 'error.main' }}>\r\n          <DeleteIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n          {t('pages.dashboard.savedReports.menu.delete')}\r\n        </MenuItem>\r\n      </Menu>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SavedReports;","// Global AI Search Service\r\n// Thay thế tất cả bộ lọc search truyền thống bằng AI search thông minh\r\n\r\nimport { aiOrchestrator, AIRequest } from '../aiOrchestration';\r\n\r\nexport interface SearchResult {\r\n  id: string;\r\n  type: 'customer' | 'deal' | 'contact' | 'contract' | 'invoice' | 'requirement' | 'quotation';\r\n  title: string;\r\n  description: string;\r\n  relevanceScore: number;\r\n  metadata: Record<string, any>;\r\n  url: string;\r\n  timestamp: Date;\r\n}\r\n\r\nexport interface SearchContext {\r\n  currentPage: string;\r\n  userRole: string;\r\n  recentActivity: string[];\r\n  preferences: Record<string, any>;\r\n  // Additional context properties\r\n  contextual?: boolean;\r\n  quickSearch?: boolean;\r\n  maxResults?: number;\r\n}\r\n\r\nexport interface SearchFilters {\r\n  types?: string[];\r\n  dateRange?: {\r\n    start: Date;\r\n    end: Date;\r\n  };\r\n  status?: string[];\r\n  priority?: string[];\r\n  assignedTo?: string[];\r\n}\r\n\r\nexport class GlobalAISearchService {\r\n  private searchHistory: string[] = [];\r\n  private searchCache: Map<string, SearchResult[]> = new Map();\r\n  private contextData: SearchContext | null = null;\r\n\r\n  constructor() {\r\n    this.loadSearchHistory();\r\n  }\r\n\r\n  // Thiết lập context cho search\r\n  public setContext(context: SearchContext) {\r\n    this.contextData = context;\r\n  }\r\n\r\n  // Thực hiện AI search thông minh\r\n  public async search(\r\n    query: string, \r\n    filters?: SearchFilters,\r\n    context?: Partial<SearchContext>\r\n  ): Promise<SearchResult[]> {\r\n    // Kiểm tra cache trước\r\n    const cacheKey = this.generateCacheKey(query, filters);\r\n    if (this.searchCache.has(cacheKey)) {\r\n      return this.searchCache.get(cacheKey)!;\r\n    }\r\n\r\n    try {\r\n      // Chuẩn bị request cho AI Orchestrator\r\n      const searchRequest: AIRequest = {\r\n        id: `search_${Date.now()}`,\r\n        type: 'search',\r\n        data: {\r\n          query,\r\n          filters,\r\n          context: { ...this.contextData, ...context },\r\n          searchHistory: this.searchHistory.slice(-5) // 5 tìm kiếm gần nhất\r\n        },\r\n        timestamp: new Date()\r\n      };\r\n\r\n      // Gửi request tới AI Orchestrator\r\n      const response = await aiOrchestrator.processRequest(searchRequest);\r\n      \r\n      // Xử lý kết quả\r\n      const results = this.processSearchResults(response.result, query);\r\n      \r\n      // Lưu vào cache\r\n      this.searchCache.set(cacheKey, results);\r\n      \r\n      // Cập nhật lịch sử tìm kiếm\r\n      this.addToSearchHistory(query);\r\n      \r\n      return results;\r\n    } catch (error) {\r\n      console.error('Error in AI search:', error);\r\n      return this.getFallbackResults(query, filters);\r\n    }\r\n  }\r\n\r\n  // Tìm kiếm nhanh với gợi ý\r\n  public async quickSearch(query: string): Promise<SearchResult[]> {\r\n    if (query.length < 2) return [];\r\n    \r\n    return this.search(query, undefined, { \r\n      quickSearch: true,\r\n      maxResults: 5 \r\n    });\r\n  }\r\n\r\n  // Lấy gợi ý tìm kiếm thông minh\r\n  public async getSearchSuggestions(\r\n    partialQuery: string,\r\n    currentPage?: string\r\n  ): Promise<string[]> {\r\n    if (partialQuery.length < 2) {\r\n      return this.getPopularSearches(currentPage);\r\n    }\r\n\r\n    try {\r\n      const suggestionRequest: AIRequest = {\r\n        id: `suggestions_${Date.now()}`,\r\n        type: 'search',\r\n        data: {\r\n          type: 'suggestions',\r\n          partialQuery,\r\n          currentPage,\r\n          searchHistory: this.searchHistory\r\n        },\r\n        timestamp: new Date()\r\n      };\r\n\r\n      const response = await aiOrchestrator.processRequest(suggestionRequest);\r\n      return response.result.suggestions || [];\r\n    } catch (error) {\r\n      console.error('Error getting search suggestions:', error);\r\n      return this.getPopularSearches(currentPage);\r\n    }\r\n  }\r\n\r\n  // Tìm kiếm theo ngữ cảnh trang hiện tại\r\n  public async contextualSearch(query: string): Promise<SearchResult[]> {\r\n    const context = this.contextData?.currentPage || '';\r\n    \r\n    // Điều chỉnh search dựa trên trang hiện tại\r\n    const contextualFilters: SearchFilters = {};\r\n    \r\n    switch (context) {\r\n      case '/customers':\r\n        contextualFilters.types = ['customer', 'contact'];\r\n        break;\r\n      case '/deals':\r\n        contextualFilters.types = ['deal', 'quotation'];\r\n        break;\r\n      case '/contracts':\r\n        contextualFilters.types = ['contract', 'invoice'];\r\n        break;\r\n      default:\r\n        // Không giới hạn type cho trang khác\r\n        break;\r\n    }\r\n\r\n    return this.search(query, contextualFilters, { contextual: true });\r\n  }\r\n\r\n  // Tìm kiếm semantic (tìm theo ý nghĩa)\r\n  public async semanticSearch(query: string): Promise<SearchResult[]> {\r\n    const semanticRequest: AIRequest = {\r\n      id: `semantic_${Date.now()}`,\r\n      type: 'search',\r\n      data: {\r\n        type: 'semantic',\r\n        query,\r\n        context: this.contextData\r\n      },\r\n      timestamp: new Date()\r\n    };\r\n\r\n    try {\r\n      const response = await aiOrchestrator.processRequest(semanticRequest);\r\n      return this.processSearchResults(response.result, query);\r\n    } catch (error) {\r\n      console.error('Error in semantic search:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Xử lý kết quả search từ AI\r\n  private processSearchResults(aiResult: any, originalQuery: string): SearchResult[] {\r\n    const results = aiResult.results || [];\r\n    \r\n    return results.map((result: any, index: number) => ({\r\n      id: result.id || `result_${index}`,\r\n      type: result.type || 'customer',\r\n      title: result.title || result.name || 'Untitled',\r\n      description: result.description || result.summary || '',\r\n      relevanceScore: result.relevance || (1 - index * 0.1),\r\n      metadata: result.metadata || {},\r\n      url: this.generateResultUrl(result.type, result.id),\r\n      timestamp: new Date()\r\n    }));\r\n  }\r\n\r\n  // Tạo URL cho kết quả\r\n  private generateResultUrl(type: string, id: string): string {\r\n    const baseUrls: Record<string, string> = {\r\n      customer: '/customers',\r\n      deal: '/deals',\r\n      contact: '/contacts',\r\n      contract: '/contracts',\r\n      invoice: '/invoices',\r\n      requirement: '/requirements',\r\n      quotation: '/quotations'\r\n    };\r\n\r\n    return `${baseUrls[type] || '/'}/${id}`;\r\n  }\r\n\r\n  // Tạo cache key\r\n  private generateCacheKey(query: string, filters?: SearchFilters): string {\r\n    return `${query}_${JSON.stringify(filters || {})}`;\r\n  }\r\n\r\n  // Lấy kết quả fallback khi AI không hoạt động\r\n  private getFallbackResults(query: string, filters?: SearchFilters): SearchResult[] {\r\n    // Mô phỏng kết quả tìm kiếm cơ bản\r\n    const mockResults: SearchResult[] = [\r\n      {\r\n        id: '1',\r\n        type: 'customer',\r\n        title: `Khách hàng liên quan đến \"${query}\"`,\r\n        description: 'Kết quả tìm kiếm cơ bản',\r\n        relevanceScore: 0.8,\r\n        metadata: {},\r\n        url: '/customers/1',\r\n        timestamp: new Date()\r\n      }\r\n    ];\r\n\r\n    return mockResults;\r\n  }\r\n\r\n  // Lấy các tìm kiếm phổ biến\r\n  private getPopularSearches(currentPage?: string): string[] {\r\n    const popularSearches: Record<string, string[]> = {\r\n      '/dashboard': [\r\n        'Doanh thu tháng này',\r\n        'Deal đang pending',\r\n        'Khách hàng mới',\r\n        'Top performer'\r\n      ],\r\n      '/customers': [\r\n        'Khách hàng VIP',\r\n        'Khách hàng mới',\r\n        'Khách hàng chưa liên hệ',\r\n        'Khách hàng có deal lớn'\r\n      ],\r\n      '/deals': [\r\n        'Deal closing',\r\n        'Deal high value',\r\n        'Deal pending',\r\n        'Deal won this month'\r\n      ],\r\n      default: [\r\n        'Tìm kiếm nhanh',\r\n        'Báo cáo',\r\n        'Thống kê',\r\n        'Phân tích'\r\n      ]\r\n    };\r\n\r\n    return popularSearches[currentPage || 'default'] || popularSearches.default;\r\n  }\r\n\r\n  // Quản lý lịch sử tìm kiếm\r\n  private addToSearchHistory(query: string) {\r\n    if (!this.searchHistory.includes(query)) {\r\n      this.searchHistory.unshift(query);\r\n      this.searchHistory = this.searchHistory.slice(0, 20); // Giữ 20 tìm kiếm gần nhất\r\n      this.saveSearchHistory();\r\n    }\r\n  }\r\n\r\n  private loadSearchHistory() {\r\n    try {\r\n      const saved = localStorage.getItem('ai_search_history');\r\n      if (saved) {\r\n        this.searchHistory = JSON.parse(saved);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading search history:', error);\r\n    }\r\n  }\r\n\r\n  private saveSearchHistory() {\r\n    try {\r\n      localStorage.setItem('ai_search_history', JSON.stringify(this.searchHistory));\r\n    } catch (error) {\r\n      console.error('Error saving search history:', error);\r\n    }\r\n  }\r\n\r\n  // Xóa cache\r\n  public clearCache() {\r\n    this.searchCache.clear();\r\n  }\r\n\r\n  // Lấy thống kê search\r\n  public getSearchStats() {\r\n    return {\r\n      historyCount: this.searchHistory.length,\r\n      cacheSize: this.searchCache.size,\r\n      recentSearches: this.searchHistory.slice(0, 5)\r\n    };\r\n  }\r\n\r\n  // Xuất dữ liệu search để phân tích\r\n  public exportSearchData() {\r\n    return {\r\n      history: this.searchHistory,\r\n      context: this.contextData,\r\n      timestamp: new Date()\r\n    };\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const globalAISearch = new GlobalAISearchService();\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { \r\n  Box, \r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  TextField,\r\n  InputAdornment,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemButton,\r\n  Avatar,\r\n  Chip,\r\n  useTheme,\r\n  alpha,\r\n  Popper,\r\n  Divider,\r\n  Zoom,\r\n  Slide,\r\n  CircularProgress,\r\n  Tabs,\r\n  Tab,\r\n  Fade,\r\n  ClickAwayListener\r\n} from '@mui/material';\r\nimport CrmAssistantPanel from '../../components/CrmAssistantPanel';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { \r\n  Search as SearchIcon, \r\n  SmartToy as AIIcon,\r\n  Mic as MicIcon,\r\n  KeyboardArrowUp as ScrollUpIcon,\r\n  AutoAwesome as SparkleIcon,\r\n  Close as CloseIcon,\r\n  KeyboardArrowUp as KeyboardArrowUpIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  People as PeopleIcon,\r\n  Handshake as HandshakeIcon\r\n} from '@mui/icons-material';\r\n\r\n// Import các component mới\r\nimport DynamicKPIStats from './components/DynamicKPIStats';\r\nimport TrendingInsightsPredictions from './components/TrendingInsightsPredictions';\r\nimport DynamicCharts from './components/DynamicCharts';\r\nimport SavedReports from './components/SavedReports';\r\nimport { globalAISearch } from '../../services/globalAISearch';\r\n\r\n// Mock data for search results\r\nconst mockContacts = [\r\n  {\r\n    id: 1,\r\n    name: 'Nguyễn Văn An',\r\n    email: 'an.nguyen@company.com',\r\n    phone: '0901234567',\r\n    owner: 'Trần Thị B',\r\n    leadStatus: 'Hot Lead',\r\n    avatar: '/avatars/an.jpg'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Lê Thị Cẩm',\r\n    email: 'cam.le@business.vn',\r\n    phone: '0987654321',\r\n    owner: 'Phạm Văn C',\r\n    leadStatus: 'Qualified',\r\n    avatar: '/avatars/cam.jpg'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Hoàng Minh Đức',\r\n    email: 'duc.hoang@tech.com',\r\n    phone: '0912345678',\r\n    owner: 'Nguyễn Thị D',\r\n    leadStatus: 'New Lead',\r\n    avatar: '/avatars/duc.jpg'\r\n  }\r\n];\r\n\r\nconst mockDeals = [\r\n  {\r\n    id: 1,\r\n    name: 'Hệ thống CRM cho ABC Corp',\r\n    customer: 'ABC Corporation',\r\n    owner: 'Trần Văn E',\r\n    amount: 250000000,\r\n    stage: 'Đã gửi báo giá'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Website thương mại điện tử',\r\n    customer: 'XYZ Trading',\r\n    owner: 'Lê Thị F',\r\n    amount: 150000000,\r\n    stage: 'Đang đàm phán'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Ứng dụng mobile banking',\r\n    customer: 'Tech Bank',\r\n    owner: 'Phạm Văn G',\r\n    amount: 500000000,\r\n    stage: 'Liên hệ ban đầu'\r\n  }\r\n];\r\n\r\nconst Dashboard = () => {\r\n  const theme = useTheme();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n  const [currentQuery, setCurrentQuery] = useState<string>('');\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  const [suggestions, setSuggestions] = useState<string[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const [showScrollToTop, setShowScrollToTop] = useState(false);\r\n  const [scrollY, setScrollY] = useState(0);\r\n  const [showSearchResults, setShowSearchResults] = useState(false);\r\n  const [activeTab, setActiveTab] = useState<'contacts' | 'deals'>('contacts');\r\n  const [expandedSections, setExpandedSections] = useState({ contacts: false, deals: false });\r\n  const [assistantOpen, setAssistantOpen] = useState(false);\r\n  const [assistantMinimized, setAssistantMinimized] = useState(false);\r\n  const [assistantQuery, setAssistantQuery] = useState('');\r\n\r\n  const searchRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    // Simulate loading for smooth animation\r\n    const timer = setTimeout(() => setIsLoaded(true), 200);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  // Handle scroll to determine position\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const currentScrollY = window.scrollY;\r\n      setScrollY(currentScrollY);\r\n      \r\n      // Always show minimized search bar when scrolling down\r\n      // and show full search bar at the top\r\n      if (currentScrollY > 200) {\r\n        setIsMinimized(true);\r\n        setShowScrollToTop(true);\r\n      } else {\r\n        setIsMinimized(false);\r\n        setShowScrollToTop(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  // Load suggestions when search is opened\r\n  useEffect(() => {\r\n    if (isSearchOpen && searchQuery.length === 0) {\r\n      loadSuggestions();\r\n    }\r\n  }, [isSearchOpen]);\r\n\r\n  const loadSuggestions = async () => {\r\n    try {\r\n      const suggestions = await globalAISearch.getSearchSuggestions('', location.pathname);\r\n      setSuggestions(suggestions);\r\n    } catch (error) {\r\n      console.error('Error loading suggestions:', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!searchQuery.trim()) return;\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      const results = await globalAISearch.contextualSearch(searchQuery);\r\n      console.log('Search results:', results);\r\n      // Process results as needed\r\n      handleGenerateReport(searchQuery);\r\n    } catch (error) {\r\n      console.error('Error searching:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion: string) => {\r\n    setSearchQuery(suggestion);\r\n    handleSearch();\r\n  };\r\n\r\n  const handleInputFocus = () => {\r\n    setIsSearchOpen(true);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  // Handle keyboard events\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Escape') {\r\n      setIsSearchOpen(false);\r\n      inputRef.current?.blur();\r\n    }\r\n  };\r\n\r\n  // Format amount with K/M/B suffix\r\n  const formatAmount = (amount: number): string => {\r\n    if (amount >= 1000000000) {\r\n      return `${(amount / 1000000000).toFixed(1)}B₫`;\r\n    } else if (amount >= 1000000) {\r\n      return `${(amount / 1000000).toFixed(1)}M₫`;\r\n    } else if (amount >= 1000) {\r\n      return `${(amount / 1000).toFixed(1)}K₫`;\r\n    }\r\n    return `${amount}₫`;\r\n  };\r\n\r\n  // Get contact display info based on query\r\n  const getContactDisplay = (contact: any) => {\r\n    const hasNumber = /\\d/.test(searchQuery);\r\n    return hasNumber ? contact.phone : contact.email;\r\n  };\r\n\r\n  // Handle item click navigation\r\n  const handleContactClick = (contactId: number) => {\r\n    navigate(`/contacts/${contactId}`);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  const handleDealClick = (dealId: number) => {\r\n    navigate(`/deals/${dealId}`);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  // Handle \"View all\" clicks\r\n  const handleViewAllContacts = () => {\r\n    setActiveTab('contacts');\r\n    setExpandedSections({ contacts: true, deals: false });\r\n    setShowSearchResults(true);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  const handleViewAllDeals = () => {\r\n    setActiveTab('deals');\r\n    setExpandedSections({ contacts: false, deals: true });\r\n    setShowSearchResults(true);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  // Handle CRM Assistant\r\n  const handleOpenAssistant = () => {\r\n    setAssistantQuery(searchQuery);\r\n    setAssistantOpen(true);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  const handleCloseAssistant = () => {\r\n    setAssistantOpen(false);\r\n    setAssistantMinimized(false);\r\n  };\r\n\r\n  const handleMinimizeAssistant = () => {\r\n    setAssistantMinimized(true);\r\n    setAssistantOpen(false);\r\n  };\r\n\r\n  // Handle back button\r\n  const handleBackToDropdown = () => {\r\n    setShowSearchResults(false);\r\n    setIsSearchOpen(true);\r\n  };\r\n\r\n  // Handle show more\r\n  const handleShowMore = (section: 'contacts' | 'deals') => {\r\n    setExpandedSections(prev => ({\r\n      ...prev,\r\n      [section]: true\r\n    }));\r\n  };\r\n\r\n  // Generate extended mock data for expanded sections\r\n  const getExtendedContacts = () => {\r\n    const extended = [];\r\n    for (let i = 0; i < 15; i++) {\r\n      extended.push({\r\n        ...mockContacts[i % mockContacts.length],\r\n        id: mockContacts[i % mockContacts.length].id + i * 100,\r\n        name: `${mockContacts[i % mockContacts.length].name} ${i + 1}`\r\n      });\r\n    }\r\n    return extended;\r\n  };\r\n\r\n  const getExtendedDeals = () => {\r\n    const extended = [];\r\n    for (let i = 0; i < 15; i++) {\r\n      extended.push({\r\n        ...mockDeals[i % mockDeals.length],\r\n        id: mockDeals[i % mockDeals.length].id + i * 100,\r\n        name: `${mockDeals[i % mockDeals.length].name} ${i + 1}`,\r\n        amount: mockDeals[i % mockDeals.length].amount + i * 10000000\r\n      });\r\n    }\r\n    return extended;\r\n  };\r\n\r\n  // Get status chip color\r\n  const getStatusColor = (status: string) => {\r\n    switch (status.toLowerCase()) {\r\n      case 'hot lead': return 'error';\r\n      case 'qualified': return 'success';\r\n      case 'new lead': return 'info';\r\n      case 'đã gửi báo giá': return 'warning';\r\n      case 'đang đàm phán': return 'primary';\r\n      case 'liên hệ ban đầu': return 'default';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const handleScrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n\r\n  // Xử lý khi người dùng gửi yêu cầu báo cáo mới\r\n  const handleGenerateReport = (query: string) => {\r\n    console.log('Generating report for query:', query);\r\n    setCurrentQuery(query);\r\n    // Ở đây trong thực tế sẽ gọi API để xử lý yêu cầu và tạo báo cáo\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      position: 'relative', \r\n      width: '100%', \r\n      height: '100%',\r\n      overflow: 'auto'\r\n    }}>\r\n        <Fade in={isLoaded} timeout={800}>\r\n          <Box sx={{ p: 3, width: '100%', height: '100%' }}>\r\n            {/* Welcome Header - Crunchbase style */}\r\n            {!showSearchResults && (\r\n              <Box \r\n                sx={{ \r\n                  textAlign: 'center',\r\n                  mb: 6,\r\n                  py: 4,\r\n                  background: `linear-gradient(135deg, ${alpha(theme.palette.primary.main, 0.05)} 0%, ${alpha(theme.palette.secondary.main, 0.05)} 100%)`,\r\n                  borderRadius: 3,\r\n                  border: `1px solid ${alpha(theme.palette.primary.main, 0.1)}`\r\n                }}\r\n              >\r\n              <Typography \r\n                variant=\"h3\" \r\n                component=\"h1\" \r\n                gutterBottom \r\n                sx={{ \r\n                  fontWeight: 'bold', \r\n                  color: theme.palette.text.primary,\r\n                  mb: 2\r\n                }}\r\n              >\r\n                {t('pages.dashboard.welcomeBack')}\r\n              </Typography>\r\n              <Typography \r\n                variant=\"h6\" \r\n                color=\"text.secondary\"\r\n                sx={{ \r\n                  mb: 3,\r\n                  maxWidth: 600,\r\n                  mx: 'auto'\r\n                }}\r\n              >\r\n                {t('pages.dashboard.smartDashboard')}\r\n              </Typography>\r\n              \r\n              {/* AI Search Input - Crunchbase style */}\r\n              <ClickAwayListener onClickAway={handleClickAway}>\r\n                <Box \r\n                  ref={searchRef}\r\n                  sx={{\r\n                    position: isMinimized ? 'fixed' : 'relative',\r\n                    bottom: isMinimized ? 20 : 'auto',\r\n                    right: isMinimized ? 20 : 'auto',\r\n                    left: isMinimized ? 'auto' : 'auto',\r\n                    zIndex: 1000,\r\n                    width: isMinimized ? 'auto' : '100%',\r\n                    maxWidth: isMinimized ? 300 : 600,\r\n                    mx: 'auto',\r\n                    transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                    transform: 'translateY(0)',\r\n                    opacity: 1,\r\n                    boxShadow: isMinimized ? '0 8px 32px rgba(0,0,0,0.15)' : 'none',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: 2\r\n                  }}\r\n                >\r\n                  <Zoom in={true} style={{ transitionDelay: isMinimized ? '100ms' : '0ms' }}>\r\n                    <Paper\r\n                      elevation={isMinimized ? 4 : 1}\r\n                      sx={{\r\n                        p: isMinimized ? 1 : 2,\r\n                        borderRadius: 8,\r\n                        border: `1px solid ${alpha(theme.palette.primary.main, 0.2)}`,\r\n                        backgroundColor: isMinimized ? \r\n                          alpha(theme.palette.background.paper, 0.95) : \r\n                          alpha(theme.palette.background.paper, 0.8),\r\n                        backdropFilter: 'blur(8px)',\r\n                        boxShadow: isMinimized ? \r\n                          `0 4px 20px ${alpha(theme.palette.primary.main, 0.15)}` : \r\n                          'none',\r\n                        transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                        '&:hover': {\r\n                          boxShadow: isMinimized ? \r\n                            `0 8px 32px ${alpha(theme.palette.primary.main, 0.25)}` : \r\n                            'none',\r\n                          transform: isMinimized ? 'translateY(-2px)' : 'none'\r\n                        }\r\n                    }}\r\n                  >\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <TextField\r\n                        inputRef={inputRef}\r\n                        fullWidth\r\n                        placeholder={t('pages.dashboard.searchPlaceholder')}\r\n                        value={searchQuery}\r\n                        onChange={(e) => setSearchQuery(e.target.value)}\r\n                        onFocus={handleInputFocus}\r\n                        onKeyDown={handleKeyDown}\r\n                        onKeyPress={(e) => {\r\n                          if (e.key === 'Enter') {\r\n                            handleSearch();\r\n                          }\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        size={isMinimized ? \"small\" : \"medium\"}\r\n                        InputProps={{\r\n                          startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                              <AIIcon color=\"primary\" />\r\n                            </InputAdornment>\r\n                          ),\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              {searchQuery ? (\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  onClick={() => setSearchQuery('')}\r\n                                  edge=\"end\"\r\n                                >\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                              ) : null}\r\n                              {isLoading ? (\r\n                                <CircularProgress size={20} />\r\n                              ) : (\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  onClick={handleSearch}\r\n                                  edge=\"end\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <SearchIcon />\r\n                                </IconButton>\r\n                              )}\r\n                            </InputAdornment>\r\n                          ),\r\n                          sx: {\r\n                            borderRadius: 8,\r\n                            backgroundColor: alpha(theme.palette.background.paper, 0.5),\r\n                            fontSize: '1rem',\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.background.paper, 0.8),\r\n                            },\r\n                            '& .MuiOutlinedInput-notchedOutline': {\r\n                              borderColor: alpha(theme.palette.primary.main, 0.3),\r\n                              borderWidth: 2,\r\n                            },\r\n                            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                              borderColor: alpha(theme.palette.primary.main, 0.5),\r\n                              borderWidth: 2,\r\n                            },\r\n                            '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                              borderColor: theme.palette.primary.main,\r\n                              borderWidth: 2,\r\n                            }\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Box>\r\n                    \r\n                    {/* Enhanced Search Dropdown */}\r\n                    {isSearchOpen && !isMinimized && (\r\n                      <Popper\r\n                        open={isSearchOpen}\r\n                        anchorEl={searchRef.current}\r\n                        placement=\"bottom-start\"\r\n                        style={{ width: 'auto', minWidth: searchRef.current?.clientWidth, maxWidth: 500, zIndex: 1301 }}\r\n                      >\r\n                        <Paper\r\n                          elevation={3}\r\n                          sx={{\r\n                            mt: 1,\r\n                            borderRadius: 0,\r\n                            maxHeight: 'none',\r\n                            overflow: 'visible',\r\n                            border: `1px solid ${alpha(theme.palette.divider, 0.3)}`,\r\n                            backgroundColor: theme.palette.background.paper\r\n                          }}\r\n                        >\r\n                          <Box sx={{ overflow: 'visible' }}>\r\n                            {/* Contacts Section */}\r\n                            <Box sx={{ py: 0.5 }}>\r\n                              <Typography \r\n                                variant=\"caption\" \r\n                                sx={{ \r\n                                  px: 1.5, \r\n                                  py: 0.5, \r\n                                  display: 'block',\r\n                                  color: 'text.secondary',\r\n                                  fontWeight: 'medium',\r\n                                  textTransform: 'uppercase',\r\n                                  letterSpacing: 0.5,\r\n                                  fontSize: '0.65rem'\r\n                                }}\r\n                              >\r\n                                {t('common.contacts')}\r\n                              </Typography>\r\n                              {mockContacts.slice(0, 3).map((contact) => (\r\n                                <ListItemButton\r\n                                  key={contact.id}\r\n                                  onClick={() => handleContactClick(contact.id)}\r\n                                  sx={{\r\n                                    px: 1.5,\r\n                                    py: 0.75,\r\n                                    borderRadius: 0,\r\n                                    mx: 1,\r\n                                    mb: 0.5,\r\n                                    '&:hover': {\r\n                                      backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', minWidth: 0 }}>\r\n                                    <Avatar \r\n                                      sx={{ \r\n                                        width: 24, \r\n                                        height: 24, \r\n                                        mr: 1,\r\n                                        fontSize: '0.75rem',\r\n                                        backgroundColor: theme.palette.primary.main\r\n                                      }}\r\n                                    >\r\n                                      {contact.name.charAt(0)}\r\n                                    </Avatar>\r\n                                    <Box sx={{ \r\n                                      display: 'flex', \r\n                                      alignItems: 'center', \r\n                                      justifyContent: 'space-between',\r\n                                      width: '100%',\r\n                                      minWidth: 0\r\n                                    }}>\r\n                                      <Typography \r\n                                        variant=\"body2\" \r\n                                        sx={{ \r\n                                          fontWeight: 'bold',\r\n                                          color: 'text.primary',\r\n                                          whiteSpace: 'nowrap',\r\n                                          overflow: 'hidden',\r\n                                          textOverflow: 'ellipsis',\r\n                                          mr: 1,\r\n                                          flex: 1\r\n                                        }}\r\n                                      >\r\n                                        {contact.name}\r\n                                        <Typography \r\n                                          component=\"span\" \r\n                                          variant=\"caption\" \r\n                                          sx={{ \r\n                                            color: 'text.secondary',\r\n                                            ml: 0.5,\r\n                                            fontWeight: 'normal'\r\n                                          }}\r\n                                        >\r\n                                          — {getContactDisplay(contact)}\r\n                                        </Typography>\r\n                                      </Typography>\r\n                                      <Chip\r\n                                        label={contact.leadStatus}\r\n                                        size=\"small\"\r\n                                        color={getStatusColor(contact.leadStatus) as any}\r\n                                        sx={{\r\n                                          height: 16,\r\n                                          fontSize: '0.65rem',\r\n                                          flexShrink: 0\r\n                                        }}\r\n                                      />\r\n                                    </Box>\r\n                                  </Box>\r\n                                </ListItemButton>\r\n                              ))}\r\n                              <ListItemButton\r\n                                onClick={handleViewAllContacts}\r\n                                sx={{\r\n                                  px: 1.5,\r\n                                  py: 0.5,\r\n                                  borderRadius: 0,\r\n                                  mx: 1,\r\n                                  color: 'primary.main',\r\n                                  '&:hover': {\r\n                                    backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\r\n                                  {t('common.viewAllContacts')}\r\n                                </Typography>\r\n                              </ListItemButton>\r\n                            </Box>\r\n\r\n                            <Divider sx={{ mx: 1 }} />\r\n\r\n                            {/* Deals Section */}\r\n                            <Box sx={{ py: 0.5 }}>\r\n                              <Typography \r\n                                variant=\"caption\" \r\n                                sx={{ \r\n                                  px: 1.5, \r\n                                  py: 0.5, \r\n                                  display: 'block',\r\n                                  color: 'text.secondary',\r\n                                  fontWeight: 'medium',\r\n                                  textTransform: 'uppercase',\r\n                                  letterSpacing: 0.5,\r\n                                  fontSize: '0.65rem'\r\n                                }}\r\n                              >\r\n                                {t('common.deals')}\r\n                              </Typography>\r\n                              {mockDeals.slice(0, 3).map((deal) => (\r\n                                <ListItemButton\r\n                                  key={deal.id}\r\n                                  onClick={() => handleDealClick(deal.id)}\r\n                                  sx={{\r\n                                    px: 1.5,\r\n                                    py: 0.75,\r\n                                    borderRadius: 0,\r\n                                    mx: 1,\r\n                                    mb: 0.5,\r\n                                    '&:hover': {\r\n                                      backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', minWidth: 0 }}>\r\n                                    <Box \r\n                                      sx={{ \r\n                                        width: 24, \r\n                                        height: 24, \r\n                                        mr: 1,\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                        backgroundColor: alpha(theme.palette.success.main, 0.1),\r\n                                        borderRadius: 0,\r\n                                        fontSize: '0.75rem'\r\n                                      }}\r\n                                    >\r\n                                      💼\r\n                                    </Box>\r\n                                    <Box sx={{ \r\n                                      display: 'flex', \r\n                                      alignItems: 'center', \r\n                                      justifyContent: 'space-between',\r\n                                      width: '100%',\r\n                                      minWidth: 0\r\n                                    }}>\r\n                                      <Typography \r\n                                        variant=\"body2\" \r\n                                        sx={{ \r\n                                          fontWeight: 'bold',\r\n                                          color: 'text.primary',\r\n                                          whiteSpace: 'nowrap',\r\n                                          overflow: 'hidden',\r\n                                          textOverflow: 'ellipsis',\r\n                                          mr: 1,\r\n                                          flex: 1\r\n                                        }}\r\n                                      >\r\n                                        {deal.name}\r\n                                        <Typography \r\n                                          component=\"span\" \r\n                                          variant=\"caption\" \r\n                                          sx={{ \r\n                                            color: 'text.secondary',\r\n                                            ml: 0.5,\r\n                                            fontWeight: 'normal'\r\n                                          }}\r\n                                        >\r\n                                          — {formatAmount(deal.amount)}\r\n                                        </Typography>\r\n                                      </Typography>\r\n                                      <Chip\r\n                                        label={deal.stage}\r\n                                        size=\"small\"\r\n                                        color={getStatusColor(deal.stage) as any}\r\n                                        sx={{\r\n                                          height: 16,\r\n                                          fontSize: '0.65rem',\r\n                                          flexShrink: 0\r\n                                        }}\r\n                                      />\r\n                                    </Box>\r\n                                  </Box>\r\n                                </ListItemButton>\r\n                              ))}\r\n                              <ListItemButton\r\n                                onClick={handleViewAllDeals}\r\n                                sx={{\r\n                                  px: 1.5,\r\n                                  py: 0.5,\r\n                                  borderRadius: 0,\r\n                                  mx: 1,\r\n                                  color: 'primary.main',\r\n                                  '&:hover': {\r\n                                    backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\r\n                                  {t('common.viewAllDeals')}\r\n                                </Typography>\r\n                              </ListItemButton>\r\n                            </Box>\r\n                            \r\n                            {/* CRM Assistant Entry */}\r\n                            {searchQuery && (\r\n                              <>\r\n                                <Divider sx={{ my: 1 }} />\r\n                                <Box sx={{ px: 1 }}>\r\n                                  <ListItemButton\r\n                                    onClick={handleOpenAssistant}\r\n                                    sx={{\r\n                                      px: 1.5,\r\n                                      py: 1,\r\n                                      borderRadius: 0,\r\n                                      backgroundColor: alpha(theme.palette.warning.main, 0.05),\r\n                                      border: `1px solid ${alpha(theme.palette.warning.main, 0.2)}`,\r\n                                      '&:hover': {\r\n                                        backgroundColor: alpha(theme.palette.warning.main, 0.1)\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n                                      <SparkleIcon \r\n                                        sx={{ \r\n                                          color: 'warning.main', \r\n                                          mr: 1.5,\r\n                                          fontSize: '1.2rem'\r\n                                        }} \r\n                                      />\r\n                                      <Typography \r\n                                        variant=\"body2\" \r\n                                        sx={{ \r\n                                          fontWeight: 'medium',\r\n                                          color: 'warning.dark'\r\n                                        }}\r\n                                      >\r\n                                        {t('pages.dashboard.askAssistant', { query: (searchQuery.length > 30 ? searchQuery.substring(0, 30) + '...' : searchQuery) })}\r\n                                      </Typography>\r\n                                    </Box>\r\n                                  </ListItemButton>\r\n                                </Box>\r\n                              </>\r\n                            )}\r\n                          </Box>\r\n                        </Paper>\r\n                      </Popper>\r\n                    )}\r\n                    \r\n                    {/* Minimized Label */}\r\n                    {isMinimized && (\r\n                      <Typography \r\n                        variant=\"caption\" \r\n                        sx={{ \r\n                          ml: 1, \r\n                          color: 'text.secondary',\r\n                          display: { xs: 'none', sm: 'inline' }\r\n                        }}\r\n                      >\r\n                        {t('common.aiAssistantMinimized')}\r\n                      </Typography>\r\n                    )}\r\n                  </Paper>\r\n                  </Zoom>\r\n                  \r\n                  {/* Scroll to top button */}\r\n                  <Slide direction=\"up\" in={showScrollToTop} mountOnEnter unmountOnExit>\r\n                    <IconButton \r\n                      color=\"primary\"\r\n                      size=\"medium\"\r\n                      onClick={handleScrollToTop}\r\n                      sx={{\r\n                        position: 'fixed',\r\n                        bottom: isMinimized ? 80 : 20,\r\n                        right: 20,\r\n                        backgroundColor: alpha(theme.palette.background.paper, 0.9),\r\n                        boxShadow: `0 4px 14px ${alpha(theme.palette.primary.main, 0.2)}`,\r\n                        border: `1px solid ${alpha(theme.palette.primary.main, 0.3)}`,\r\n                        '&:hover': {\r\n                          backgroundColor: alpha(theme.palette.background.paper, 1),\r\n                          boxShadow: `0 6px 20px ${alpha(theme.palette.primary.main, 0.3)}`,\r\n                        }\r\n                      }}\r\n                    >\r\n                      <KeyboardArrowUpIcon />\r\n                    </IconButton>\r\n                  </Slide>\r\n                </Box>\r\n              </ClickAwayListener>\r\n            </Box>\r\n            )}\r\n\r\n            {/* Fixed Search Input for Search Results */}\r\n            {showSearchResults && (\r\n              <Box\r\n                sx={{\r\n                  position: 'fixed',\r\n                  bottom: 20,\r\n                  left: '50%',\r\n                  transform: 'translateX(-50%)',\r\n                  zIndex: 1000,\r\n                  width: 'auto',\r\n                  maxWidth: 700,\r\n                  minWidth: 500\r\n                }}\r\n              >\r\n                <Paper\r\n                  elevation={4}\r\n                  sx={{\r\n                    p: 2,\r\n                    borderRadius: 4,\r\n                    border: `2px solid ${alpha(theme.palette.warning.main, 0.6)}`,\r\n                    backgroundColor: alpha(theme.palette.warning.main, 0.15),\r\n                    backdropFilter: 'blur(12px)',\r\n                    boxShadow: `0 6px 24px ${alpha(theme.palette.warning.main, 0.3)}`,\r\n                    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                    '&:hover': {\r\n                      backgroundColor: alpha(theme.palette.warning.main, 0.25),\r\n                      boxShadow: `0 12px 40px ${alpha(theme.palette.warning.main, 0.4)}`,\r\n                      transform: 'translateY(-4px)'\r\n                    }\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    fullWidth\r\n                    placeholder={t('pages.dashboard.searchPlaceholder')}\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                    onKeyPress={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        handleSearch();\r\n                      }\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <AIIcon color=\"primary\" />\r\n                        </InputAdornment>\r\n                      ),\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          {searchQuery ? (\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={() => setSearchQuery('')}\r\n                              edge=\"end\"\r\n                            >\r\n                              <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                          ) : null}\r\n                          {isLoading ? (\r\n                            <CircularProgress size={20} />\r\n                          ) : (\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={handleSearch}\r\n                              edge=\"end\"\r\n                              color=\"primary\"\r\n                            >\r\n                              <SearchIcon />\r\n                            </IconButton>\r\n                          )}\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            edge=\"end\"\r\n                          >\r\n                            <MicIcon />\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                      sx: {\r\n                        borderRadius: 8,\r\n                        backgroundColor: alpha(theme.palette.background.paper, 0.9),\r\n                        fontSize: '0.9rem',\r\n                        '&:hover': {\r\n                          backgroundColor: theme.palette.background.paper,\r\n                        },\r\n                        '& .MuiOutlinedInput-notchedOutline': {\r\n                          borderColor: alpha(theme.palette.background.paper, 0.8),\r\n                          borderWidth: 2,\r\n                        },\r\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                          borderColor: theme.palette.background.paper,\r\n                          borderWidth: 2,\r\n                        },\r\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                          borderColor: theme.palette.background.paper,\r\n                          borderWidth: 2,\r\n                        }\r\n                      }\r\n                    }}\r\n                  />\r\n                </Paper>\r\n              </Box>\r\n            )}\r\n\r\n            {/* Search Results Component */}\r\n            {showSearchResults && (\r\n              <Box sx={{ mb: 4 }}>\r\n                {/* Header */}\r\n                <Box\r\n                  sx={{\r\n                    position: 'sticky',\r\n                    top: 0,\r\n                    zIndex: 100,\r\n                    backgroundColor: theme.palette.background.paper,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`,\r\n                    p: 1.5,\r\n                    mb: 2\r\n                  }}\r\n                >\r\n                  <Box sx={{ mb: 2 }}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                      <IconButton\r\n                        onClick={handleBackToDropdown}\r\n                        size=\"small\"\r\n                        sx={{\r\n                          mr: 1,\r\n                          width: 28,\r\n                          height: 28,\r\n                          backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                          '&:hover': {\r\n                            backgroundColor: alpha(theme.palette.primary.main, 0.2)\r\n                          }\r\n                        }}\r\n                      >\r\n                        <ArrowBackIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                      <Typography variant=\"body2\" sx={{ fontWeight: 'bold', fontSize: '0.875rem' }}>\r\n                        {t('pages.dashboard.back')}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography variant=\"h6\" sx={{ fontSize: '1.1rem', color: 'text.primary', fontWeight: 'medium' }}>\r\n                      {t('pages.dashboard.searchFor', { query: searchQuery || t('pages.dashboard.aiSearchResults') })}\r\n                    </Typography>\r\n                  </Box>\r\n                  \r\n                  {/* Tag Chips */}\r\n                  <Box sx={{ display: 'flex', gap: 1 }}>\r\n                    <Chip\r\n                      icon={<PeopleIcon fontSize=\"small\" />}\r\n                      label={t('common.contacts')}\r\n                      variant={activeTab === 'contacts' ? 'filled' : 'outlined'}\r\n                      color={activeTab === 'contacts' ? 'primary' : 'default'}\r\n                      onClick={() => navigate('/contacts')}\r\n                      sx={{ cursor: 'pointer', fontSize: '0.8rem' }}\r\n                    />\r\n                    <Chip\r\n                      icon={<HandshakeIcon fontSize=\"small\" />}\r\n                      label={t('common.deals')}\r\n                      variant={activeTab === 'deals' ? 'filled' : 'outlined'}\r\n                      color={activeTab === 'deals' ? 'primary' : 'default'}\r\n                      onClick={() => navigate('/deals')}\r\n                      sx={{ cursor: 'pointer', fontSize: '0.8rem' }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n\r\n                {/* Content Sections */}\r\n                <Box sx={{ px: 2 }}>\r\n                  {/* Contacts Section */}\r\n                  <Box sx={{ mb: 4 }}>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      sx={{\r\n                        fontWeight: 'bold',\r\n                        mb: 2,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 1\r\n                      }}\r\n                    >\r\n                      {t('pages.dashboard.sections.contacts')}\r\n                      <Chip\r\n                        label={expandedSections.contacts ? getExtendedContacts().length : mockContacts.length}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Typography>\r\n                    \r\n                    <Paper\r\n                      elevation={1}\r\n                      sx={{\r\n                        borderRadius: '6px',\r\n                        border: `1px solid ${alpha(theme.palette.divider, 0.3)}`,\r\n                        backgroundColor: theme.palette.background.paper,\r\n                        overflow: 'hidden'\r\n                      }}\r\n                    >\r\n                      {(expandedSections.contacts ? getExtendedContacts() : mockContacts.slice(0, 3)).map((contact) => (\r\n                        <ListItemButton\r\n                          key={contact.id}\r\n                          onClick={() => handleContactClick(contact.id)}\r\n                          sx={{\r\n                            px: 2,\r\n                            py: 1,\r\n                            borderRadius: 0,\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                            },\r\n                            '&:not(:last-child)': {\r\n                              borderBottom: `1px solid ${alpha(theme.palette.divider, 0.2)}`\r\n                            }\r\n                          }}\r\n                        >\r\n                          <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', minWidth: 0 }}>\r\n                            <Avatar\r\n                              sx={{\r\n                                width: 24,\r\n                                height: 24,\r\n                                mr: 1.5,\r\n                                fontSize: '0.75rem',\r\n                                backgroundColor: theme.palette.primary.main\r\n                              }}\r\n                            >\r\n                              {contact.name.charAt(0)}\r\n                            </Avatar>\r\n                            <Box sx={{\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              justifyContent: 'space-between',\r\n                              width: '100%',\r\n                              minWidth: 0\r\n                            }}>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                sx={{\r\n                                  fontWeight: 'bold',\r\n                                  color: 'text.primary',\r\n                                  whiteSpace: 'nowrap',\r\n                                  overflow: 'hidden',\r\n                                  textOverflow: 'ellipsis',\r\n                                  mr: 1,\r\n                                  flex: 1\r\n                                }}\r\n                              >\r\n                                {contact.name}\r\n                                <Typography\r\n                                  component=\"span\"\r\n                                  variant=\"caption\"\r\n                                  sx={{\r\n                                    color: 'text.secondary',\r\n                                    ml: 0.5,\r\n                                    fontWeight: 'normal'\r\n                                  }}\r\n                                >\r\n                                  — {getContactDisplay(contact)} · {contact.owner}\r\n                                </Typography>\r\n                              </Typography>\r\n                              <Chip\r\n                                label={contact.leadStatus}\r\n                                size=\"small\"\r\n                                color={getStatusColor(contact.leadStatus) as any}\r\n                                sx={{\r\n                                  height: 18,\r\n                                  fontSize: '0.65rem',\r\n                                  flexShrink: 0\r\n                                }}\r\n                              />\r\n                            </Box>\r\n                          </Box>\r\n                        </ListItemButton>\r\n                      ))}\r\n                      \r\n                      {!expandedSections.contacts && (\r\n                        <ListItemButton\r\n                          onClick={() => handleShowMore('contacts')}\r\n                          sx={{\r\n                            px: 2,\r\n                            py: 1,\r\n                            borderRadius: 0,\r\n                            color: 'primary.main',\r\n                            borderTop: `1px solid ${alpha(theme.palette.divider, 0.2)}`,\r\n                            justifyContent: 'center',\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                            }\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\r\n                            {t('pages.dashboard.showMoreContacts')}\r\n                          </Typography>\r\n                        </ListItemButton>\r\n                      )}\r\n                    </Paper>\r\n                  </Box>\r\n\r\n                  {/* Deals Section */}\r\n                  <Box>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      sx={{\r\n                        fontWeight: 'bold',\r\n                        mb: 2,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 1\r\n                      }}\r\n                    >\r\n                      {t('pages.dashboard.sections.deals')}\r\n                      <Chip\r\n                        label={expandedSections.deals ? getExtendedDeals().length : mockDeals.length}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Typography>\r\n                    \r\n                    <Paper\r\n                      elevation={1}\r\n                      sx={{\r\n                        borderRadius: '6px',\r\n                        border: `1px solid ${alpha(theme.palette.divider, 0.3)}`,\r\n                        backgroundColor: theme.palette.background.paper,\r\n                        overflow: 'hidden'\r\n                      }}\r\n                    >\r\n                      {(expandedSections.deals ? getExtendedDeals() : mockDeals.slice(0, 3)).map((deal) => (\r\n                        <ListItemButton\r\n                          key={deal.id}\r\n                          onClick={() => handleDealClick(deal.id)}\r\n                          sx={{\r\n                            px: 2,\r\n                            py: 1,\r\n                            borderRadius: 0,\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                            },\r\n                            '&:not(:last-child)': {\r\n                              borderBottom: `1px solid ${alpha(theme.palette.divider, 0.2)}`\r\n                            }\r\n                          }}\r\n                        >\r\n                          <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', minWidth: 0 }}>\r\n                            <Box\r\n                              sx={{\r\n                                width: 24,\r\n                                height: 24,\r\n                                mr: 1.5,\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                backgroundColor: alpha(theme.palette.success.main, 0.1),\r\n                                borderRadius: 1,\r\n                                fontSize: '0.75rem'\r\n                              }}\r\n                            >\r\n                              💼\r\n                            </Box>\r\n                            <Box sx={{\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              justifyContent: 'space-between',\r\n                              width: '100%',\r\n                              minWidth: 0\r\n                            }}>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                sx={{\r\n                                  fontWeight: 'bold',\r\n                                  color: 'text.primary',\r\n                                  whiteSpace: 'nowrap',\r\n                                  overflow: 'hidden',\r\n                                  textOverflow: 'ellipsis',\r\n                                  mr: 1,\r\n                                  flex: 1\r\n                                }}\r\n                              >\r\n                                {deal.name}\r\n                                <Typography\r\n                                  component=\"span\"\r\n                                  variant=\"caption\"\r\n                                  sx={{\r\n                                    color: 'text.secondary',\r\n                                    ml: 0.5,\r\n                                    fontWeight: 'normal'\r\n                                  }}\r\n                                >\r\n                                  — {deal.customer} · {deal.owner} · {formatAmount(deal.amount)}\r\n                                </Typography>\r\n                              </Typography>\r\n                              <Chip\r\n                                label={deal.stage}\r\n                                size=\"small\"\r\n                                color={getStatusColor(deal.stage) as any}\r\n                                sx={{\r\n                                  height: 18,\r\n                                  fontSize: '0.65rem',\r\n                                  flexShrink: 0\r\n                                }}\r\n                              />\r\n                            </Box>\r\n                          </Box>\r\n                        </ListItemButton>\r\n                      ))}\r\n                      \r\n                      {!expandedSections.deals && (\r\n                        <ListItemButton\r\n                          onClick={() => handleShowMore('deals')}\r\n                          sx={{\r\n                            px: 2,\r\n                            py: 1,\r\n                            borderRadius: 0,\r\n                            color: 'primary.main',\r\n                            borderTop: `1px solid ${alpha(theme.palette.divider, 0.2)}`,\r\n                            justifyContent: 'center',\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                            }\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\r\n                            {t('pages.dashboard.showMoreDeals')}\r\n                          </Typography>\r\n                        </ListItemButton>\r\n                      )}\r\n                    </Paper>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n\r\n            {/* Dynamic KPI Stats - Crunchbase \"THIS MONTH ON CRUNCHBASE\" style */}\r\n            {!showSearchResults && <DynamicKPIStats />}\r\n\r\n            {/* Main Content Grid */}\r\n            {!showSearchResults && (\r\n              <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', lg: '2fr 1fr' }, gap: 4, mb: 4 }}>\r\n                {/* Left Column - Trending, Insights, Predictions */}\r\n                <Box>\r\n                  <TrendingInsightsPredictions />\r\n                </Box>\r\n\r\n                {/* Right Column - Charts and Reports */}\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\r\n                  {/* Dynamic Charts */}\r\n                  <Box>\r\n                    <DynamicCharts query={currentQuery} />\r\n                  </Box>\r\n\r\n                  {/* Saved Reports */}\r\n                  <Box>\r\n                    <SavedReports />\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n\r\n            {/* Footer */}\r\n            <Box sx={{ mt: 4, pt: 2, borderTop: `1px solid ${theme.palette.divider}`, textAlign: 'center' }}>\r\n              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                {t('pages.dashboard.footer')}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Fade>\r\n        \r\n        {/* CRM Assistant Panel */}\r\n        <CrmAssistantPanel\r\n          open={assistantOpen}\r\n          initialQuery={assistantQuery}\r\n          onClose={handleCloseAssistant}\r\n          onMinimize={handleMinimizeAssistant}\r\n        />\r\n        \r\n        {/* Minimized Assistant Button */}\r\n        {assistantMinimized && (\r\n          <Zoom in={assistantMinimized}>\r\n            <Paper\r\n              elevation={6}\r\n              sx={{\r\n                position: 'fixed',\r\n                bottom: 20,\r\n                right: 20,\r\n                width: 60,\r\n                height: 60,\r\n                borderRadius: '50%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                cursor: 'pointer',\r\n                backgroundColor: 'warning.main',\r\n                color: 'warning.contrastText',\r\n                zIndex: 1300,\r\n                '&:hover': {\r\n                  transform: 'scale(1.1)',\r\n                  boxShadow: `0 8px 25px ${alpha(theme.palette.warning.main, 0.4)}`\r\n                },\r\n                transition: 'all 0.3s ease-in-out'\r\n              }}\r\n              onClick={() => {\r\n                setAssistantMinimized(false);\r\n                setAssistantOpen(true);\r\n              }}\r\n            >\r\n              <SparkleIcon sx={{ fontSize: '1.5rem' }} />\r\n            </Paper>\r\n          </Zoom>\r\n        )}\r\n      </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["mockContacts","id","name","email","phone","owner","leadStatus","statusColor","mockDeals","customer","amount","stage","stageColor","deadline","formatAmount","concat","toFixed","generateMockSummary","query","t","_Object$entries$sort$","totalAmount","reduce","sum","deal","stageCounts","acc","d","mostCommonStage","Object","entries","sort","a","b","count","length","total","percent","MiniTable","_ref","type","data","onAction","theme","useTheme","i18n","useTranslation","locale","language","startsWith","formatDate","dateStr","Date","Intl","DateTimeFormat","year","month","day","format","contacts","_jsx","TableContainer","component","Paper","sx","maxHeight","border","alpha","palette","divider","children","_jsxs","Table","size","stickyHeader","TableHead","TableRow","TableCell","fontWeight","fontSize","TableBody","map","contact","hover","Chip","label","backgroundColor","color","height","Button","startIcon","OpenIcon","onClick","minWidth","px","deals","Box","display","gap","TaskIcon","AssistantCard","_ref2","loading","onToggleSection","p","mb","borderRadius","primary","main","Skeleton","variant","width","i","Typography","summary","item","index","alignItems","mr","icon","PersonIcon","showContacts","cursor","BusinessIcon","showDeals","flexWrap","AddIcon","TrendingIcon","EmailIcon","ChatMessage","_ref3","message","isUser","justifyContent","maxWidth","isCard","cardData","content","_ref4","open","initialQuery","onClose","onMinimize","messages","setMessages","useState","inputValue","setInputValue","isTyping","setIsTyping","conversationTitle","setConversationTitle","setCardData","snackbar","setSnackbar","messagesEndRef","useRef","useEffect","split","slice","join","handleSendMessage","_messagesEndRef$curre","current","scrollIntoView","behavior","async","isInitial","arguments","undefined","trim","userMessage","now","toString","timestamp","prev","setTimeout","newCardData","assistantMessage","responses","Math","floor","random","handleToggleSection","section","updatedCardData","_objectSpread","msg","handleAction","action","_Fragment","Dialog","PaperProps","overflow","BackdropProps","common","black","backdropFilter","borderBottom","background","paper","position","top","zIndex","AIIcon","lineHeight","IconButton","MinimizeIcon","ExpandIcon","CloseIcon","DialogContent","flex","flexDirection","grey","opacity","ref","borderTop","bottom","TextField","fullWidth","multiline","maxRows","placeholder","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","InputProps","endAdornment","InputAdornment","AttachIcon","disabled","SendIcon","borderColor","mt","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","DynamicKPIStats","kpiData","setKpiData","dynamicUpdates","setDynamicUpdates","isLoading","setIsLoading","lastRefresh","setLastRefresh","activeKpiIndex","setActiveKpiIndex","showAllKpis","setShowAllKpis","loadKPIData","loadDynamicUpdates","interval","setInterval","updateKPIData","addRandomUpdate","clearInterval","rotationInterval","prevIndex","Promise","resolve","currentDate","kpis","title","change","changeLabel","PeopleIcon","description","lastUpdated","DealsIcon","success","MoneyIcon","warning","TimelineIcon","info","StarIcon","secondary","updates","isNew","kpi","newUpdates","randomUpdate","update","u","getChangeColor","error","text","formatTimeAgo","date","diffMs","getTime","diffMins","diffHours","toLocaleDateString","time","Tooltip","ViewCarouselIcon","ViewModuleIcon","RefreshIcon","minHeight","gridTemplateColumns","xs","sm","md","Fade","in","timeout","enter","exit","style","transitionDelay","elevation","transition","left","transform","boxShadow","TrendingUpIcon","TrendingDownIcon","ml","TabPanel","props","other","_objectWithoutProperties","_excluded","role","hidden","pt","TrendingInsightsPredictions","tabValue","setTabValue","trendingData","setTrendingData","insightsData","setInsightsData","predictionsData","setPredictionsData","loadAllData","trendingRequest","trendingResponse","aiOrchestrator","processRequest","generateTrendingData","result","insightsRequest","insightsResponse","generateInsightsData","predictionsRequest","predictionsResponse","generatePredictionsData","console","aiResult","trends","defaultTrends","growth","confidence","category","ShowChartIcon","PsychologyIcon","trend","insights","defaultInsights","impact","actionable","source","insight","predictions","topDeals","defaultPredictions","probability","timeframe","riskLevel","prediction","getImpactColor","getRiskColor","risk","getTypeIcon","Tabs","newValue","Tab","iconPosition","py","LightbulbIcon","Card","CardContent","Avatar","ArrowUpIcon","round","LinearProgress","List","React","ListItem","ListItemAvatar","ListItemText","toUpperCase","toLocaleTimeString","Divider","textTransform","REVENUE_DATA","COLORS","chartType","setChartType","timeRange","setTimeRange","getChartTypeFromQuery","lowercaseQuery","toLowerCase","includes","chartDataType","newChartType","dealStatusData","defaultValue","newCustomersData","revenueByMonthData","conversionRateData","monthlyRevenueData","chartData","getChartData","formatValue","ToggleButtonGroup","exclusive","handleChartTypeChange","event","ToggleButton","BarChartIcon","PieChartIcon","LineChartIcon","TableChartIcon","FormControl","InputLabel","Select","labelId","MenuItem","ResponsiveContainer","BarChart","margin","right","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","formatter","Legend","Bar","fill","PieChart","Pie","cx","cy","labelLine","outerRadius","nameKey","entry","Cell","LineChart","Line","stroke","activeDot","r","borderCollapse","padding","textAlign","DEFAULT_SAVED_REPORTS","createdAt","favorite","tags","SavedReports","localizedItems","returnObjects","SAVED_REPORTS","_loc$title","loc","String","Array","isArray","anchorEl","setAnchorEl","selectedReportId","setSelectedReportId","searchQuery","setSearchQuery","favorites","setFavorites","report","handleMenuClose","getChartIcon","filteredReports","filter","some","tag","startAdornment","SearchIcon","stopPropagation","FavoriteIcon","FavoriteBorderIcon","idx","ListItemSecondaryAction","edge","handleMenuOpen","currentTarget","MoreVertIcon","Menu","Boolean","DownloadIcon","EditIcon","ShareIcon","DeleteIcon","globalAISearch","constructor","searchHistory","searchCache","Map","contextData","this","loadSearchHistory","setContext","context","search","filters","cacheKey","generateCacheKey","has","get","searchRequest","response","results","processSearchResults","set","addToSearchHistory","getFallbackResults","quickSearch","maxResults","getSearchSuggestions","partialQuery","currentPage","getPopularSearches","suggestionRequest","suggestions","contextualSearch","_this$contextData","contextualFilters","types","contextual","semanticSearch","semanticRequest","originalQuery","relevanceScore","relevance","metadata","url","generateResultUrl","contract","invoice","requirement","quotation","JSON","stringify","popularSearches","default","unshift","saveSearchHistory","saved","localStorage","getItem","parse","setItem","clearCache","clear","getSearchStats","historyCount","cacheSize","recentSearches","exportSearchData","history","avatar","Dashboard","_searchRef$current","location","useLocation","navigate","useNavigate","currentQuery","setCurrentQuery","isLoaded","setIsLoaded","isSearchOpen","setIsSearchOpen","setSuggestions","isMinimized","setIsMinimized","showScrollToTop","setShowScrollToTop","scrollY","setScrollY","showSearchResults","setShowSearchResults","activeTab","setActiveTab","expandedSections","setExpandedSections","assistantOpen","setAssistantOpen","assistantMinimized","setAssistantMinimized","assistantQuery","setAssistantQuery","searchRef","inputRef","timer","clearTimeout","handleScroll","currentScrollY","window","addEventListener","removeEventListener","loadSuggestions","pathname","handleSearch","log","handleGenerateReport","getContactDisplay","test","handleContactClick","contactId","handleDealClick","dealId","handleShowMore","getExtendedContacts","extended","push","getExtendedDeals","getStatusColor","status","gutterBottom","mx","ClickAwayListener","onClickAway","handleClickAway","Zoom","onFocus","handleInputFocus","onKeyDown","_inputRef$current","blur","CircularProgress","borderWidth","Popper","placement","clientWidth","letterSpacing","ListItemButton","charAt","whiteSpace","textOverflow","flexShrink","handleViewAllContacts","handleViewAllDeals","my","handleOpenAssistant","SparkleIcon","substring","Slide","direction","mountOnEnter","unmountOnExit","handleScrollToTop","scrollTo","KeyboardArrowUpIcon","MicIcon","handleBackToDropdown","ArrowBackIcon","HandshakeIcon","lg","DynamicCharts","CrmAssistantPanel","handleCloseAssistant","handleMinimizeAssistant"],"sourceRoot":""}