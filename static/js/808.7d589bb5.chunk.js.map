{"version":3,"file":"static/js/808.7d589bb5.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Email.js","../node_modules/@mui/material/esm/TableFooter/tableFooterClasses.js","../node_modules/@mui/material/esm/TableFooter/TableFooter.js","../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/esm/Stack/Stack.js","../node_modules/@mui/system/esm/styled/styled.js","../node_modules/@mui/icons-material/esm/NavigateNext.js","../node_modules/@mui/icons-material/esm/DragIndicator.js","../node_modules/@mui/icons-material/esm/Cancel.js","pages/QuotationManagement/components/FixedPriceTable/index.tsx","pages/QuotationManagement/components/TimeAndMaterialTable/index.tsx","pages/QuotationManagement/components/EstimationStep/index.tsx","pages/QuotationManagement/components/QuotationForm/index.tsx","pages/QuotationManagement/components/EstimationTable/index.tsx","pages/QuotationManagement/components/QuotationDetail/index.tsx","pages/QuotationManagement/components/QuotationPreview/index.tsx","pages/QuotationManagement/components/QuotationList/index.tsx","pages/QuotationManagement/components/EmailQuotationDialog/index.tsx","pages/QuotationManagement/components/QuotationTemplates/index.tsx","pages/QuotationManagement/components/UploadQuoteTemplate/index.tsx","pages/QuotationManagement/index.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Email');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableFooterUtilityClass(slot) {\n  return generateUtilityClass('MuiTableFooter', slot);\n}\nconst tableFooterClasses = generateUtilityClasses('MuiTableFooter', ['root']);\nexport default tableFooterClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableFooterUtilityClass } from \"./tableFooterClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableFooterUtilityClass, classes);\n};\nconst TableFooterRoot = styled('tfoot', {\n  name: 'MuiTableFooter',\n  slot: 'Root'\n})({\n  display: 'table-footer-group'\n});\nconst tablelvl2 = {\n  variant: 'footer'\n};\nconst defaultComponent = 'tfoot';\nconst TableFooter = /*#__PURE__*/React.forwardRef(function TableFooter(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableFooter'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableFooterRoot, {\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableFooter.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableFooter;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport deepmerge from '@mui/utils/deepmerge';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport systemStyled from \"../styled/index.js\";\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from \"../breakpoints/index.js\";\nimport { createUnarySpacing, getValue } from \"../spacing/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root'\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push(/*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    display: 'flex',\n    flexDirection: 'column',\n    ...handleBreakpoints({\n      theme\n    }, resolveBreakpointValues({\n      values: ownerState.direction,\n      breakpoints: theme.breakpoints.values\n    }), propValue => ({\n      flexDirection: propValue\n    }))\n  };\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children,\n      className,\n      useFlexGap = false,\n      ...other\n    } = props;\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, {\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className),\n      ...other,\n      children: divider ? joinChildren(children, divider) : children\n    });\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root'\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2m-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2\"\n}), 'DragIndicator');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z\"\n}), 'Cancel');","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TextField,\r\n  IconButton,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  Tooltip,\r\n  TableFooter,\r\n  TablePagination,\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  Save as SaveIcon,\r\n  Cancel as CancelIcon,\r\n  DragIndicator as DragHandleIcon,\r\n} from '@mui/icons-material';\r\nimport { EffortColumn, EstimationRow } from '../../types/quoteTemplate';\r\n\r\n// Các cột cố định không thể xóa\r\nconst FIXED_COLUMNS: Omit<EffortColumn, 'id' | 'key' | 'order'>[] = [\r\n  { name: 'Feature', isFixed: true },\r\n  { name: 'Detail', isFixed: true },\r\n  { name: 'Description', isFixed: true },\r\n  { name: 'Notes', isFixed: true },\r\n  { name: 'IT Req', isFixed: true, isEffort: true },\r\n  { name: 'UX/UI', isFixed: true, isEffort: true },\r\n];\r\n\r\ninterface FixedPriceTableProps {\r\n  rows: EstimationRow[];\r\n  effortColumns: EffortColumn[];\r\n  onRowsChange: (rows: EstimationRow[]) => void;\r\n  onColumnsChange: (columns: EffortColumn[]) => void;\r\n}\r\n\r\nconst FixedPriceTable: React.FC<FixedPriceTableProps> = ({\r\n  rows = [],\r\n  effortColumns = [],\r\n  onRowsChange,\r\n  onColumnsChange,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [newColumnName, setNewColumnName] = useState('');\r\n  const [editingColumn, setEditingColumn] = useState<string | null>(null);\r\n  const [editColumnName, setEditColumnName] = useState('');\r\n\r\n  // Xử lý thay đổi trang\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  // Xử lý thay đổi số dòng mỗi trang\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // Thêm cột effort mới\r\n  const handleAddColumn = () => {\r\n    if (!newColumnName.trim()) return;\r\n    \r\n    // Đặt thứ tự của cột mới cao hơn các cột cố định nhưng thấp hơn cột hành động\r\n    // Cột hành động sẽ có thứ tự cao nhất (1000)\r\n    const newColumn: EffortColumn = {\r\n      id: `col-${Date.now()}`,\r\n      name: newColumnName.trim(),\r\n      key: `effort-${Date.now()}`,\r\n      order: 900, // Thứ tự cao để đảm bảo nằm sau các cột cố định nhưng trước cột hành động\r\n      isFixed: false,\r\n      color: '#ffffff' // Màu mặc định\r\n    };\r\n\r\n    onColumnsChange([...effortColumns, newColumn]);\r\n    setNewColumnName('');\r\n  };\r\n\r\n  // Bắt đầu chỉnh sửa tên cột\r\n  const startEditingColumn = (columnId: string, currentName: string) => {\r\n    setEditingColumn(columnId);\r\n    setEditColumnName(currentName);\r\n  };\r\n\r\n  // Lưu tên cột đã chỉnh sửa\r\n  const saveColumnName = (columnId: string) => {\r\n    const updatedColumns = effortColumns.map(col => \r\n      col.id === columnId ? { ...col, name: editColumnName } : col\r\n    );\r\n    onColumnsChange(updatedColumns);\r\n    setEditingColumn(null);\r\n  };\r\n\r\n  // Xóa cột\r\n  const handleDeleteColumn = (columnId: string) => {\r\n    const columnToDelete = effortColumns.find(col => col.id === columnId);\r\n    if (!columnToDelete?.isFixed) {\r\n      const updatedColumns = effortColumns.filter(col => col.id !== columnId);\r\n      onColumnsChange(updatedColumns);\r\n      \r\n      // Cập nhật dữ liệu hàng để xóa cột effort tương ứng\r\n      const updatedRows = rows.map(row => {\r\n        const { [columnToDelete?.key || '']: _, ...restEfforts } = row.efforts || {};\r\n        return { ...row, efforts: restEfforts };\r\n      });\r\n      onRowsChange(updatedRows);\r\n    }\r\n  };\r\n\r\n  // Cập nhật giá trị ô\r\n  const handleCellChange = (\r\n    rowId: string,\r\n    field: string,\r\n    value: string | number\r\n  ) => {\r\n    const updatedRows = rows.map(row => {\r\n      if (row.id === rowId) {\r\n        if (field.startsWith('effort-')) {\r\n          return {\r\n            ...row,\r\n            efforts: {\r\n              ...row.efforts,\r\n              [field]: Number(value) || 0,\r\n            },\r\n          };\r\n        }\r\n        return { ...row, [field]: value };\r\n      }\r\n      return row;\r\n    });\r\n    onRowsChange(updatedRows);\r\n  };\r\n\r\n  // Thêm hàng mới\r\n  const handleAddRow = () => {\r\n    const newRow: EstimationRow = {\r\n      id: `row-${Date.now()}`,\r\n      feature: '',\r\n      detail: '',\r\n      description: '',\r\n      notes: '',\r\n      itReq: '',\r\n      uxUi: '',\r\n      efforts: {},\r\n    };\r\n    onRowsChange([...rows, newRow]);\r\n  };\r\n\r\n  // Xóa hàng\r\n  const handleDeleteRow = (rowId: string) => {\r\n    onRowsChange(rows.filter(row => row.id !== rowId));\r\n  };\r\n\r\n  // Tính tổng cho từng cột effort\r\n  const calculateColumnTotal = (columnKey: string) => {\r\n    return rows.reduce((sum, row) => {\r\n      return sum + (Number(row.efforts?.[columnKey]) || 0);\r\n    }, 0);\r\n  };\r\n\r\n  // Lấy tất cả các cột (cố định + động)\r\n  const fixedColumnsWithIds = FIXED_COLUMNS.map((col, index) => ({\r\n    ...col,\r\n    id: `fixed-${index}`,\r\n    key: col.name.toLowerCase().replace(/\\s+/g, '-'),\r\n    order: index, // Các cột cố định có thứ tự thấp (0-5)\r\n  }));\r\n  \r\n  // Chỉ lấy các cột effort không trùng với các cột cố định\r\n  const nonDuplicateEffortColumns = effortColumns.filter(effortCol => \r\n    !fixedColumnsWithIds.some(fixedCol => fixedCol.key === effortCol.key)\r\n  );\r\n  \r\n  // Thêm cột Subtotal (days) với thứ tự cao\r\n  const subtotalColumn = {\r\n    id: 'subtotal-column',\r\n    name: t('pages.quotations.estimation.fixed.subtotalDays'),\r\n    key: 'subtotal',\r\n    order: 950, // Thứ tự cao để đảm bảo nằm sau các cột effort nhưng trước cột hành động\r\n    isFixed: true,\r\n  };\r\n  \r\n  // Sắp xếp các cột theo thứ tự\r\n  const allColumns = [\r\n    ...fixedColumnsWithIds,\r\n    ...nonDuplicateEffortColumns,\r\n    subtotalColumn, // Thêm cột subtotal\r\n  ].sort((a, b) => a.order - b.order);\r\n\r\n  return (\r\n    <Box>\r\n      {/* Thanh công cụ */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n        <Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleAddRow}\r\n            size=\"small\"\r\n            sx={{ mr: 1 }}\r\n          >\r\n            {t('pages.quotations.estimation.fixed.addRow')}\r\n          </Button>\r\n        </Box>\r\n        \r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <TextField\r\n            size=\"small\"\r\n            placeholder={t('pages.quotations.estimation.fixed.newColumnPlaceholder')}\r\n            value={newColumnName}\r\n            onChange={(e) => setNewColumnName(e.target.value)}\r\n            sx={{ mr: 1, minWidth: 150 }}\r\n          />\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleAddColumn}\r\n            size=\"small\"\r\n            disabled={!newColumnName.trim()}\r\n          >\r\n            {t('pages.quotations.estimation.fixed.addColumn')}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Bảng dữ liệu */}\r\n      <TableContainer component={Paper} sx={{ maxHeight: 600, overflow: 'auto' }}>\r\n        <Table stickyHeader size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell width={50}>#</TableCell>\r\n              {allColumns.map((column) => (\r\n                <TableCell key={column.id}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <DragHandleIcon \r\n                      sx={{ \r\n                        mr: 1, \r\n                        cursor: 'move',\r\n                        opacity: column.isFixed ? 0.3 : 1,\r\n                        '&:hover': {\r\n                          opacity: 1,\r\n                        },\r\n                      }} \r\n                    />\r\n                    \r\n                    {editingColumn === column.id ? (\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <TextField\r\n                          value={editColumnName}\r\n                          onChange={(e) => setEditColumnName(e.target.value)}\r\n                          size=\"small\"\r\n                          sx={{ mr: 1 }}\r\n                        />\r\n                        <IconButton \r\n                          size=\"small\" \r\n                          onClick={() => saveColumnName(column.id)}\r\n                          color=\"primary\"\r\n                        >\r\n                          <SaveIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                        <IconButton \r\n                          size=\"small\" \r\n                          onClick={() => setEditingColumn(null)}\r\n                          color=\"error\"\r\n                        >\r\n                          <CancelIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      </Box>\r\n                    ) : (\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Typography variant=\"subtitle2\">\r\n                          {(() => {\r\n                            // Map fixed column keys to i18n labels; fallback to column.name for dynamic columns\r\n                            switch (column.key) {\r\n                              case 'feature':\r\n                                return t('pages.quotations.estimation.table.feature');\r\n                              case 'detail':\r\n                                return t('pages.quotations.estimation.table.detail');\r\n                              case 'description':\r\n                                return t('pages.quotations.estimation.table.description');\r\n                              case 'notes':\r\n                                return t('pages.quotations.estimation.table.note');\r\n                              case 'it-req':\r\n                                return t('pages.quotations.estimation.fixed.columns.itReq');\r\n                              case 'ux/ui':\r\n                                return t('pages.quotations.estimation.fixed.columns.uxUi');\r\n                              case 'subtotal':\r\n                                return t('pages.quotations.estimation.fixed.subtotalDays');\r\n                              default:\r\n                                return column.name;\r\n                            }\r\n                          })()}\r\n                        </Typography>\r\n                        {!column.isFixed && (\r\n                          <Box sx={{ ml: 1 }}>\r\n                            <IconButton \r\n                              size=\"small\" \r\n                              onClick={() => startEditingColumn(column.id, column.name)}\r\n                              sx={{ p: 0.5 }}\r\n                            >\r\n                              <EditIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                            <IconButton \r\n                              size=\"small\" \r\n                              onClick={() => handleDeleteColumn(column.id)}\r\n                              sx={{ p: 0.5 }}\r\n                              color=\"error\"\r\n                            >\r\n                              <DeleteIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                          </Box>\r\n                        )}\r\n                      </Box>\r\n                    )}\r\n                  </Box>\r\n                </TableCell>\r\n              ))}\r\n              {/* Action column always at the end */}\r\n              <TableCell width={80}>{t('pages.quotations.tables.actions')}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          \r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, rowIndex) => (\r\n                <TableRow key={row.id} hover>\r\n                  <TableCell>{page * rowsPerPage + rowIndex + 1}</TableCell>\r\n                  \r\n                  {allColumns.map((column) => {\r\n                    // Kiểm tra nếu column key là của các cột effort\r\n                    const isEffortColumn = column.key === 'it-req' || column.key === 'ux/ui' || \r\n                                         column.key.startsWith('effort-') || \r\n                                         (column as EffortColumn).isEffort === true;\r\n                    \r\n                    // Log ra để kiểm tra key của các cột\r\n                    console.log('Column key:', column.key, 'isEffort:', isEffortColumn);\r\n                    \r\n                    // Kiểm tra nếu là cột subtotal\r\n                    const isSubtotalColumn = column.key === 'subtotal';\r\n                    \r\n                    return (\r\n                      <TableCell key={`${row.id}-${column.key}`}>\r\n                        {isEffortColumn ? (\r\n                          <TextField\r\n                            type=\"number\"\r\n                            value={column.key === 'it-req' ? row.itReq || '' : \r\n                                  column.key === 'ux/ui' ? row.uxUi || '' : \r\n                                  row.efforts?.[column.key] || ''}\r\n                            onChange={(e) => {\r\n                              const value = e.target.value;\r\n                              // Xử lý đặc biệt cho các cột IT Req và UX/UI\r\n                              if (column.key === 'it-req') {\r\n                                handleCellChange(row.id, 'itReq', value);\r\n                              } else if (column.key === 'ux/ui') {\r\n                                handleCellChange(row.id, 'uxUi', value);\r\n                              } else {\r\n                                handleCellChange(row.id, column.key, value);\r\n                              }\r\n                            }}\r\n                            size=\"small\"\r\n                            fullWidth\r\n                            inputProps={{ min: 0, step: 0.5 }}\r\n                          />\r\n                        ) : isSubtotalColumn ? (\r\n                          // Hiển thị tổng ngày công cho mỗi dòng\r\n                          <Typography variant=\"body2\" fontWeight=\"bold\">\r\n                            {Object.keys(row.efforts || {}).reduce((sum, key) => sum + (Number(row.efforts?.[key]) || 0), 0) + \r\n                             (Number(row.itReq) || 0) + (Number(row.uxUi) || 0)}\r\n                          </Typography>\r\n                        ) : (\r\n                          <TextField\r\n                            value={row[column.key as keyof EstimationRow] || ''}\r\n                            onChange={(e) => \r\n                              handleCellChange(row.id, column.key, e.target.value)\r\n                            }\r\n                            size=\"small\"\r\n                            fullWidth\r\n                            multiline\r\n                            maxRows={4}\r\n                          />\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                  \r\n                  <TableCell>\r\n                    <Tooltip title={t('pages.quotations.estimation.fixed.deleteRow')}>\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        color=\"error\"\r\n                        onClick={() => handleDeleteRow(row.id)}\r\n                      >\r\n                        <DeleteIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n          \r\n          {/* Dòng tổng cộng */}\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TableCell colSpan={FIXED_COLUMNS.length + 1} align=\"right\">\r\n                <strong>{t('pages.quotations.estimation.fixed.total')}</strong>\r\n              </TableCell>\r\n              {effortColumns.map((column) => (\r\n                <TableCell key={`total-${column.key}`}>\r\n                  <strong>{calculateColumnTotal(column.key)}</strong>\r\n                </TableCell>\r\n              ))}\r\n              {/* Cột Subtotal tổng */}\r\n              <TableCell>\r\n                <strong>\r\n                  {rows.reduce((sum, row) => {\r\n                    const rowTotal = Object.keys(row.efforts || {}).reduce(\r\n                      (rowSum, key) => rowSum + (Number(row.efforts?.[key]) || 0), 0\r\n                    ) + (Number(row.itReq) || 0) + (Number(row.uxUi) || 0);\r\n                    return sum + rowTotal;\r\n                  }, 0)}\r\n                </strong>\r\n              </TableCell>\r\n              <TableCell />\r\n            </TableRow>\r\n            {/* Thêm dòng Tổng cộng - Theo giai đoạn (ngày công) */}\r\n            <TableRow sx={{ backgroundColor: '#f5f5f5' }}>\r\n              <TableCell colSpan={FIXED_COLUMNS.length + effortColumns.length + 1} align=\"right\">\r\n                <strong>{t('pages.quotations.estimation.fixed.totalByPhase')}</strong>\r\n              </TableCell>\r\n              <TableCell>\r\n                <strong>\r\n                  {rows.reduce((sum, row) => {\r\n                    const rowTotal = Object.keys(row.efforts || {}).reduce(\r\n                      (rowSum, key) => rowSum + (Number(row.efforts?.[key]) || 0), 0\r\n                    ) + (Number(row.itReq) || 0) + (Number(row.uxUi) || 0);\r\n                    return sum + rowTotal;\r\n                  }, 0)}\r\n                </strong>\r\n              </TableCell>\r\n              <TableCell />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </TableContainer>\r\n      \r\n      {/* Pagination */}\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25, 50]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n        labelRowsPerPage={t('pages.quotations.pagination.rowsPerPage')}\r\n        labelDisplayedRows={({ from, to, count }) => \r\n          t('pages.quotations.pagination.displayedRows', { from, to, count })\r\n        }\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FixedPriceTable;\r\n","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TextField,\r\n  IconButton,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  TableFooter,\r\n  TablePagination,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n} from '@mui/icons-material';\r\nimport { TimeAndMaterialRate } from '../../types/quoteTemplate';\r\n\r\n// Các vai trò mặc định\r\nconst DEFAULT_ROLES = [\r\n  'Project Manager',\r\n  'Business Analyst',\r\n  'Developer',\r\n  'Tester',\r\n  'UI/UX Designer',\r\n  'DevOps',\r\n  'System Architect',\r\n  'Technical Lead',\r\n];\r\n\r\ninterface TimeAndMaterialTableProps {\r\n  rates: TimeAndMaterialRate[];\r\n  onRatesChange: (rates: TimeAndMaterialRate[]) => void;\r\n}\r\n\r\nconst TimeAndMaterialTable: React.FC<TimeAndMaterialTableProps> = ({\r\n  rates = [],\r\n  onRatesChange,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [newRole, setNewRole] = useState('');\r\n  const [customRole, setCustomRole] = useState('');\r\n\r\n  // Xử lý thay đổi trang\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  // Xử lý thay đổi số dòng mỗi trang\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // Thêm dòng mới\r\n  const handleAddRow = () => {\r\n    if (!newRole && !customRole) return;\r\n    \r\n    const roleToAdd = newRole === 'custom' ? customRole : newRole;\r\n    \r\n    // Kiểm tra nếu vai trò đã tồn tại\r\n    if (rates.some(rate => rate.role.toLowerCase() === roleToAdd.toLowerCase())) {\r\n      alert(t('pages.quotations.tnm.messages.roleExists'));\r\n      return;\r\n    }\r\n\r\n    const newRate: TimeAndMaterialRate = {\r\n      id: `rate-${Date.now()}`,\r\n      role: roleToAdd,\r\n      rate: 0,\r\n      unit: 'hour',\r\n      description: ''\r\n    };\r\n\r\n    onRatesChange([...rates, newRate]);\r\n    setNewRole('');\r\n    setCustomRole('');\r\n  };\r\n\r\n  // Cập nhật giá trị\r\n  const handleRateChange = (id: string, field: keyof TimeAndMaterialRate, value: any) => {\r\n    const updatedRates = rates.map(rate => \r\n      rate.id === id ? { ...rate, [field]: value } : rate\r\n    ) as TimeAndMaterialRate[];\r\n    onRatesChange(updatedRates);\r\n  };\r\n\r\n  // Xóa dòng\r\n  const handleDeleteRow = (id: string) => {\r\n    onRatesChange(rates.filter(rate => rate.id !== id));\r\n  };\r\n\r\n  // Tính tổng tiền\r\n  const calculateTotal = () => {\r\n    return rates.reduce((sum, rate) => {\r\n      return sum + (rate.rate || 0);\r\n    }, 0);\r\n  };\r\n\r\n  // Tính tổng số giờ/ngày\r\n  const calculateTotalHours = () => {\r\n    return rates.reduce((sum, rate) => {\r\n      const hours = rate.unit === 'hour' ? 1 : 8; // 1 ngày = 8 giờ\r\n      return sum + (rate.rate || 0) * hours;\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {/* Thanh công cụ */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n          <FormControl variant=\"outlined\" size=\"small\" sx={{ minWidth: 200 }}>\r\n            <InputLabel>{t('pages.quotations.tnm.selectRole')}</InputLabel>\r\n            <Select\r\n              value={newRole}\r\n              onChange={(e) => setNewRole(e.target.value as string)}\r\n              label={t('pages.quotations.tnm.selectRole')}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>{t('pages.quotations.tnm.selectRole')}</em>\r\n              </MenuItem>\r\n              {DEFAULT_ROLES.map((role) => (\r\n                <MenuItem key={role} value={role}>\r\n                  {role}\r\n                </MenuItem>\r\n              ))}\r\n              <MenuItem value=\"custom\">\r\n                <em>{t('pages.quotations.tnm.addCustomRole')}</em>\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {newRole === 'custom' && (\r\n            <TextField\r\n              size=\"small\"\r\n              label={t('pages.quotations.tnm.roleName')}\r\n              value={customRole}\r\n              onChange={(e) => setCustomRole(e.target.value)}\r\n              sx={{ minWidth: 200 }}\r\n            />\r\n          )}\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleAddRow}\r\n            disabled={!newRole || (newRole === 'custom' && !customRole.trim())}\r\n          >\r\n            {t('common.add')}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Bảng dữ liệu */}\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell width={50}>{t('pages.quotations.preview.table.no')}</TableCell>\r\n              <TableCell>{t('pages.quotations.tnm.columns.role')}</TableCell>\r\n              <TableCell align=\"right\">{t('pages.quotations.tnm.columns.hoursOrMd')}</TableCell>\r\n              <TableCell>{t('pages.quotations.tnm.columns.unit')}</TableCell>\r\n              <TableCell align=\"right\">{t('pages.quotations.tnm.columns.unitPrice')}</TableCell>\r\n              <TableCell align=\"right\">{t('pages.quotations.tnm.columns.amount')}</TableCell>\r\n              <TableCell width={80}></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          \r\n          <TableBody>\r\n            {rates\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((rate, index) => (\r\n                <TableRow key={rate.id} hover>\r\n                  <TableCell>{page * rowsPerPage + index + 1}</TableCell>\r\n                  \r\n                  <TableCell>\r\n                    <TextField\r\n                      value={rate.role}\r\n                      onChange={(e) => handleRateChange(rate.id, 'role', e.target.value)}\r\n                      size=\"small\"\r\n                      fullWidth\r\n                    />\r\n                  </TableCell>\r\n                  \r\n                  <TableCell>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      value={rate.rate || ''}\r\n                      onChange={(e) => handleRateChange(rate.id, 'rate', Number(e.target.value))}\r\n                      size=\"small\"\r\n                      fullWidth\r\n                      inputProps={{ min: 0, step: 0.01 }}\r\n                    />\r\n                  </TableCell>\r\n                  \r\n                  <TableCell>\r\n                    <Select\r\n                      value={rate.unit}\r\n                      onChange={(e) => handleRateChange(rate.id, 'unit', e.target.value)}\r\n                      size=\"small\"\r\n                      fullWidth\r\n                    >\r\n                      <MenuItem value=\"hour\">{t('pages.quotations.tnm.units.hour')}</MenuItem>\r\n                      <MenuItem value=\"day\">{t('pages.quotations.tnm.units.day')}</MenuItem>\r\n                    </Select>\r\n                  </TableCell>\r\n                  \r\n                  <TableCell align=\"right\">\r\n                    {new Intl.NumberFormat('vi-VN', {\r\n                      style: 'currency',\r\n                      currency: 'VND',\r\n                    }).format(rate.rate || 0)}\r\n                    <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\r\n                      /{rate.unit === 'hour' ? t('pages.quotations.tnm.perHour') : t('pages.quotations.tnm.perMd')}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  \r\n                  <TableCell align=\"right\">\r\n                    {new Intl.NumberFormat('vi-VN', {\r\n                      style: 'currency',\r\n                      currency: 'VND',\r\n                    }).format(rate.rate * (rate.unit === 'hour' ? 1 : 8) || 0)}\r\n                    <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\r\n                      ({rate.unit === 'hour' ? t('pages.quotations.tnm.hourHint') : t('pages.quotations.tnm.mdHint')})\r\n                    </Typography>\r\n                  </TableCell>\r\n                  \r\n                  <TableCell align=\"center\">\r\n                    <Tooltip title={t('common.delete')}>\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        color=\"error\"\r\n                        onClick={() => handleDeleteRow(rate.id)}\r\n                      >\r\n                        <DeleteIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n          \r\n          {/* Tổng cộng */}\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TableCell colSpan={4} align=\"right\">\r\n                <strong>{t('pages.quotations.tnm.total')}:</strong>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <strong>\r\n                  {new Intl.NumberFormat('vi-VN', {\r\n                    style: 'currency',\r\n                    currency: 'VND',\r\n                  }).format(calculateTotal())}\r\n                </strong>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <strong>\r\n                  {new Intl.NumberFormat('vi-VN', {\r\n                    style: 'currency',\r\n                    currency: 'VND',\r\n                  }).format(calculateTotalHours())}\r\n                </strong>\r\n                <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\r\n                  ({t('pages.quotations.tnm.totalHours', { hours: calculateTotalHours() })})\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </TableContainer>\r\n      \r\n      {/* Phân trang */}\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25, 50]}\r\n        component=\"div\"\r\n        count={rates.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n        labelRowsPerPage={t('pages.quotations.pagination.rowsPerPage')}\r\n        labelDisplayedRows={({ from, to, count }) => \r\n          t('pages.quotations.pagination.displayedRows', { from, to, count })\r\n        }\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TimeAndMaterialTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Radio, \r\n  RadioGroup, \r\n  FormControlLabel, \r\n  FormControl, \r\n  FormLabel, \r\n  Paper,\r\n  Divider,\r\n  Alert,\r\n  Snackbar\r\n} from '@mui/material';\r\nimport { \r\n  EstimationMode, \r\n  EffortColumn, \r\n  EstimationRow, \r\n  TimeAndMaterialRate \r\n} from '../../types/quoteTemplate';\r\nimport FixedPriceTable from '../FixedPriceTable';\r\nimport TimeAndMaterialTable from '../TimeAndMaterialTable';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// Các cột effort mặc định cho chế độ Fix Price\r\nconst DEFAULT_EFFORT_COLUMNS: EffortColumn[] = [];\r\n\r\n// Tỷ giá mặc định cho chế độ Time & Material\r\nconst DEFAULT_TM_RATES: TimeAndMaterialRate[] = [\r\n  {\r\n    id: 'rate-1',\r\n    role: 'Developer',\r\n    rate: 50,\r\n    unit: 'hour',\r\n    description: 'Senior Developer'\r\n  },\r\n  {\r\n    id: 'rate-2',\r\n    role: 'Designer',\r\n    rate: 40,\r\n    unit: 'hour',\r\n    description: 'UI/UX Designer'\r\n  }\r\n];\r\n\r\ninterface EstimationStepProps {\r\n  mode: EstimationMode;\r\n  onModeChange: (mode: EstimationMode) => void;\r\n  onEstimationDataChange?: (data: any) => void;\r\n  // Dữ liệu requirement từ bước 1\r\n  initialData?: {\r\n    rows?: any[];\r\n  };\r\n}\r\n\r\nconst EstimationStep: React.FC<EstimationStepProps> = ({\r\n  mode,\r\n  onModeChange,\r\n  onEstimationDataChange,\r\n  initialData,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  // State cho chế độ Fix Price\r\n  const [fixedPriceRows, setFixedPriceRows] = useState<EstimationRow[]>([]);\r\n  const [effortColumns, setEffortColumns] = useState<EffortColumn[]>(DEFAULT_EFFORT_COLUMNS);\r\n  \r\n  // State cho chế độ Time & Material\r\n  const [tmRates, setTmRates] = useState<TimeAndMaterialRate[]>(DEFAULT_TM_RATES);\r\n  \r\n  // State thông báo\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: 'success' as 'success' | 'error' | 'info' | 'warning'\r\n  });\r\n\r\n  // Khởi tạo dữ liệu mẫu khi component mount\r\n  useEffect(() => {\r\n    // Nếu có dữ liệu ban đầu từ requirement, sử dụng nó\r\n    if (initialData?.rows && initialData.rows.length > 0 && fixedPriceRows.length === 0) {\r\n      const mappedRows = initialData.rows.map(item => ({\r\n        id: `row-${Date.now()}-${Math.random().toString(36).substr(2, 5)}`,\r\n        feature: item.feature || '',\r\n        detail: item.detail || '',\r\n        description: item.description || '',\r\n        notes: item.note || '',\r\n        itReq: '',\r\n        uxUi: '',\r\n        efforts: {},\r\n      }));\r\n      setFixedPriceRows(mappedRows);\r\n    } \r\n    // Thêm một dòng trống mặc định cho Fixed Price nếu không có dữ liệu ban đầu\r\n    else if (fixedPriceRows.length === 0) {\r\n      setFixedPriceRows([createNewRow()]);\r\n    }\r\n  }, [fixedPriceRows.length, initialData]);\r\n\r\n  // Tạo một dòng mới cho Fixed Price\r\n  const createNewRow = (): EstimationRow => ({\r\n    id: `row-${Date.now()}`,\r\n    feature: '',\r\n    detail: '',\r\n    description: '',\r\n    notes: '',\r\n    itReq: '',\r\n    uxUi: '',\r\n    efforts: {},\r\n  });\r\n\r\n  // Xử lý thay đổi chế độ\r\n  const handleModeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newMode = event.target.value as EstimationMode;\r\n    onModeChange(newMode);\r\n    \r\n    // Thông báo khi chuyển chế độ\r\n    setSnackbar({\r\n      open: true,\r\n      message:\r\n        newMode === 'fixed'\r\n          ? t('pages.quotations.estimation.modeSwitchedFixed', 'Switched to Fixed Price mode')\r\n          : t('pages.quotations.estimation.modeSwitchedTimeAndMaterial', 'Switched to Time & Material mode'),\r\n      severity: 'info'\r\n    });\r\n  };\r\n\r\n  // Xử lý thay đổi dữ liệu Fixed Price\r\n  const handleFixedPriceDataChange = (rows: EstimationRow[], columns: EffortColumn[]) => {\r\n    setFixedPriceRows(rows);\r\n    setEffortColumns(columns);\r\n    \r\n    if (onEstimationDataChange) {\r\n      onEstimationDataChange({\r\n        mode: 'fixed',\r\n        rows,\r\n        columns\r\n      });\r\n    }\r\n  };\r\n\r\n  // Xử lý thay đổi dữ liệu Time & Material\r\n  const handleTimeMaterialDataChange = (rates: TimeAndMaterialRate[]) => {\r\n    setTmRates(rates);\r\n    \r\n    if (onEstimationDataChange) {\r\n      onEstimationDataChange({\r\n        mode: 'timeAndMaterial',\r\n        rates\r\n      });\r\n    }\r\n  };\r\n\r\n  // Đóng thông báo\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar({ ...snackbar, open: false });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 3 }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        {t('pages.quotations.estimation.table.title', 'Estimation table')}\r\n      </Typography>\r\n      \r\n      <Paper elevation={0} sx={{ p: 3, mb: 3, border: '1px solid #e0e0e0', borderRadius: 1 }}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <FormLabel component=\"legend\" sx={{ mb: 2, fontWeight: 'bold', color: 'text.primary' }}>\r\n            {t('pages.quotations.estimation.chooseMethod', 'Choose estimation method')}\r\n          </FormLabel>\r\n          <RadioGroup\r\n            row\r\n            aria-label=\"estimation-mode\"\r\n            name=\"estimation-mode\"\r\n            value={mode}\r\n            onChange={handleModeChange}\r\n          >\r\n            <FormControlLabel\r\n              value=\"fixed\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={t('pages.quotations.estimation.modes.fixed')}\r\n              sx={{ \r\n                mr: 4,\r\n                '& .MuiFormControlLabel-label': { fontWeight: 500 }\r\n              }}\r\n            />\r\n            <FormControlLabel\r\n              value=\"timeAndMaterial\"\r\n              control={<Radio color=\"primary\" />}\r\n              label={t('pages.quotations.estimation.modes.timeAndMaterial')}\r\n              sx={{ '& .MuiFormControlLabel-label': { fontWeight: 500 } }}\r\n            />\r\n          </RadioGroup>\r\n          \r\n          <Divider sx={{ my: 2 }} />\r\n          \r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n            {mode === 'fixed' \r\n              ? t('pages.quotations.estimation.modeDescriptions.fixed', 'Fixed Price mode: Create a detailed estimation table with customizable effort columns.')\r\n              : t('pages.quotations.estimation.modeDescriptions.timeAndMaterial', 'Time & Material mode: Create an estimation based on hours and rates.')}\r\n          </Typography>\r\n        </FormControl>\r\n      </Paper>\r\n\r\n      {/* Hiển thị bảng tương ứng với chế độ đã chọn */}\r\n      {mode === 'fixed' ? (\r\n        <FixedPriceTable\r\n          rows={fixedPriceRows}\r\n          effortColumns={effortColumns}\r\n          onRowsChange={(rows) => handleFixedPriceDataChange(rows, effortColumns)}\r\n          onColumnsChange={(columns) => handleFixedPriceDataChange(fixedPriceRows, columns)}\r\n        />\r\n      ) : (\r\n        <TimeAndMaterialTable\r\n          rates={tmRates}\r\n          onRatesChange={handleTimeMaterialDataChange}\r\n        />\r\n      )}\r\n\r\n      {/* Thông báo */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={3000}\r\n        onClose={handleCloseSnackbar}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n      >\r\n        <Alert onClose={handleCloseSnackbar} severity={snackbar.severity}>\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EstimationStep;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Autocomplete,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Paper,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormHelperText,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\nimport {\r\n  NavigateNext as NextIcon,\r\n  Save as SaveIcon,\r\n  Description as TemplateIcon,\r\n} from '@mui/icons-material';\r\nimport { QuotationFormProps, Quotation, QuotationItem } from '../../types';\r\nimport { EstimationMode } from '../../types/quoteTemplate';\r\nimport EstimationStep from '../EstimationStep/index';\r\n\r\nconst QuotationForm: React.FC<QuotationFormProps> = ({\r\n  open,\r\n  onClose,\r\n  onSave,\r\n  customers,\r\n  deals,\r\n  requirements,\r\n  templates,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  // Form state\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [touched, setTouched] = useState<Record<string, boolean>>({});\r\n  const [estimationMode, setEstimationMode] = useState<EstimationMode>('fixed');\r\n  const [newQuotation, setNewQuotation] = useState<Partial<Quotation>>({\r\n    name: '',\r\n    customer: '',\r\n    dealId: 0,\r\n    dealName: '',\r\n    requirementId: 0,\r\n    requirementName: '',\r\n    status: 'draft',\r\n    createdDate: new Date().toISOString().split('T')[0],\r\n    note: '',\r\n    items: [],\r\n    totalEffort: 0,\r\n    totalAmount: 0,\r\n    templateId: '',\r\n    templateName: '',\r\n    estimationMode: 'fixed',\r\n  });\r\n  \r\n  // Reset touched state when modal is opened/closed\r\n  useEffect(() => {\r\n    if (open) {\r\n      setTouched({});\r\n    }\r\n  }, [open]);\r\n\r\n  // Filtered options based on selections\r\n  const [filteredDeals, setFilteredDeals] = useState(deals);\r\n  const [filteredRequirements, setFilteredRequirements] = useState(requirements);\r\n  \r\n  // Items for estimation table\r\n  const [estimationItems, setEstimationItems] = useState<QuotationItem[]>([]);\r\n\r\n  // Update filtered deals when customer changes\r\n  useEffect(() => {\r\n    if (newQuotation.customer) {\r\n      setFilteredDeals(deals.filter(deal => deal.customer === newQuotation.customer));\r\n    } else {\r\n      setFilteredDeals(deals);\r\n    }\r\n  }, [newQuotation.customer, deals]);\r\n\r\n  // Update filtered requirements when deal changes\r\n  useEffect(() => {\r\n    if (newQuotation.dealId) {\r\n      setFilteredRequirements(requirements.filter(req => req.dealId === newQuotation.dealId));\r\n    } else {\r\n      setFilteredRequirements(requirements);\r\n    }\r\n  }, [newQuotation.dealId, requirements]);\r\n\r\n  // Load requirement features when a requirement is selected\r\n  useEffect(() => {\r\n    if (newQuotation.requirementId) {\r\n      const selectedRequirement = requirements.find(req => req.id === newQuotation.requirementId);\r\n      if (selectedRequirement && selectedRequirement.features && selectedRequirement.features.length > 0) {\r\n        console.log('Requirement features found:', selectedRequirement.features);\r\n        // Convert requirement features to estimation items\r\n        const items: QuotationItem[] = selectedRequirement.features.map((feature: any, index: number) => ({\r\n          id: index + 1,\r\n          feature: feature.feature || '',\r\n          detail: feature.detail || '',\r\n          description: feature.description || '',\r\n          note: feature.notes || feature.note || '',\r\n          frontendEffort: 0,\r\n          backendEffort: 0,\r\n          qcEffort: 0,\r\n          pmEffort: 0,\r\n          totalMD: 0,\r\n          totalMM: 0,\r\n        }));\r\n        setEstimationItems(items);\r\n      } else {\r\n        console.log('No features found for requirement ID:', newQuotation.requirementId);\r\n        setEstimationItems([]);\r\n      }\r\n    } else {\r\n      setEstimationItems([]);\r\n    }\r\n  }, [newQuotation.requirementId, requirements]);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevStep) => prevStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevStep) => prevStep - 1);\r\n  };\r\n\r\n  const handleCustomerChange = (_: any, newValue: string | null) => {\r\n    setNewQuotation({\r\n      ...newQuotation,\r\n      customer: newValue || '',\r\n      dealId: 0,\r\n      dealName: '',\r\n      requirementId: 0,\r\n      requirementName: '',\r\n    });\r\n  };\r\n\r\n  const handleDealChange = (_: any, newValue: { id: number; name: string } | null) => {\r\n    setNewQuotation({\r\n      ...newQuotation,\r\n      dealId: newValue?.id || 0,\r\n      dealName: newValue?.name || '',\r\n      requirementId: 0,\r\n      requirementName: '',\r\n    });\r\n  };\r\n\r\n  const handleRequirementChange = (_: any, newValue: { id: number; name: string } | null) => {\r\n    setNewQuotation({\r\n      ...newQuotation,\r\n      requirementId: newValue?.id || 0,\r\n      requirementName: newValue?.name || '',\r\n    });\r\n  };\r\n\r\n  const handleItemsChange = (updatedItems: QuotationItem[]) => {\r\n    setEstimationItems(updatedItems);\r\n    \r\n    // Calculate totals\r\n    const totalEffort = updatedItems.reduce((sum, item) => sum + item.totalMD, 0);\r\n    \r\n    // Assuming a simple calculation for total amount (e.g., 500,000 VND per MD)\r\n    const totalAmount = totalEffort * 500000;\r\n    \r\n    setNewQuotation({\r\n      ...newQuotation,\r\n      totalEffort,\r\n      totalAmount,\r\n    });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (newQuotation.name && newQuotation.customer && newQuotation.templateId) {\r\n      onSave({\r\n        ...newQuotation as Quotation,\r\n        items: estimationItems,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  const isStepOneValid = () => {\r\n    return !!(newQuotation.name && newQuotation.customer && newQuotation.dealId && newQuotation.requirementId && newQuotation.templateId);\r\n  };\r\n\r\n  const steps = [\r\n    t('pages.quotations.steps.basicInfo'),\r\n    t('pages.quotations.estimation.chooseMethod'),\r\n    t('pages.quotations.steps.preview'),\r\n  ];\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth=\"lg\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{t('pages.quotations.dialogs.createTitle')}</DialogTitle>\r\n      <DialogContent>\r\n        <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n          {steps.map((label) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n\r\n        {activeStep === 0 && (\r\n          <Box>\r\n            <Typography variant=\"h6\" gutterBottom>{t('pages.quotations.steps.basicInfo')}</Typography>\r\n            \r\n            <Box sx={{ mb: 3, border: '1px solid #e0e0e0', borderRadius: 1, p: 2, bgcolor: '#f9f9f9' }}>\r\n              <Typography variant=\"subtitle2\" gutterBottom sx={{ display: 'flex', alignItems: 'center' }}>\r\n                <TemplateIcon fontSize=\"small\" sx={{ mr: 1 }} /> \r\n                {t('pages.quotations.fields.template')}\r\n              </Typography>\r\n              <FormControl \r\n                fullWidth \r\n                margin=\"dense\" \r\n                required \r\n                error={touched.templateId && !newQuotation.templateId}\r\n              >\r\n                <InputLabel id=\"template-select-label\">{t('pages.quotations.fields.template')}</InputLabel>\r\n                <Select\r\n                  labelId=\"template-select-label\"\r\n                  id=\"template-select\"\r\n                  value={newQuotation.templateId || ''}\r\n                  label={t('pages.quotations.fields.template')}\r\n                  onChange={(e) => {\r\n                    const templateId = e.target.value;\r\n                    const selectedTemplate = templates.find(t => t.id === templateId);\r\n                    setNewQuotation({\r\n                      ...newQuotation,\r\n                      templateId: templateId,\r\n                      templateName: selectedTemplate?.name || '',\r\n                    });\r\n                    setTouched(prev => ({ ...prev, templateId: true }));\r\n                  }}\r\n                  onBlur={() => setTouched(prev => ({ ...prev, templateId: true }))}\r\n                  size=\"small\"\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>{t('pages.quotations.placeholders.selectTemplate')}</em>\r\n                  </MenuItem>\r\n                  {templates.map((template) => (\r\n                    <MenuItem key={template.id} value={template.id}>\r\n                      {template.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n                {touched.templateId && !newQuotation.templateId && (\r\n                  <FormHelperText>{t('pages.quotations.validation.selectTemplate')}</FormHelperText>\r\n                )}\r\n              </FormControl>\r\n            </Box>\r\n            \r\n            <TextField\r\n              label={t('pages.quotations.fields.name')}\r\n              fullWidth\r\n              required\r\n              value={newQuotation.name || ''}\r\n              onChange={(e) => setNewQuotation({...newQuotation, name: e.target.value})}\r\n              margin=\"normal\"\r\n              size=\"small\"\r\n              placeholder={t('pages.quotations.placeholders.name')}\r\n            />\r\n            <Box sx={{ display: 'flex', gap: 2, mb: 3, flexWrap: 'wrap' }}>\r\n              <Autocomplete\r\n                options={customers}\r\n                value={newQuotation.customer || null}\r\n                onChange={handleCustomerChange}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label={t('pages.quotations.fields.customer')}\r\n                    size=\"small\"\r\n                    sx={{ minWidth: 250, flex: 1 }}\r\n                    required\r\n                  />\r\n                )}\r\n                sx={{ minWidth: 250, flex: 1 }}\r\n              />\r\n              <Autocomplete\r\n                options={filteredDeals}\r\n                getOptionLabel={(option) => option.name}\r\n                value={newQuotation.dealId ? filteredDeals.find(d => d.id === newQuotation.dealId) || null : null}\r\n                onChange={handleDealChange}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label={t('pages.quotations.fields.deal')}\r\n                    size=\"small\"\r\n                    sx={{ minWidth: 250, flex: 1 }}\r\n                    required\r\n                  />\r\n                )}\r\n                sx={{ minWidth: 250, flex: 1 }}\r\n                disabled={!newQuotation.customer}\r\n              />\r\n            </Box>\r\n            <Box sx={{ mb: 3 }}>\r\n              <Autocomplete\r\n                options={filteredRequirements}\r\n                getOptionLabel={(option) => option.name}\r\n                value={newQuotation.requirementId ? filteredRequirements.find(r => r.id === newQuotation.requirementId) || null : null}\r\n                onChange={handleRequirementChange}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label={t('pages.quotations.fields.requirement')}\r\n                    size=\"small\"\r\n                    required\r\n                  />\r\n                )}\r\n                disabled={!newQuotation.dealId}\r\n              />\r\n            </Box>\r\n            <TextField\r\n              label={t('pages.quotations.fields.status')}\r\n              value={t('pages.quotations.status.draft')}\r\n              size=\"small\"\r\n              disabled\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n            <TextField\r\n              label={t('pages.quotations.fields.note')}\r\n              multiline\r\n              rows={4}\r\n              fullWidth\r\n              placeholder={t('pages.quotations.placeholders.note')}\r\n              variant=\"outlined\"\r\n              sx={{ mb: 2, mt: 2 }}\r\n              value={newQuotation.note || ''}\r\n              onChange={(e) => setNewQuotation({...newQuotation, note: e.target.value})}\r\n            />\r\n          </Box>\r\n        )}\r\n\r\n        {activeStep === 1 && (\r\n          <Box>\r\n            <Paper variant=\"outlined\" sx={{ p: 2, mb: 2 }}>\r\n              <Typography variant=\"subtitle2\" gutterBottom>{t('pages.quotations.estimation.chooseMethod')}</Typography>\r\n              <EstimationStep\r\n                mode={estimationMode as EstimationMode}\r\n                onModeChange={(newMode) => {\r\n                  setEstimationMode(newMode);\r\n                  setNewQuotation(prev => ({ ...prev, estimationMode: newMode }));\r\n                }}\r\n                initialData={{\r\n                  rows: estimationItems\r\n                }}\r\n                onEstimationDataChange={(data) => {\r\n                  if (data.mode === 'fixed') {\r\n                    const convertedItems = data.rows.map((row: any) => ({\r\n                      id: row.id,\r\n                      feature: row.feature || '',\r\n                      detail: row.detail || '',\r\n                      description: row.description || '',\r\n                      note: row.notes || '',\r\n                      frontendEffort: 0,\r\n                      backendEffort: 0,\r\n                      qcEffort: 0,\r\n                      pmEffort: 0,\r\n                      totalMD: Object.values(row.efforts || {}).reduce((sum: number, val: any) => sum + (Number(val) || 0), 0),\r\n                      totalMM: 0,\r\n                    }));\r\n                    \r\n                    setEstimationItems(convertedItems);\r\n                    handleItemsChange(convertedItems);\r\n                    \r\n                    setNewQuotation(prev => ({\r\n                      ...prev,\r\n                      estimationMode: 'fixed',\r\n                      estimationConfig: {\r\n                        rows: data.rows,\r\n                        columns: data.columns\r\n                      }\r\n                    }));\r\n                  } else {\r\n                    const convertedItems = data.rates.map((rate: any) => ({\r\n                      id: rate.id,\r\n                      feature: rate.role || '',\r\n                      detail: rate.description || '',\r\n                      description: '',\r\n                      note: '',\r\n                      frontendEffort: 0,\r\n                      backendEffort: 0,\r\n                      qcEffort: 0,\r\n                      pmEffort: 0,\r\n                      totalMD: rate.rate || 0,\r\n                      totalMM: 0,\r\n                    }));\r\n                    \r\n                    setEstimationItems(convertedItems);\r\n                    handleItemsChange(convertedItems);\r\n                    \r\n                    setNewQuotation(prev => ({\r\n                      ...prev,\r\n                      estimationMode: 'timeAndMaterial',\r\n                      estimationConfig: {\r\n                        rates: data.rates\r\n                      }\r\n                    }));\r\n                  }\r\n                }}\r\n              />\r\n            </Paper>\r\n          </Box>\r\n        )}\r\n\r\n        {activeStep === 2 && (\r\n          <Box>\r\n            <Typography variant=\"h6\" gutterBottom>{t('pages.quotations.steps.preview')}</Typography>\r\n            <Paper variant=\"outlined\" sx={{ p: 3 }}>\r\n              \r\n              \r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>{t('pages.quotations.preview.customerInfo')}</Typography>\r\n                <Box sx={{ pl: 2 }}>\r\n                  <Typography><strong>{t('pages.quotations.fields.customer')}:</strong> {newQuotation.customer}</Typography>\r\n                  <Typography><strong>{t('pages.quotations.fields.deal')}:</strong> {newQuotation.dealName}</Typography>\r\n                  <Typography><strong>{t('pages.quotations.fields.requirement')}:</strong> {newQuotation.requirementName}</Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>{t('pages.quotations.preview.quotationDetails')}</Typography>\r\n                <TableContainer component={Paper} variant=\"outlined\">\r\n                  <Table size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>{t('pages.quotations.preview.table.no')}</TableCell>\r\n                        <TableCell>{t('pages.quotations.preview.table.item')}</TableCell>\r\n                        <TableCell>{t('pages.quotations.preview.table.description')}</TableCell>\r\n                        <TableCell>{t('pages.quotations.preview.table.days')}</TableCell>\r\n                        <TableCell>{t('pages.quotations.preview.table.unitPrice')}</TableCell>\r\n                        <TableCell>{t('pages.quotations.preview.table.amount')}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {estimationItems.map((item, index) => (\r\n                        <TableRow key={item.id}>\r\n                          <TableCell>{index + 1}</TableCell>\r\n                          <TableCell>{item.feature}</TableCell>\r\n                          <TableCell>{item.detail}</TableCell>\r\n                          <TableCell>{item.totalMD}</TableCell>\r\n                          <TableCell>500,000 VNĐ/ngày</TableCell>\r\n                          <TableCell>{(item.totalMD * 500000).toLocaleString('vi-VN')} VNĐ</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                      <TableRow>\r\n                        <TableCell colSpan={5} align=\"right\"><strong>{t('pages.quotations.preview.table.total')}</strong></TableCell>\r\n                        <TableCell><strong>{newQuotation.totalAmount?.toLocaleString('vi-VN')} VNĐ</strong></TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Box>\r\n\r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>{t('pages.quotations.preview.notes')}</Typography>\r\n                <Typography variant=\"body2\" sx={{ fontStyle: 'italic' }}>\r\n                  {newQuotation.note || t('pages.quotations.preview.noNotes')}\r\n                </Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Box>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions sx={{ p: 2, pt: 3 }}>\r\n        <Button onClick={onClose}>{t('common.cancel')}</Button>\r\n        {activeStep > 0 && (\r\n          <Button onClick={handleBack}>\r\n            {t('common.back')}\r\n          </Button>\r\n        )}\r\n        {activeStep < 2 ? (\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={handleNext}\r\n            endIcon={<NextIcon />}\r\n            disabled={activeStep === 0 ? !isStepOneValid() : false}\r\n          >\r\n            {activeStep === 1 ? t('pages.quotations.steps.preview') : t('common.next')}\r\n          </Button>\r\n        ) : (\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={handleSave}\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            {t('common.save')}\r\n          </Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default QuotationForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  IconButton,\r\n  Button,\r\n  Typography,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n} from '@mui/icons-material';\r\nimport { EstimationTableProps, QuotationItem } from '../../types';\r\n\r\nconst EstimationTable: React.FC<EstimationTableProps> = ({\r\n  items,\r\n  onItemsChange,\r\n  readOnly = false,\r\n  disableFeatureFields = false,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [tableItems, setTableItems] = useState<QuotationItem[]>(items);\r\n\r\n  useEffect(() => {\r\n    setTableItems(items);\r\n  }, [items]);\r\n\r\n  const handleValueChange = (id: number, field: keyof QuotationItem, value: any) => {\r\n    const updatedItems = tableItems.map(item => {\r\n      if (item.id === id) {\r\n        const updatedItem = { ...item, [field]: value };\r\n        \r\n        // Recalculate totals if effort fields change\r\n        if (['frontendEffort', 'backendEffort', 'qcEffort', 'pmEffort'].includes(field)) {\r\n          const fe = field === 'frontendEffort' ? Number(value) || 0 : updatedItem.frontendEffort;\r\n          const be = field === 'backendEffort' ? Number(value) || 0 : updatedItem.backendEffort;\r\n          const qc = field === 'qcEffort' ? Number(value) || 0 : updatedItem.qcEffort;\r\n          const pm = field === 'pmEffort' ? Number(value) || 0 : updatedItem.pmEffort;\r\n          \r\n          const totalMD = fe + be + qc + pm;\r\n          const totalMM = totalMD / 20; // Assuming 20 working days per month\r\n          \r\n          return {\r\n            ...updatedItem,\r\n            totalMD,\r\n            totalMM,\r\n          };\r\n        }\r\n        \r\n        return updatedItem;\r\n      }\r\n      return item;\r\n    });\r\n    \r\n    setTableItems(updatedItems);\r\n    onItemsChange(updatedItems);\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const newId = tableItems.length > 0 ? Math.max(...tableItems.map(item => item.id)) + 1 : 1;\r\n    const newItem: QuotationItem = {\r\n      id: newId,\r\n      feature: '',\r\n      detail: '',\r\n      description: '',\r\n      note: '',\r\n      frontendEffort: 0,\r\n      backendEffort: 0,\r\n      qcEffort: 0,\r\n      pmEffort: 0,\r\n      totalMD: 0,\r\n      totalMM: 0,\r\n    };\r\n    \r\n    const updatedItems = [...tableItems, newItem];\r\n    setTableItems(updatedItems);\r\n    onItemsChange(updatedItems);\r\n  };\r\n\r\n  const handleDeleteRow = (id: number) => {\r\n    const updatedItems = tableItems.filter(item => item.id !== id);\r\n    setTableItems(updatedItems);\r\n    onItemsChange(updatedItems);\r\n  };\r\n\r\n  // Calculate totals\r\n  const totalFE = tableItems.reduce((sum, item) => sum + item.frontendEffort, 0);\r\n  const totalBE = tableItems.reduce((sum, item) => sum + item.backendEffort, 0);\r\n  const totalQC = tableItems.reduce((sum, item) => sum + item.qcEffort, 0);\r\n  const totalPM = tableItems.reduce((sum, item) => sum + item.pmEffort, 0);\r\n  const totalMD = tableItems.reduce((sum, item) => sum + item.totalMD, 0);\r\n  const totalMM = tableItems.reduce((sum, item) => sum + item.totalMM, 0);\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2, alignItems: 'center' }}>\r\n        <Typography variant=\"h6\">{t('pages.quotations.estimation.table.title')}</Typography>\r\n        {!readOnly && (\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleAddRow}\r\n            size=\"small\"\r\n          >\r\n            {t('pages.quotations.estimation.fixed.addRow')}\r\n          </Button>\r\n        )}\r\n      </Box>\r\n      \r\n      {/* Sử dụng cấu trúc bảng có thể cuộn ngang với các cột cố định chiều rộng */}\r\n      <Box sx={{ width: '100%', overflow: 'hidden' }}>\r\n        <TableContainer \r\n          component={Paper} \r\n          variant=\"outlined\"\r\n          sx={{ \r\n            maxWidth: '100%',\r\n            overflowX: 'auto',\r\n          }}\r\n        >\r\n          <Table size=\"small\" sx={{ tableLayout: 'fixed' }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell width=\"50px\" sx={{ position: 'sticky', left: 0, backgroundColor: '#fff', zIndex: 1 }}>{t('pages.quotations.preview.table.no')}</TableCell>\r\n                <TableCell width=\"150px\" sx={{ position: 'sticky', left: '50px', backgroundColor: '#fff', zIndex: 1 }}>{t('pages.quotations.estimation.table.feature')}</TableCell>\r\n                <TableCell width=\"200px\" sx={{ position: 'sticky', left: '200px', backgroundColor: '#fff', zIndex: 1 }}>{t('pages.quotations.estimation.table.detail')}</TableCell>\r\n                <TableCell width=\"250px\" sx={{ position: 'sticky', left: '400px', backgroundColor: '#fff', zIndex: 1 }}>{t('pages.quotations.estimation.table.description')}</TableCell>\r\n                <TableCell width=\"200px\" sx={{ position: 'sticky', left: '650px', backgroundColor: '#fff', zIndex: 1 }}>{t('pages.quotations.estimation.table.note')}</TableCell>\r\n                <TableCell align=\"right\" width=\"80px\">{t('pages.quotations.estimation.table.columns.feMd')}</TableCell>\r\n                <TableCell align=\"right\" width=\"80px\">{t('pages.quotations.estimation.table.columns.beMd')}</TableCell>\r\n                <TableCell align=\"right\" width=\"80px\">{t('pages.quotations.estimation.table.columns.qcMd')}</TableCell>\r\n                <TableCell align=\"right\" width=\"80px\">{t('pages.quotations.estimation.table.columns.pmMd')}</TableCell>\r\n                <TableCell align=\"right\" width=\"80px\">{t('pages.quotations.estimation.table.columns.totalMd')}</TableCell>\r\n                <TableCell align=\"right\" width=\"80px\">{t('pages.quotations.estimation.table.columns.totalMm')}</TableCell>\r\n                {!readOnly && <TableCell align=\"center\" width=\"80px\">{t('pages.quotations.tables.actions')}</TableCell>}\r\n              </TableRow>\r\n            </TableHead>\r\n          <TableBody>\r\n            {tableItems.map((item, index) => (\r\n              <TableRow key={item.id}>\r\n                <TableCell sx={{ position: 'sticky', left: 0, backgroundColor: '#fff', zIndex: 1 }}>{index + 1}</TableCell>\r\n                <TableCell sx={{ position: 'sticky', left: '50px', backgroundColor: '#fff', zIndex: 1 }}>\r\n                  {readOnly ? (\r\n                    <Tooltip title={item.feature} arrow placement=\"top\">\r\n                      <div style={{ maxWidth: '150px', whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\r\n                        {item.feature}\r\n                      </div>\r\n                    </Tooltip>\r\n                  ) : (\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      value={item.feature}\r\n                      onChange={(e) => handleValueChange(item.id, 'feature', e.target.value)}\r\n                      fullWidth\r\n                      multiline\r\n                      maxRows={3}\r\n                      disabled={disableFeatureFields}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell sx={{ position: 'sticky', left: '200px', backgroundColor: '#fff', zIndex: 1 }}>\r\n                  {readOnly ? (\r\n                    <Tooltip title={item.detail} arrow placement=\"top\">\r\n                      <div style={{ maxWidth: '150px', whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\r\n                        {item.detail}\r\n                      </div>\r\n                    </Tooltip>\r\n                  ) : (\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      value={item.detail}\r\n                      onChange={(e) => handleValueChange(item.id, 'detail', e.target.value)}\r\n                      fullWidth\r\n                      multiline\r\n                      maxRows={3}\r\n                      disabled={disableFeatureFields}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell sx={{ position: 'sticky', left: '400px', backgroundColor: '#fff', zIndex: 1 }}>\r\n                  {readOnly ? (\r\n                    <Tooltip title={item.description} arrow placement=\"top\">\r\n                      <div style={{ maxWidth: '150px', whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\r\n                        {item.description}\r\n                      </div>\r\n                    </Tooltip>\r\n                  ) : (\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      value={item.description}\r\n                      onChange={(e) => handleValueChange(item.id, 'description', e.target.value)}\r\n                      fullWidth\r\n                      multiline\r\n                      maxRows={3}\r\n                      disabled={disableFeatureFields}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell sx={{ position: 'sticky', left: '650px', backgroundColor: '#fff', zIndex: 1 }}>\r\n                  {readOnly ? (\r\n                    <Tooltip title={item.note} arrow placement=\"top\">\r\n                      <div style={{ maxWidth: '150px', whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>\r\n                        {item.note}\r\n                      </div>\r\n                    </Tooltip>\r\n                  ) : (\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      value={item.note}\r\n                      onChange={(e) => handleValueChange(item.id, 'note', e.target.value)}\r\n                      fullWidth\r\n                      multiline\r\n                      maxRows={3}\r\n                      disabled={disableFeatureFields}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {readOnly ? (\r\n                    item.frontendEffort\r\n                  ) : (\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"number\"\r\n                      value={item.frontendEffort}\r\n                      onChange={(e) => handleValueChange(item.id, 'frontendEffort', Number(e.target.value))}\r\n                      inputProps={{ min: 0 }}\r\n                      sx={{ \r\n                        width: '50px',\r\n                        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button': {\r\n                          '-webkit-appearance': 'none',\r\n                          margin: 0,\r\n                        },\r\n                        '& input[type=number]': {\r\n                          '-moz-appearance': 'textfield',\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {readOnly ? (\r\n                    item.backendEffort\r\n                  ) : (\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"number\"\r\n                      value={item.backendEffort}\r\n                      onChange={(e) => handleValueChange(item.id, 'backendEffort', Number(e.target.value))}\r\n                      inputProps={{ min: 0 }}\r\n                      sx={{ \r\n                        width: '50px',\r\n                        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button': {\r\n                          '-webkit-appearance': 'none',\r\n                          margin: 0,\r\n                        },\r\n                        '& input[type=number]': {\r\n                          '-moz-appearance': 'textfield',\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {readOnly ? (\r\n                    item.qcEffort\r\n                  ) : (\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"number\"\r\n                      value={item.qcEffort}\r\n                      onChange={(e) => handleValueChange(item.id, 'qcEffort', Number(e.target.value))}\r\n                      inputProps={{ min: 0 }}\r\n                      sx={{ \r\n                        width: '50px',\r\n                        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button': {\r\n                          '-webkit-appearance': 'none',\r\n                          margin: 0,\r\n                        },\r\n                        '& input[type=number]': {\r\n                          '-moz-appearance': 'textfield',\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {readOnly ? (\r\n                    item.pmEffort\r\n                  ) : (\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"number\"\r\n                      value={item.pmEffort}\r\n                      onChange={(e) => handleValueChange(item.id, 'pmEffort', Number(e.target.value))}\r\n                      inputProps={{ min: 0 }}\r\n                      sx={{ \r\n                        width: '50px',\r\n                        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button': {\r\n                          '-webkit-appearance': 'none',\r\n                          margin: 0,\r\n                        },\r\n                        '& input[type=number]': {\r\n                          '-moz-appearance': 'textfield',\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <strong>{item.totalMD.toFixed(1)}</strong>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <strong>{item.totalMM.toFixed(2)}</strong>\r\n                </TableCell>\r\n                {!readOnly && (\r\n                  <TableCell align=\"center\">\r\n                    <IconButton \r\n                      size=\"small\" \r\n                      color=\"error\" \r\n                      onClick={() => handleDeleteRow(item.id)}\r\n                      disabled={tableItems.length <= 1}\r\n                    >\r\n                      <DeleteIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                )}\r\n              </TableRow>\r\n            ))}\r\n            \r\n            {/* Totals row */}\r\n            <TableRow sx={{ backgroundColor: 'action.hover' }}>\r\n              <TableCell sx={{ position: 'sticky', left: 0, backgroundColor: '#f5f5f5', zIndex: 1 }}></TableCell>\r\n              <TableCell sx={{ position: 'sticky', left: '50px', backgroundColor: '#f5f5f5', zIndex: 1 }}></TableCell>\r\n              <TableCell sx={{ position: 'sticky', left: '200px', backgroundColor: '#f5f5f5', zIndex: 1 }}></TableCell>\r\n              <TableCell sx={{ position: 'sticky', left: '400px', backgroundColor: '#f5f5f5', zIndex: 1 }}></TableCell>\r\n              <TableCell sx={{ position: 'sticky', left: '650px', backgroundColor: '#f5f5f5', zIndex: 1 }} align=\"right\">\r\n                <strong>{t('pages.quotations.estimation.table.total')}</strong>\r\n              </TableCell>\r\n              <TableCell align=\"right\"><strong>{totalFE.toFixed(1)}</strong></TableCell>\r\n              <TableCell align=\"right\"><strong>{totalBE.toFixed(1)}</strong></TableCell>\r\n              <TableCell align=\"right\"><strong>{totalQC.toFixed(1)}</strong></TableCell>\r\n              <TableCell align=\"right\"><strong>{totalPM.toFixed(1)}</strong></TableCell>\r\n              <TableCell align=\"right\"><strong>{totalMD.toFixed(1)}</strong></TableCell>\r\n              <TableCell align=\"right\"><strong>{totalMM.toFixed(2)}</strong></TableCell>\r\n              {!readOnly && <TableCell />}\r\n            </TableRow>\r\n          </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Box>\r\n      \r\n      <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end', gap: 2 }}>\r\n        <Typography variant=\"body2\">\r\n          <strong>{t('pages.quotations.estimation.table.summary.totalMd')}:</strong> {totalMD.toFixed(1)}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          <strong>{t('pages.quotations.estimation.table.summary.totalMm')}:</strong> {totalMM.toFixed(2)}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          <strong>{t('pages.quotations.estimation.table.summary.totalAmount')}:</strong> {new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(totalMD * 500000)}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EstimationTable;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Chip,\r\n  Divider,\r\n} from '@mui/material';\r\nimport {\r\n  PictureAsPdf as PdfIcon,\r\n  Email as EmailIcon,\r\n  Edit as EditIcon,\r\n} from '@mui/icons-material';\r\nimport { QuotationDetailProps, QuotationStatus } from '../../types';\r\nimport { useTranslation } from 'react-i18next';\r\nimport EstimationTable from '../EstimationTable';\r\n\r\nconst QuotationDetail: React.FC<QuotationDetailProps> = ({\r\n  open,\r\n  onClose,\r\n  quotation,\r\n}) => {\r\n  const { t, i18n } = useTranslation();\r\n  if (!quotation) return null;\r\n\r\n  const getStatusChip = (status: QuotationStatus) => {\r\n    const statusMap: Record<QuotationStatus, { label: string; color: 'default' | 'info' | 'success' | 'error' }> = {\r\n      draft: { label: t('pages.quotations.status.draft', { defaultValue: 'Draft' }), color: 'default' },\r\n      sent: { label: t('pages.quotations.status.sent', { defaultValue: 'Sent' }), color: 'info' },\r\n      approved: { label: t('pages.quotations.status.approved', { defaultValue: 'Approved' }), color: 'success' },\r\n      rejected: { label: t('pages.quotations.status.rejected', { defaultValue: 'Rejected' }), color: 'error' },\r\n    };\r\n\r\n    const statusInfo = statusMap[status];\r\n    return (\r\n      <Chip \r\n        label={statusInfo.label} \r\n        color={statusInfo.color}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    const lang = i18n.language || 'en';\r\n    const { locale, currency } =\r\n      lang.startsWith('ja')\r\n        ? { locale: 'ja-JP', currency: 'JPY' }\r\n        : lang.startsWith('vi')\r\n        ? { locale: 'vi-VN', currency: 'VND' }\r\n        : { locale: 'en-US', currency: 'USD' };\r\n    return new Intl.NumberFormat(locale, { style: 'currency', currency }).format(amount);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth=\"lg\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <Typography variant=\"h6\">{t('pages.quotations.detail.title', { defaultValue: 'Quotation details' })}</Typography>\r\n          {getStatusChip(quotation.status)}\r\n        </Box>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Paper variant=\"outlined\" sx={{ p: 3, mb: 3 }}>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.main' }}>\r\n            {t('pages.quotations.detail.basicInfo', { defaultValue: 'Basic information' })}\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3 }}>\r\n            <Box sx={{ minWidth: '200px', flex: 1 }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">{t('pages.quotations.detail.fields.name', { defaultValue: 'Quotation name' })}</Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 'medium' }}>{quotation.name}</Typography>\r\n            </Box>\r\n            <Box sx={{ minWidth: '200px', flex: 1 }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">{t('pages.quotations.detail.fields.customer', { defaultValue: 'Customer' })}</Typography>\r\n              <Typography variant=\"body1\">{quotation.customer}</Typography>\r\n            </Box>\r\n            <Box sx={{ minWidth: '200px', flex: 1 }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">{t('pages.quotations.detail.fields.deal', { defaultValue: 'Deal' })}</Typography>\r\n              <Typography variant=\"body1\">{quotation.dealName}</Typography>\r\n            </Box>\r\n            <Box sx={{ minWidth: '200px', flex: 1 }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">{t('pages.quotations.detail.fields.requirement', { defaultValue: 'Requirement' })}</Typography>\r\n              <Typography variant=\"body1\">{quotation.requirementName}</Typography>\r\n            </Box>\r\n          </Box>\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3, mt: 3 }}>\r\n            <Box sx={{ minWidth: '200px', flex: 1 }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">{t('pages.quotations.detail.fields.createdDate', { defaultValue: 'Created date' })}</Typography>\r\n              <Typography variant=\"body1\">{quotation.createdDate}</Typography>\r\n            </Box>\r\n            <Box sx={{ minWidth: '200px', flex: 1 }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">{t('pages.quotations.detail.fields.totalEffort', { defaultValue: 'Total effort' })}</Typography>\r\n              <Typography variant=\"body1\">{quotation.totalEffort} MD</Typography>\r\n            </Box>\r\n            <Box sx={{ minWidth: '200px', flex: 1 }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">{t('pages.quotations.detail.fields.totalAmount', { defaultValue: 'Total amount' })}</Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 'bold', color: 'primary.main' }}>\r\n                {formatCurrency(quotation.totalAmount)}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Paper>\r\n\r\n        {quotation.note && (\r\n          <Paper variant=\"outlined\" sx={{ p: 3, mb: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.main' }}>\r\n              {t('pages.quotations.detail.note', { defaultValue: 'Note' })}\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n              {quotation.note}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n\r\n        <Divider sx={{ my: 3 }} />\r\n\r\n        <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.main', mb: 2 }}>\r\n          {t('pages.quotations.detail.estimateTitle', { defaultValue: 'Estimation details' })}\r\n        </Typography>\r\n        {quotation.items && quotation.items.length > 0 ? (\r\n          <EstimationTable \r\n            items={quotation.items} \r\n            onItemsChange={() => {}} \r\n            readOnly={true} \r\n          />\r\n        ) : (\r\n          <Paper variant=\"outlined\" sx={{ p: 2 }}>\r\n            <Typography variant=\"body1\" color=\"text.secondary\">\r\n              {t('pages.quotations.detail.noEstimateData', { defaultValue: 'No estimation data.' })}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n\r\n        {quotation.executiveSummary && (\r\n          <>\r\n            <Divider sx={{ my: 3 }} />\r\n            <Paper variant=\"outlined\" sx={{ p: 3, mb: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.main' }}>\r\n                {t('pages.quotations.detail.executiveSummary', { defaultValue: 'Executive summary' })}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                {quotation.executiveSummary}\r\n              </Typography>\r\n            </Paper>\r\n          </>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions sx={{ p: 2 }}>\r\n        <Button onClick={onClose}>{t('common.close', { defaultValue: 'Close' })}</Button>\r\n        <Button \r\n          startIcon={<EditIcon />} \r\n          variant=\"outlined\"\r\n          onClick={() => console.log('Edit quotation')}\r\n        >\r\n          {t('common.edit', { defaultValue: 'Edit' })}\r\n        </Button>\r\n        <Button \r\n          startIcon={<PdfIcon />} \r\n          variant=\"outlined\" \r\n          color=\"secondary\"\r\n          onClick={() => console.log('Download PDF')}\r\n        >\r\n          {t('common.downloadPdf', { defaultValue: 'Download PDF' })}\r\n        </Button>\r\n        <Button \r\n          startIcon={<EmailIcon />} \r\n          variant=\"contained\" \r\n          color=\"primary\"\r\n          onClick={() => console.log('Send email')}\r\n        >\r\n          {t('pages.quotations.detail.actions.sendEmail', { defaultValue: 'Send Email' })}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default QuotationDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { PdfPageEditor } from '../../../../components/PdfPageEditor';\r\nimport { \r\n  Button, \r\n  Dialog, \r\n  DialogActions, \r\n  DialogContent, \r\n  DialogTitle, \r\n  Typography,\r\n  Box \r\n} from '@mui/material';\r\nimport { Save as SaveIcon } from '@mui/icons-material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { QuotationPreviewProps } from '../../types';\r\n\r\nconst QuotationPreview: React.FC<QuotationPreviewProps> = ({\r\n  open,\r\n  onClose,\r\n  quotation,\r\n  onSaveDraft,\r\n  onExportPdf,\r\n}) => {\r\n  const { t, i18n } = useTranslation();\r\n  const [pages, setPages] = useState<string[]>(['']);\r\n\r\n  const locale = i18n.language === 'ja' ? 'ja-JP' : i18n.language === 'vi' ? 'vi-VN' : 'en-US';\r\n\r\n  useEffect(() => {\r\n    if (quotation) {\r\n      const customPages = (quotation as any).pages;\r\n      if (customPages && Array.isArray(customPages) && customPages.length > 0) {\r\n        setPages(customPages);\r\n      } else {\r\n        setPages([\r\n          `\r\n          <div style=\"padding: 20mm;\">\r\n            <h1 style=\"text-align: center; margin-bottom: 30px;\">${t('pages.quotations.preview.page.heading')}</h1>\r\n            <div style=\"display: flex; justify-content: space-between; margin-bottom: 20px;\">\r\n              <div>\r\n                <p><strong>${t('pages.quotations.preview.page.customer')}:</strong> ${quotation.customer || t('pages.quotations.preview.page.customerDefault')}</p>\r\n                <p><strong>${t('pages.quotations.preview.page.project')}:</strong> ${quotation.name || t('pages.quotations.preview.page.projectDefault')}</p>\r\n              </div>\r\n              <div style=\"text-align: right;\">\r\n                <p><strong>${t('pages.quotations.preview.page.quotationId')}:</strong> ${quotation.id || 'N/A'}</p>\r\n                <p><strong>${t('pages.quotations.preview.page.createdDate')}:</strong> ${new Date(quotation.createdDate || new Date()).toLocaleDateString(locale)}</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- Quotation items table -->\r\n            <div style=\"margin: 20px 0;\">\r\n              <h3>${t('pages.quotations.preview.page.itemsTitle')}</h3>\r\n              <table style=\"width: 100%; border-collapse: collapse; margin: 15px 0;\">\r\n                <thead>\r\n                  <tr style=\"background-color: #f5f5f5;\">\r\n                    <th style=\"border: 1px solid #ddd; padding: 8px; text-align: left;\">${t('pages.quotations.preview.page.columns.stt')}</th>\r\n                    <th style=\"border: 1px solid #ddd; padding: 8px; text-align: left;\">${t('pages.quotations.preview.page.columns.description')}</th>\r\n                    <th style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\">${t('pages.quotations.preview.page.columns.days')}</th>\r\n                    <th style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\">${t('pages.quotations.preview.page.columns.unitPriceVnd')}</th>\r\n                    <th style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\">${t('pages.quotations.preview.page.columns.amountVnd')}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  ${(quotation.items || []).map((item, index) => {\r\n                    const qcEffort = (item as any).qcEffort || 0;\r\n                    const rate = (item as any).rate || 0;\r\n                    const total = qcEffort * rate;\r\n                    const nf = new Intl.NumberFormat(locale);\r\n                    \r\n                    return `\r\n                      <tr>\r\n                        <td style=\"border: 1px solid #ddd; padding: 8px;\">${index + 1}</td>\r\n                        <td style=\"border: 1px solid #ddd; padding: 8px;\">${item.description || ''}</td>\r\n                        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\">${qcEffort}</td>\r\n                        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\">${nf.format(rate)}</td>\r\n                        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\">${nf.format(total)}</td>\r\n                      </tr>\r\n                    `;\r\n                  }).join('')}\r\n                  <tr>\r\n                    <td colspan=\"4\" style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\"><strong>${t('pages.quotations.preview.page.total')}</strong></td>\r\n                    <td style=\"border: 1px solid #ddd; padding: 8px; text-align: right; font-weight: bold;\">\r\n                      ${new Intl.NumberFormat(locale).format((quotation.items || []).reduce((sum, item) => {\r\n                        const qcEffort = (item as any).qcEffort || 0;\r\n                        const rate = (item as any).rate || 0;\r\n                        return sum + (qcEffort * rate);\r\n                      }, 0))} VND\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n            <div style=\"margin-top: 30px;\">\r\n              <div style=\"margin-bottom: 20px;\">\r\n                <h3>${t('pages.quotations.preview.page.paymentTerms')}</h3>\r\n                <div>${(quotation as any).paymentTerms || t('pages.quotations.preview.page.paymentTermsDefault')}</div>\r\n              </div>\r\n              <div style=\"margin-top: 60px; display: flex; justify-content: space-between;\">\r\n                <div style=\"text-align: center; width: 50%;\">\r\n                  <p><strong>${t('pages.quotations.preview.page.sellerRep')}</strong></p>\r\n                  <p style=\"font-style: italic; margin-top: 50px;\">${t('pages.quotations.preview.page.signNote')}</p>\r\n                </div>\r\n                <div style=\"text-align: center; width: 50%;\">\r\n                  <p><strong>${t('pages.quotations.preview.page.buyerRep')}</strong></p>\r\n                  <p style=\"font-style: italic; margin-top: 50px;\">${t('pages.quotations.preview.page.signNote')}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          `\r\n        ]);\r\n      }\r\n    }\r\n  }, [quotation]);\r\n\r\n  const handleSave = (updatedPages: string[]) => {\r\n    setPages(updatedPages);\r\n  };\r\n\r\n  const handleSaveDraft = () => {\r\n    if (onSaveDraft && quotation) {\r\n      // Create an updated quotation with the pages\r\n      const updatedQuotation = {\r\n        ...quotation,\r\n        // Add pages to the quotation data\r\n        ...(pages.length > 0 && { pages })\r\n      };\r\n      onSaveDraft(updatedQuotation);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth=\"xl\"\r\n      fullWidth\r\n      sx={{ '& .MuiDialog-paper': { maxWidth: '95%', height: '95vh' } }}\r\n    >\r\n      <DialogTitle>\r\n        <Typography variant=\"h6\">{t('pages.quotations.preview.dialogTitle')}</Typography>\r\n      </DialogTitle>\r\n      <DialogContent sx={{ p: 0, display: 'flex', flexDirection: 'column', height: '100%' }}>\r\n        {quotation ? (\r\n          <PdfPageEditor \r\n            initialContent={pages}\r\n            onSave={handleSave}\r\n            onExportPdf={() => onExportPdf && onExportPdf(quotation)}\r\n          />\r\n        ) : (\r\n          <Box sx={{ p: 3, textAlign: 'center' }}>\r\n            <Typography>{t('pages.quotations.preview.loading')}</Typography>\r\n          </Box>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"inherit\">\r\n          {t('pages.quotations.preview.buttons.close')}\r\n        </Button>\r\n        <Button \r\n          onClick={handleSaveDraft} \r\n          variant=\"contained\" \r\n          color=\"primary\"\r\n          startIcon={<SaveIcon />}\r\n          disabled={!quotation}\r\n        >\r\n          {t('pages.quotations.preview.buttons.saveDraft')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default QuotationPreview;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  Paper,\r\n  IconButton,\r\n  Chip,\r\n} from '@mui/material';\r\nimport {\r\n  Visibility as ViewIcon,\r\n  Email as EmailIcon,\r\n  PictureAsPdf as PdfIcon,\r\n} from '@mui/icons-material';\r\nimport { QuotationListProps, Quotation, QuotationStatus } from '../../types';\r\n\r\nconst QuotationList: React.FC<QuotationListProps> = ({\r\n  quotations,\r\n  page,\r\n  rowsPerPage,\r\n  totalCount,\r\n  onPageChange,\r\n  onRowsPerPageChange,\r\n  onViewDetail,\r\n  onDownloadPdf,\r\n  onSendEmail,\r\n}) => {\r\n  const { t, i18n } = useTranslation();\r\n  // Helper functions\r\n  const getStatusChip = (status: QuotationStatus) => {\r\n    const statusMap: Record<QuotationStatus, { label: string; color: 'default' | 'info' | 'success' | 'error' }> = {\r\n      draft: { label: t('pages.quotations.status.draft'), color: 'default' },\r\n      sent: { label: t('pages.quotations.status.sent'), color: 'info' },\r\n      approved: { label: t('pages.quotations.status.approved'), color: 'success' },\r\n      rejected: { label: t('pages.quotations.status.rejected'), color: 'error' },\r\n    };\r\n\r\n    const statusInfo = statusMap[status];\r\n    return (\r\n      <Chip \r\n        label={statusInfo.label} \r\n        color={statusInfo.color}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    const lang = i18n.language || 'en';\r\n    const { locale, currency } =\r\n      lang.startsWith('ja')\r\n        ? { locale: 'ja-JP', currency: 'JPY' }\r\n        : lang.startsWith('vi')\r\n        ? { locale: 'vi-VN', currency: 'VND' }\r\n        : { locale: 'en-US', currency: 'USD' };\r\n    return new Intl.NumberFormat(locale, { style: 'currency', currency }).format(amount);\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    const lang = i18n.language || 'en';\r\n    const locale = lang.startsWith('ja') ? 'ja-JP' : lang.startsWith('vi') ? 'vi-VN' : 'en-US';\r\n    const date = new Date(dateString);\r\n    if (Number.isNaN(date.getTime())) return dateString;\r\n    return new Intl.DateTimeFormat(locale, {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n    }).format(date);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{t('pages.quotations.columns.name')}</TableCell>\r\n              <TableCell>{t('pages.quotations.columns.customer')}</TableCell>\r\n              <TableCell>{t('pages.quotations.columns.deal')}</TableCell>\r\n              <TableCell>{t('pages.quotations.columns.status')}</TableCell>\r\n              <TableCell>{t('pages.quotations.columns.createdAt')}</TableCell>\r\n              <TableCell align=\"right\">{t('pages.quotations.columns.effort')}</TableCell>\r\n              <TableCell align=\"right\">{t('pages.quotations.columns.amount')}</TableCell>\r\n              <TableCell align=\"center\">{t('pages.quotations.columns.actions')}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {quotations.map((quotation: Quotation) => (\r\n              <TableRow key={quotation.id}>\r\n                <TableCell>{quotation.name}</TableCell>\r\n                <TableCell>{quotation.customer}</TableCell>\r\n                <TableCell>{quotation.dealName}</TableCell>\r\n                <TableCell>{getStatusChip(quotation.status)}</TableCell>\r\n                <TableCell>{formatDate(quotation.createdDate)}</TableCell>\r\n                <TableCell align=\"right\">{quotation.totalEffort}</TableCell>\r\n                <TableCell align=\"right\">{formatCurrency(quotation.totalAmount)}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <IconButton \r\n                    size=\"small\" \r\n                    color=\"primary\" \r\n                    onClick={() => onViewDetail(quotation.id)}\r\n                    title={t('common.view')}\r\n                  >\r\n                    <ViewIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton \r\n                    size=\"small\" \r\n                    color=\"secondary\" \r\n                    onClick={() => onDownloadPdf(quotation.id)}\r\n                    title={t('common.download')}\r\n                  >\r\n                    <PdfIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton \r\n                    size=\"small\" \r\n                    color=\"info\" \r\n                    onClick={() => onSendEmail(quotation.id)}\r\n                    title={t('common.sendEmail')}\r\n                  >\r\n                    <EmailIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            {quotations.length === 0 && (\r\n              <TableRow>\r\n                <TableCell colSpan={8} align=\"center\">\r\n                  {t('common.noData')}\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={totalCount}\r\n          page={page}\r\n          onPageChange={(_, newPage) => onPageChange(_, newPage)}\r\n          rowsPerPage={rowsPerPage}\r\n          onRowsPerPageChange={(e: React.ChangeEvent<HTMLInputElement>) => onRowsPerPageChange(e)}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          labelRowsPerPage={t('pages.quotations.pagination.rowsPerPage')}\r\n        />\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuotationList;\r\n","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport { Close as CloseIcon, Visibility as PreviewIcon, Send as SendIcon } from '@mui/icons-material';\r\n\r\ninterface EmailQuotationDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onSend: (emailData: {\r\n    to: string;\r\n    cc: string;\r\n    subject: string;\r\n    content: string;\r\n  }) => void;\r\n  customerName: string;\r\n  serviceName: string;\r\n  responsiblePerson: string;\r\n  pdfFileName: string;\r\n}\r\n\r\nconst EmailQuotationDialog: React.FC<EmailQuotationDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  onSend,\r\n  customerName,\r\n  serviceName,\r\n  responsiblePerson,\r\n  pdfFileName,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [emailData, setEmailData] = useState({\r\n    to: '',\r\n    cc: '',\r\n    subject: t('pages.quotations.emailDialog.defaultSubject', { serviceName }),\r\n    content: t('pages.quotations.emailDialog.defaultContent', {\r\n      customerName: customerName || t('pages.quotations.emailDialog.dearCustomer'),\r\n      serviceName: serviceName || t('pages.quotations.emailDialog.theService'),\r\n      responsiblePerson: responsiblePerson || t('pages.quotations.emailDialog.teamSignature'),\r\n      interpolation: { escapeValue: false },\r\n    }),\r\n  });\r\n\r\n  const handleChange = (field: string) => (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    setEmailData(prev => ({\r\n      ...prev,\r\n      [field]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSend = () => {\r\n    onSend(emailData);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\r\n      <DialogTitle>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Typography variant=\"h6\">{t('pages.quotations.emailDialog.title')}</Typography>\r\n          <IconButton onClick={onClose} size=\"small\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Box mb={3}>\r\n          <TextField\r\n            fullWidth\r\n            label={t('pages.quotations.emailDialog.to')}\r\n            value={emailData.to}\r\n            onChange={handleChange('to')}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n          \r\n          <TextField\r\n            fullWidth\r\n            label={t('pages.quotations.emailDialog.ccOptional')}\r\n            value={emailData.cc}\r\n            onChange={handleChange('cc')}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n          \r\n          <TextField\r\n            fullWidth\r\n            label={t('pages.quotations.emailDialog.subject')}\r\n            value={emailData.subject}\r\n            onChange={handleChange('subject')}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n          \r\n          <Box mt={2} mb={2} display=\"flex\" alignItems=\"center\">\r\n            <Typography variant=\"body1\" sx={{ mr: 2 }}>\r\n              {t('pages.quotations.emailDialog.attachment')}: {pdfFileName}\r\n            </Typography>\r\n            <IconButton size=\"small\" onClick={() => window.open(`/preview/${pdfFileName}`, '_blank')}>\r\n              <PreviewIcon />\r\n            </IconButton>\r\n          </Box>\r\n          \r\n          <TextField\r\n            fullWidth\r\n            label={t('pages.quotations.emailDialog.content')}\r\n            value={emailData.content}\r\n            onChange={handleChange('content')}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={8}\r\n          />\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions sx={{ p: 2 }}>\r\n        <Button onClick={onClose}>{t('common.cancel')}</Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<SendIcon />}\r\n          onClick={handleSend}\r\n          disabled={!emailData.to}\r\n        >\r\n          {t('common.sendEmail')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EmailQuotationDialog;\r\n","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Visibility as VisibilityIcon,\r\n  Delete as DeleteIcon,\r\n  FileDownload as FileDownloadIcon,\r\n} from '@mui/icons-material';\r\nimport { QuoteTemplate } from '../../types/quoteTemplate';\r\n\r\ninterface QuotationTemplatesProps {\r\n  templates: QuoteTemplate[];\r\n  loading: boolean;\r\n  onUploadClick: () => void;\r\n  onViewTemplate?: (templateId: string) => void;\r\n  onDeleteTemplate?: (templateId: string) => void;\r\n  onDownloadTemplate?: (templateId: string) => void;\r\n}\r\n\r\nconst QuotationTemplates: React.FC<QuotationTemplatesProps> = ({\r\n  templates,\r\n  loading,\r\n  onUploadClick,\r\n  onViewTemplate,\r\n  onDeleteTemplate,\r\n  onDownloadTemplate,\r\n}) => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const formatDate = (dateString: string) => {\r\n    const lang = i18n.language || 'en';\r\n    const locale = lang.startsWith('ja') ? 'ja-JP' : lang.startsWith('vi') ? 'vi-VN' : 'en-US';\r\n    const date = new Date(dateString);\r\n    if (Number.isNaN(date.getTime())) return dateString;\r\n    return new Intl.DateTimeFormat(locale, {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n    }).format(date);\r\n  };\r\n  return (\r\n    <Paper sx={{ p: 3 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n        <Typography variant=\"h6\">{t('pages.quotations.templates.title')}</Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={onUploadClick}\r\n        >\r\n          {t('pages.quotations.templates.buttons.uploadTemplate')}\r\n        </Button>\r\n      </Box>\r\n\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{t('pages.quotations.templates.table.columns.name')}</TableCell>\r\n              <TableCell>{t('pages.quotations.templates.table.columns.description')}</TableCell>\r\n              <TableCell>{t('pages.quotations.templates.table.columns.type')}</TableCell>\r\n              <TableCell>{t('pages.quotations.templates.table.columns.status')}</TableCell>\r\n              <TableCell>{t('pages.quotations.templates.table.columns.createdAt')}</TableCell>\r\n              <TableCell>{t('pages.quotations.templates.table.columns.createdBy')}</TableCell>\r\n              <TableCell>{t('pages.quotations.templates.table.columns.fields')}</TableCell>\r\n              <TableCell align=\"center\">{t('pages.quotations.tables.actions')}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {loading ? (\r\n              <TableRow>\r\n                <TableCell colSpan={8} align=\"center\">\r\n                  {t('pages.quotations.templates.loading')}\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : templates.length === 0 ? (\r\n              <TableRow>\r\n                <TableCell colSpan={8} align=\"center\">\r\n                  {t('pages.quotations.templates.table.empty')}\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : (\r\n              templates.map((template) => (\r\n                <TableRow key={template.id}>\r\n                  <TableCell>{template.name}</TableCell>\r\n                  <TableCell>{template.description || '-'}</TableCell>\r\n                  <TableCell>\r\n                    {template.type === 'customer'\r\n                      ? t('pages.quotations.templates.table.chips.type.customer')\r\n                      : t('pages.quotations.templates.table.chips.type.internal')}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      label={template.status === 'active'\r\n                        ? t('pages.quotations.templates.table.chips.status.active')\r\n                        : t('pages.quotations.templates.table.chips.status.inactive')}\r\n                      color={template.status === 'active' ? 'success' : 'default'}\r\n                      size=\"small\"\r\n                    />\r\n                    {template.isDefault && (\r\n                      <Chip\r\n                        label={t('pages.quotations.templates.table.chips.default')}\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        sx={{ ml: 1 }}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {formatDate(template.createdAt)}\r\n                  </TableCell>\r\n                  <TableCell>{template.createdBy}</TableCell>\r\n                  <TableCell>{template.placeholderCount}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Box>\r\n                      {onViewTemplate && (\r\n                        <Tooltip title={t('pages.quotations.templates.table.tooltips.view')}>\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            onClick={() => onViewTemplate(template.id)}\r\n                          >\r\n                            <VisibilityIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      )}\r\n                      {onDownloadTemplate && (\r\n                        <Tooltip title={t('pages.quotations.templates.table.tooltips.download')}>\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            onClick={() => onDownloadTemplate(template.id)}\r\n                          >\r\n                            <FileDownloadIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      )}\r\n                      {onDeleteTemplate && (\r\n                        <Tooltip title={t('pages.quotations.templates.table.tooltips.delete')}>\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            color=\"error\"\r\n                            onClick={() => onDeleteTemplate(template.id)}\r\n                          >\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      )}\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default QuotationTemplates;\r\n","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  Box,\r\n  IconButton,\r\n  CircularProgress,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\nimport { Close as CloseIcon, CloudUpload as UploadIcon, Delete as DeleteIcon } from '@mui/icons-material';\r\nimport { UploadQuoteTemplateFormValues, ExtractedField } from '../../types/quoteTemplate';\r\n\r\ninterface UploadQuoteTemplateProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (values: UploadQuoteTemplateFormValues) => Promise<void>;\r\n}\r\n\r\nconst UploadQuoteTemplate: React.FC<UploadQuoteTemplateProps> = ({\r\n  open,\r\n  onClose,\r\n  onSubmit,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [values, setValues] = useState<UploadQuoteTemplateFormValues>({\r\n    name: '',\r\n    description: '',\r\n    type: 'customer',\r\n    file: null,\r\n    extractedFields: [],\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [analyzing, setAnalyzing] = useState(false);\r\n  const [extractedFields, setExtractedFields] = useState<ExtractedField[]>([]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | { target: { name?: string; value: unknown } }) => {\r\n    const { name, value } = e.target;\r\n    if (name) {\r\n      setValues((prev) => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0] || null;\r\n    \r\n    if (file) {\r\n      // Validate file type\r\n      if (!file.name.endsWith('.docx') && !file.name.endsWith('.doc') && !file.name.endsWith('.pdf')) {\r\n        alert(t('pages.quotations.templateUpload.validations.invalidFormat'));\r\n        return;\r\n      }\r\n      \r\n      // Validate file size (max 5MB)\r\n      if (file.size > 5 * 1024 * 1024) {\r\n        alert(t('pages.quotations.templateUpload.validations.oversize'));\r\n        return;\r\n      }\r\n      \r\n      setValues((prev) => ({ ...prev, file }));\r\n      setAnalyzing(true);\r\n      \r\n      // Mock AI analysis\r\n      setTimeout(() => {\r\n        // Mock extracted fields from file\r\n        const mockExtractedFields: ExtractedField[] = [\r\n          {\r\n            originalText: 'CÔNG TY TNHH GIẤY CAO PHÁT',\r\n            placeholder: 'TEN_CONG_TY_A',\r\n            type: 'text',\r\n            description: 'Tên công ty bên A',\r\n            required: true,\r\n            example: 'Công ty TNHH ABC'\r\n          },\r\n          {\r\n            originalText: 'Số 352, Khu Phố Mỹ Hiệp, Phường Thái Hoà, Thành phố Tân Uyên, Tỉnh Bình Dương',\r\n            placeholder: 'DIA_CHI_A',\r\n            type: 'text',\r\n            description: 'Địa chỉ bên A',\r\n            required: true,\r\n            example: 'Số 123, Đường ABC, Quận 1, TP.HCM'\r\n          },\r\n          {\r\n            originalText: '0274 3775 179',\r\n            placeholder: 'DIEN_THOAI_A',\r\n            type: 'phone',\r\n            description: 'Số điện thoại bên A',\r\n            required: true,\r\n            example: '0901234567'\r\n          },\r\n          {\r\n            originalText: '3701711279',\r\n            placeholder: 'MA_SO_THUE_A',\r\n            type: 'taxcode',\r\n            description: 'Mã số thuế bên A',\r\n            required: true,\r\n            example: '0123456789'\r\n          },\r\n          {\r\n            originalText: 'LÊ THỊ KIM CHI',\r\n            placeholder: 'NGUOI_DAI_DIEN_A',\r\n            type: 'text',\r\n            description: 'Người đại diện bên A',\r\n            required: true,\r\n            example: 'Nguyễn Văn A'\r\n          },\r\n          {\r\n            originalText: 'Giám đốc',\r\n            placeholder: 'CHUC_VU_A',\r\n            type: 'text',\r\n            description: 'Chức vụ người đại diện bên A',\r\n            required: true,\r\n            example: 'Giám đốc'\r\n          },\r\n          {\r\n            originalText: '10.000.000 VNĐ',\r\n            placeholder: 'GIA_TRI_HOP_DONG',\r\n            type: 'number',\r\n            description: 'Giá trị hợp đồng',\r\n            required: true,\r\n            example: '50.000.000 VNĐ'\r\n          },\r\n          {\r\n            originalText: '01/08/2025',\r\n            placeholder: 'NGAY_BAT_DAU',\r\n            type: 'date',\r\n            description: 'Ngày bắt đầu hợp đồng',\r\n            required: true,\r\n            example: '01/01/2025'\r\n          }\r\n        ];\r\n        \r\n        setExtractedFields(mockExtractedFields);\r\n        setValues(prev => ({ ...prev, extractedFields: mockExtractedFields }));\r\n        setAnalyzing(false);\r\n      }, 2000);\r\n    }\r\n  };\r\n  \r\n  const handleUpdatePlaceholder = (index: number, field: keyof ExtractedField, value: string) => {\r\n    const updatedFields = [...extractedFields];\r\n    updatedFields[index] = { ...updatedFields[index], [field]: value };\r\n    setExtractedFields(updatedFields);\r\n    setValues(prev => ({ ...prev, extractedFields: updatedFields }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!values.name.trim()) {\r\n      alert(t('pages.quotations.templateUpload.validations.missingName'));\r\n      return;\r\n    }\r\n    \r\n    if (!values.file) {\r\n      alert(t('pages.quotations.templateUpload.validations.missingFile'));\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      await onSubmit(values);\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error('Error submitting template:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setValues({\r\n      name: '',\r\n      description: '',\r\n      type: 'customer',\r\n      file: null,\r\n      extractedFields: [],\r\n    });\r\n    setExtractedFields([]);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" fullWidth>\r\n      <DialogTitle>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Typography variant=\"h6\">{t('pages.quotations.templateUpload.title')}</Typography>\r\n          <IconButton onClick={handleClose} size=\"small\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogContent dividers>\r\n          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 2fr' }, gap: 3 }}>\r\n            <Box>\r\n              <TextField\r\n                label={t('pages.quotations.templateUpload.fields.name')}\r\n                name=\"name\"\r\n                value={values.name}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                required\r\n                disabled={loading}\r\n              />\r\n              \r\n              <TextField\r\n                label={t('pages.quotations.templateUpload.fields.description')}\r\n                name=\"description\"\r\n                value={values.description}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                multiline\r\n                rows={3}\r\n                margin=\"normal\"\r\n                disabled={loading}\r\n              />\r\n              \r\n              <FormControl fullWidth margin=\"normal\">\r\n                <InputLabel>{t('pages.quotations.templateUpload.fields.type')}</InputLabel>\r\n                <Select\r\n                  label={t('pages.quotations.templateUpload.fields.type')}\r\n                  name=\"type\"\r\n                  value={values.type}\r\n                  onChange={handleChange}\r\n                  disabled={loading}\r\n                >\r\n                  <MenuItem value=\"customer\">{t('pages.quotations.templateUpload.options.type.customer')}</MenuItem>\r\n                  <MenuItem value=\"internal\">{t('pages.quotations.templateUpload.options.type.internal')}</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              \r\n              <Box mt={2} mb={2}>\r\n                <input\r\n                  accept={t('pages.quotations.templateUpload.file.accept') as string}\r\n                  style={{ display: 'none' }}\r\n                  id=\"template-upload\"\r\n                  type=\"file\"\r\n                  onChange={handleFileChange}\r\n                  disabled={loading || analyzing}\r\n                />\r\n                <label htmlFor=\"template-upload\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<UploadIcon />}\r\n                    disabled={loading || analyzing}\r\n                  >\r\n                    {t('pages.quotations.templateUpload.file.choose')}\r\n                  </Button>\r\n                </label>\r\n                {values.file && (\r\n                  <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                    {t('pages.quotations.templateUpload.file.selected')} {values.file.name}\r\n                  </Typography>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n            \r\n            <Box>\r\n              <Paper variant=\"outlined\" sx={{ p: 2, height: '100%' }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  {t('pages.quotations.templateUpload.extracted.title')}\r\n                </Typography>\r\n                \r\n                {analyzing ? (\r\n                  <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" py={4}>\r\n                    <CircularProgress size={40} />\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mt: 2 }}>\r\n                      {t('pages.quotations.templateUpload.analyzing')}\r\n                    </Typography>\r\n                  </Box>\r\n                ) : extractedFields.length > 0 ? (\r\n                  <TableContainer component={Paper} variant=\"outlined\">\r\n                    <Table size=\"small\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>{t('pages.quotations.templateUpload.extracted.columns.original')}</TableCell>\r\n                          <TableCell>{t('pages.quotations.templateUpload.extracted.columns.placeholder')}</TableCell>\r\n                          <TableCell>{t('pages.quotations.templateUpload.extracted.columns.type')}</TableCell>\r\n                          <TableCell>{t('pages.quotations.templateUpload.extracted.columns.description')}</TableCell>\r\n                          <TableCell align=\"center\">{t('pages.quotations.templateUpload.extracted.columns.actions')}</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {extractedFields.map((field, index) => (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{field.originalText}</TableCell>\r\n                            <TableCell>\r\n                              <TextField\r\n                                size=\"small\"\r\n                                value={field.placeholder}\r\n                                onChange={(e) => handleUpdatePlaceholder(index, 'placeholder', e.target.value)}\r\n                                fullWidth\r\n                                disabled={loading}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <FormControl fullWidth size=\"small\">\r\n                                <Select\r\n                                  value={field.type}\r\n                                  onChange={(e) => handleUpdatePlaceholder(index, 'type', e.target.value)}\r\n                                  disabled={loading}\r\n                                >\r\n                                  <MenuItem value=\"text\">{t('pages.quotations.templateUpload.fieldTypes.text')}</MenuItem>\r\n                                  <MenuItem value=\"number\">{t('pages.quotations.templateUpload.fieldTypes.number')}</MenuItem>\r\n                                  <MenuItem value=\"date\">{t('pages.quotations.templateUpload.fieldTypes.date')}</MenuItem>\r\n                                  <MenuItem value=\"phone\">{t('pages.quotations.templateUpload.fieldTypes.phone')}</MenuItem>\r\n                                  <MenuItem value=\"email\">{t('pages.quotations.templateUpload.fieldTypes.email')}</MenuItem>\r\n                                  <MenuItem value=\"taxcode\">{t('pages.quotations.templateUpload.fieldTypes.taxcode')}</MenuItem>\r\n                                </Select>\r\n                              </FormControl>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <TextField\r\n                                size=\"small\"\r\n                                value={field.description || ''}\r\n                                onChange={(e) => handleUpdatePlaceholder(index, 'description', e.target.value)}\r\n                                fullWidth\r\n                                disabled={loading}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                              <IconButton size=\"small\" color=\"error\" onClick={() => {\r\n                                const updatedFields = [...extractedFields];\r\n                                updatedFields.splice(index, 1);\r\n                                setExtractedFields(updatedFields);\r\n                                setValues(prev => ({ ...prev, extractedFields: updatedFields }));\r\n                              }} disabled={loading}>\r\n                                <DeleteIcon fontSize=\"small\" />\r\n                              </IconButton>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                ) : values.file ? (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {t('pages.quotations.templateUpload.extracted.empty')}\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {t('pages.quotations.templateUpload.extracted.needFile')}\r\n                  </Typography>\r\n                )}\r\n                \r\n                <Box mt={3}>\r\n                  <Typography variant=\"subtitle2\" gutterBottom>\r\n                    {t('pages.quotations.templateUpload.guide.title')}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    - {t('pages.quotations.templateUpload.guide.line1')}\r\n                    <br />\r\n                    - {t('pages.quotations.templateUpload.guide.line2')}\r\n                    <br />\r\n                    - {t('pages.quotations.templateUpload.guide.line3')}\r\n                  </Typography>\r\n                </Box>\r\n              </Paper>\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        \r\n        <DialogActions sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\r\n          <Button onClick={handleClose} disabled={loading}>\r\n            {t('common.cancel')}\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={loading || analyzing || extractedFields.length === 0}\r\n            startIcon={loading ? <CircularProgress size={20} /> : null}\r\n          >\r\n            {loading ? t('pages.quotations.templateUpload.actions.uploading') : t('pages.quotations.templateUpload.actions.saveTemplate')}\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadQuoteTemplate;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Stack,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Autocomplete,\r\n  SelectChangeEvent,\r\n  Tabs,\r\n  Tab,\r\n} from '@mui/material';\r\nimport {\r\n  Search as SearchIcon,\r\n  Add as AddIcon,\r\n  FileDownload as ExportIcon,\r\n} from '@mui/icons-material';\r\n\r\n// Types\r\nimport { Quotation, QuotationStatus } from './types';\r\nimport { QuoteTemplate, QuoteTemplateTab } from './types/quoteTemplate';\r\n\r\n// Components\r\nimport QuotationForm from './components/QuotationForm';\r\nimport QuotationDetail from './components/QuotationDetail';\r\nimport QuotationPreview from './components/QuotationPreview';\r\nimport QuotationList from './components/QuotationList';\r\nimport EmailQuotationDialog from './components/EmailQuotationDialog';\r\nimport QuotationTemplates from './components/QuotationTemplates';\r\nimport UploadQuoteTemplate from './components/UploadQuoteTemplate';\r\nimport { UploadQuoteTemplateFormValues } from './types/quoteTemplate';\r\n\r\n// Fake data\r\nconst fakeCustomers = ['Công ty A', 'Công ty B', 'Công ty C', 'Công ty D'];\r\nconst fakeDeals = [\r\n  { id: 1, name: 'Deal A1', customer: 'Công ty A' },\r\n  { id: 2, name: 'Deal A2', customer: 'Công ty A' },\r\n  { id: 3, name: 'Deal B1', customer: 'Công ty B' },\r\n  { id: 4, name: 'Deal C1', customer: 'Công ty C' },\r\n];\r\n\r\nconst fakeRequirements = [\r\n  { \r\n    id: 1, \r\n    name: 'Yêu cầu A1.1', \r\n    dealId: 1, \r\n    description: 'Xây dựng website bán hàng cho Công ty A',\r\n    features: [\r\n      { \r\n        feature: 'Trang chủ', \r\n        detail: 'Thiết kế trang chủ hiện đại', \r\n        description: 'Trang chủ với slider banner, danh mục sản phẩm nổi bật, sản phẩm mới', \r\n        notes: 'Tích hợp animation cho banner'\r\n      },\r\n      { \r\n        feature: 'Trang sản phẩm', \r\n        detail: 'Danh sách sản phẩm có bộ lọc', \r\n        description: 'Hiển thị sản phẩm dạng lưới, có bộ lọc theo danh mục, giá, thương hiệu', \r\n        notes: 'Có chức năng so sánh sản phẩm'\r\n      },\r\n      { \r\n        feature: 'Giỏ hàng', \r\n        detail: 'Chức năng giỏ hàng đầy đủ', \r\n        description: 'Thêm, sửa, xóa sản phẩm trong giỏ hàng, tính tổng tiền', \r\n        notes: 'Lưu giỏ hàng vào localStorage'\r\n      },\r\n      { \r\n        feature: 'Thanh toán', \r\n        detail: 'Quy trình thanh toán', \r\n        description: 'Form nhập thông tin giao hàng, chọn phương thức thanh toán', \r\n        notes: 'Tích hợp thanh toán qua VNPay'\r\n      }\r\n    ] \r\n  },\r\n  { \r\n    id: 2, \r\n    name: 'Yêu cầu A1.2', \r\n    dealId: 1, \r\n    description: 'Xây dựng hệ thống quản lý kho cho Công ty A',\r\n    features: [\r\n      { \r\n        feature: 'Quản lý sản phẩm', \r\n        detail: 'CRUD sản phẩm', \r\n        description: 'Thêm, sửa, xóa, xem chi tiết sản phẩm trong kho', \r\n        notes: 'Hỗ trợ import/export Excel'\r\n      },\r\n      { \r\n        feature: 'Quản lý nhập kho', \r\n        detail: 'Quy trình nhập kho', \r\n        description: 'Tạo phiếu nhập kho, xác nhận nhập kho, cập nhật số lượng tồn', \r\n        notes: 'Tích hợp với mã vạch'\r\n      },\r\n      { \r\n        feature: 'Quản lý xuất kho', \r\n        detail: 'Quy trình xuất kho', \r\n        description: 'Tạo phiếu xuất kho, xác nhận xuất kho, cập nhật số lượng tồn', \r\n        notes: 'Tự động xuất kho khi có đơn hàng'\r\n      },\r\n      { \r\n        feature: 'Báo cáo thống kê', \r\n        detail: 'Báo cáo tồn kho, nhập xuất', \r\n        description: 'Báo cáo tồn kho theo thời gian, báo cáo nhập xuất theo sản phẩm', \r\n        notes: 'Xuất báo cáo dạng PDF, Excel'\r\n      }\r\n    ] \r\n  },\r\n  { \r\n    id: 3, \r\n    name: 'Yêu cầu A2.1', \r\n    dealId: 2, \r\n    description: 'Xây dựng app mobile cho Công ty A',\r\n    features: [\r\n      { \r\n        feature: 'Đăng nhập/Đăng ký', \r\n        detail: 'Hệ thống xác thực', \r\n        description: 'Đăng nhập bằng email/password, đăng ký tài khoản mới, quên mật khẩu', \r\n        notes: 'Hỗ trợ đăng nhập bằng Google, Facebook'\r\n      },\r\n      { \r\n        feature: 'Trang cá nhân', \r\n        detail: 'Thông tin người dùng', \r\n        description: 'Xem, cập nhật thông tin cá nhân, đổi mật khẩu', \r\n        notes: 'Upload avatar'\r\n      },\r\n      { \r\n        feature: 'Thông báo', \r\n        detail: 'Hệ thống thông báo', \r\n        description: 'Nhận thông báo realtime, xem lịch sử thông báo', \r\n        notes: 'Sử dụng Firebase Cloud Messaging'\r\n      }\r\n    ] \r\n  },\r\n  { \r\n    id: 4, \r\n    name: 'Yêu cầu B1.1', \r\n    dealId: 3, \r\n    description: 'Xây dựng hệ thống Quản lý Kho cho Công ty B',\r\n    features: [\r\n      { \r\n        feature: 'Quản lý Kho', \r\n        detail: 'Nhập kho', \r\n        description: 'Cho phép người dùng nhập hàng mới vào kho', \r\n        notes: 'Từ AI (mẫu)'\r\n      },\r\n      { \r\n        feature: 'Quản lý Kho', \r\n        detail: 'Xuất kho', \r\n        description: 'Ghi nhận xuất kho khi giao hàng hoặc bán', \r\n        notes: 'Từ AI (mẫu)'\r\n      },\r\n      { \r\n        feature: 'Giám sát Kho', \r\n        detail: 'Cảnh báo tồn kho thấp', \r\n        description: 'Thông báo khi số lượng hàng tồn dưới mức tối thiểu', \r\n        notes: 'Từ AI (mẫu)'\r\n      }\r\n    ] \r\n  },\r\n];\r\n\r\nconst generateFakeQuotations = (count: number): Quotation[] => {\r\n  return Array.from({ length: count }, (_, i) => ({\r\n    id: i + 1,\r\n    name: `Báo giá ${i + 1} - ${['Website bán hàng', 'Hệ thống kho', 'App di động', 'Phần mềm kế toán'][i % 4]}`,\r\n    customer: fakeCustomers[Math.floor(Math.random() * fakeCustomers.length)],\r\n    dealId: i % 4 + 1,\r\n    dealName: fakeDeals[i % 4].name,\r\n    requirementId: i % 4 + 1,\r\n    requirementName: fakeRequirements[i % 4].name,\r\n    status: ['draft', 'sent', 'approved', 'rejected'][Math.floor(Math.random() * 4)] as QuotationStatus,\r\n    createdDate: new Date(Date.now() - Math.floor(Math.random() * 90) * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n    note: '',\r\n    items: [],\r\n    totalEffort: Math.floor(Math.random() * 100) + 20,\r\n    totalAmount: (Math.floor(Math.random() * 100) + 20) * 500000,\r\n  }));\r\n};\r\n\r\nconst statusOptions = [\r\n  { value: 'draft', label: 'Draft', color: 'default' },\r\n  { value: 'sent', label: 'Đã gửi', color: 'info' },\r\n  { value: 'approved', label: 'Đã duyệt', color: 'success' },\r\n  { value: 'rejected', label: 'Từ chối', color: 'error' },\r\n];\r\n\r\nconst QuotationManagement = () => {\r\n  const { t } = useTranslation();\r\n  // Tab state\r\n  const [currentTab, setCurrentTab] = useState<QuoteTemplateTab>('quotes');\r\n  \r\n  // State\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [customerFilter, setCustomerFilter] = useState<string | null>(null);\r\n  const [statusFilter, setStatusFilter] = useState<string>('all');\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  // Template states\r\n  const [templates, setTemplates] = useState<QuoteTemplate[]>([]);\r\n  const [uploadDialogOpen, setUploadDialogOpen] = useState(false);\r\n  const [selectedTemplate, setSelectedTemplate] = useState<QuoteTemplate | null>(null);\r\n  \r\n  // Quotations state\r\n  const [quotations, setQuotations] = useState<Quotation[]>(generateFakeQuotations(25));\r\n  \r\n  // Create dialog state\r\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\r\n  \r\n  // Detail dialog state\r\n  const [detailDialogOpen, setDetailDialogOpen] = useState(false);\r\n  const [selectedQuotation, setSelectedQuotation] = useState<Quotation | null>(null);\r\n  \r\n  // Preview dialog state\r\n  const [previewDialogOpen, setPreviewDialogOpen] = useState(false);\r\n  \r\n  // Email dialog state\r\n  const [emailDialogOpen, setEmailDialogOpen] = useState(false);\r\n  const [emailQuotation, setEmailQuotation] = useState<Quotation | null>(null);\r\n  \r\n  // Load fake data on init\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    // Load quotations\r\n    setQuotations(generateFakeQuotations(25));\r\n    \r\n    // Load templates\r\n    const mockTemplates: QuoteTemplate[] = [\r\n      {\r\n        id: '1',\r\n        name: 'Mẫu báo giá dự án phần mềm',\r\n        description: 'Template báo giá dự án phần mềm tiêu chuẩn',\r\n        type: 'customer',\r\n        status: 'active',\r\n        createdAt: '2025-06-30T10:00:00Z',\r\n        updatedAt: '2025-06-30T10:00:00Z',\r\n        createdBy: 'Nguyễn Văn A',\r\n        placeholderCount: 8,\r\n        isDefault: true,\r\n        extractedFields: []\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'Mẫu báo giá dịch vụ IT',\r\n        description: 'Template báo giá dịch vụ IT outsourcing',\r\n        type: 'internal',\r\n        status: 'active',\r\n        createdAt: '2025-06-29T15:30:00Z',\r\n        updatedAt: '2025-06-29T15:30:00Z',\r\n        createdBy: 'Trần Thị B',\r\n        placeholderCount: 5,\r\n        isDefault: false,\r\n        extractedFields: []\r\n      }\r\n    ];\r\n    \r\n    setTemplates(mockTemplates);\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Handlers\r\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(event.target.value);\r\n    setPage(0);\r\n  };\r\n  \r\n  // Handle tab change\r\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: QuoteTemplateTab) => {\r\n    setCurrentTab(newValue);\r\n    setPage(0);\r\n  };\r\n\r\n  // Template handlers\r\n  const handleOpenUploadDialog = () => {\r\n    setUploadDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseUploadDialog = () => {\r\n    setUploadDialogOpen(false);\r\n  };\r\n  \r\n  const handleUploadTemplate = async (values: UploadQuoteTemplateFormValues): Promise<void> => {\r\n    try {\r\n      setLoading(true);\r\n      // TODO: Replace with actual API call\r\n      console.log('Uploading template:', values);\r\n      \r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Add new template to the list\r\n      const newTemplate: QuoteTemplate = {\r\n        id: `template-${Date.now()}`,\r\n        name: values.name,\r\n        description: values.description,\r\n        type: values.type,\r\n        status: 'active',\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n        createdBy: 'Người dùng hiện tại',\r\n        placeholderCount: Math.floor(Math.random() * 10) + 3, // Random number of placeholders\r\n        isDefault: false,\r\n        extractedFields: []\r\n      };\r\n      \r\n      setTemplates(prev => [newTemplate, ...prev]);\r\n      setUploadDialogOpen(false);\r\n      \r\n    } catch (error) {\r\n      console.error('Error uploading template:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleViewTemplate = (templateId: string) => {\r\n    const template = templates.find(t => t.id === templateId);\r\n    if (template) {\r\n      setSelectedTemplate(template);\r\n      // Here you would implement the template viewing functionality\r\n      console.log('Viewing template:', template);\r\n    }\r\n  };\r\n  \r\n  const handleDownloadTemplate = (templateId: string) => {\r\n    const template = templates.find(t => t.id === templateId);\r\n    if (template) {\r\n      // Here you would implement the template download functionality\r\n      console.log('Downloading template:', template);\r\n    }\r\n  };\r\n  \r\n  const handleDeleteTemplate = (templateId: string) => {\r\n    // Here you would implement the template deletion functionality\r\n    setTemplates(prev => prev.filter(t => t.id !== templateId));\r\n    console.log('Deleted template with ID:', templateId);\r\n  };\r\n  \r\n  const handleCustomerFilterChange = (_: any, newValue: string | null) => {\r\n    setCustomerFilter(newValue);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleStatusFilterChange = (event: SelectChangeEvent<string>) => {\r\n    setStatusFilter(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handlePageChange = (_: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleRowsPerPageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleViewQuotationDetail = (id: number) => {\r\n    const quotation = quotations.find(q => q.id === id);\r\n    if (quotation) {\r\n      setSelectedQuotation(quotation);\r\n      setDetailDialogOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleDownloadPdf = (id: number) => {\r\n    const quotation = quotations.find(q => q.id === id);\r\n    if (quotation) {\r\n      setSelectedQuotation(quotation);\r\n      setPreviewDialogOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleSendEmail = (id: number) => {\r\n    const quotation = quotations.find(q => q.id === id);\r\n    if (quotation) {\r\n      setEmailQuotation(quotation);\r\n      setEmailDialogOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleEmailSend = (emailData: {\r\n    to: string;\r\n    cc: string;\r\n    subject: string;\r\n    content: string;\r\n  }) => {\r\n    // In a real app, this would call an API to send the email\r\n    console.log('Sending email:', emailData);\r\n    \r\n    // Update quotation status to 'sent' if it was 'draft'\r\n    if (emailQuotation?.status === 'draft') {\r\n      const updatedQuotations = quotations.map(q => \r\n        q.id === emailQuotation.id \r\n          ? { ...q, status: 'sent' as const } \r\n          : q\r\n      );\r\n      setQuotations(updatedQuotations);\r\n    }\r\n    \r\n    // Show success message\r\n    alert(t('pages.quotations.notifications.emailSent'));\r\n    setEmailDialogOpen(false);\r\n  };\r\n\r\n  const handleCreateQuotation = () => {\r\n    setCreateDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseCreateDialog = () => {\r\n    setCreateDialogOpen(false);\r\n  };\r\n\r\n  const handleSaveQuotation = (quotation: Quotation) => {\r\n    const newQuotation = {\r\n      ...quotation,\r\n      id: Math.max(...quotations.map(q => q.id), 0) + 1,\r\n    };\r\n    \r\n    setQuotations([newQuotation, ...quotations]);\r\n    setCreateDialogOpen(false);\r\n  };\r\n\r\n  // Filter quotations\r\n  const filteredQuotations = quotations.filter(q => {\r\n    const matchesSearch = q.name.toLowerCase().includes(searchTerm.toLowerCase()) || \r\n                          q.customer.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesCustomer = !customerFilter || q.customer === customerFilter;\r\n    const matchesStatus = statusFilter === 'all' || q.status === statusFilter;\r\n    return matchesSearch && matchesCustomer && matchesStatus;\r\n  });\r\n\r\n  const paginatedQuotations = filteredQuotations.slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n\r\n  // Các hàm tiện ích đã được chuyển vào component QuotationList\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      {emailQuotation && (\r\n        <EmailQuotationDialog\r\n          open={emailDialogOpen}\r\n          onClose={() => setEmailDialogOpen(false)}\r\n          onSend={handleEmailSend}\r\n          customerName={emailQuotation.customer}\r\n          serviceName={emailQuotation.name}\r\n          responsiblePerson={t('pages.customers.columns.owner')}\r\n          pdfFileName={`BaoGia_${emailQuotation.id}.pdf`}\r\n        />\r\n      )}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3, flexWrap: 'wrap', gap: 2 }}>\r\n        <Typography variant=\"h4\" component=\"h1\">\r\n          {t('pages.quotations.title')}\r\n        </Typography>\r\n        {currentTab === 'quotes' && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleCreateQuotation}\r\n          >\r\n            {t('pages.quotations.actions.createQuotation')}\r\n          </Button>\r\n        )}\r\n      </Box>\r\n      \r\n      {/* Tabs */}\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\r\n        <Tabs \r\n          value={currentTab} \r\n          onChange={handleTabChange}\r\n          aria-label=\"quotation management tabs\"\r\n        >\r\n          <Tab label={t('pages.quotations.tabs.templates')} value=\"templates\" />\r\n          <Tab label={t('pages.quotations.tabs.quotes')} value=\"quotes\" />\r\n        </Tabs>\r\n      </Box>\r\n      \r\n      {currentTab === 'templates' ? (\r\n        <>\r\n          <QuotationTemplates \r\n            templates={templates}\r\n            loading={loading}\r\n            onUploadClick={handleOpenUploadDialog}\r\n            onViewTemplate={handleViewTemplate}\r\n            onDeleteTemplate={handleDeleteTemplate}\r\n            onDownloadTemplate={handleDownloadTemplate}\r\n          />\r\n          \r\n          <UploadQuoteTemplate \r\n            open={uploadDialogOpen}\r\n            onClose={handleCloseUploadDialog}\r\n            onSubmit={handleUploadTemplate}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {/* Search and Filter */}\r\n          <Paper sx={{ p: 2, mb: 3 }}>\r\n            <Stack direction={{ xs: 'column', md: 'row' }} spacing={2} alignItems=\"center\">\r\n              <TextField\r\n                label={t('pages.quotations.searchPlaceholder')}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                value={searchTerm}\r\n                onChange={handleSearch}\r\n                sx={{ minWidth: 200, flex: 1 }}\r\n                InputProps={{\r\n                  startAdornment: <SearchIcon fontSize=\"small\" sx={{ mr: 1, color: 'text.secondary' }} />,\r\n                }}\r\n              />\r\n              \r\n              <Autocomplete\r\n                options={fakeCustomers}\r\n                value={customerFilter}\r\n                onChange={handleCustomerFilterChange}\r\n                renderInput={(params) => <TextField {...params} label={t('pages.quotations.fields.customer')} size=\"small\" />}\r\n                sx={{ minWidth: 200 }}\r\n              />\r\n              \r\n              <FormControl size=\"small\" sx={{ minWidth: 150 }}>\r\n                <InputLabel id=\"status-filter-label\">{t('pages.quotations.filters.status')}</InputLabel>\r\n                <Select\r\n                  labelId=\"status-filter-label\"\r\n                  value={statusFilter}\r\n                  label={t('pages.quotations.filters.status')}\r\n                  onChange={handleStatusFilterChange}\r\n                >\r\n                  <MenuItem value=\"all\">{t('pages.quotations.filters.all')}</MenuItem>\r\n                  {statusOptions.map(option => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {t(`pages.quotations.status.${option.value}`)}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              \r\n              <Button \r\n                variant=\"outlined\" \r\n                startIcon={<ExportIcon />}\r\n                onClick={() => console.log('Export data')}\r\n              >\r\n                {t('pages.quotations.actions.exportExcel')}\r\n              </Button>\r\n            </Stack>\r\n          </Paper>\r\n\r\n          {/* Quotation List */}\r\n          <QuotationList\r\n            quotations={paginatedQuotations}\r\n            onViewDetail={handleViewQuotationDetail}\r\n            onDownloadPdf={handleDownloadPdf}\r\n            onSendEmail={handleSendEmail}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            onPageChange={handlePageChange}\r\n            onRowsPerPageChange={handleRowsPerPageChange}\r\n            totalCount={filteredQuotations.length}\r\n          />\r\n        </>\r\n      )}\r\n      \r\n      {/* Create quotation dialog */}\r\n      <QuotationForm\r\n        open={createDialogOpen}\r\n        onClose={handleCloseCreateDialog}\r\n        onSave={handleSaveQuotation}\r\n        customers={fakeCustomers}\r\n        deals={fakeDeals}\r\n        requirements={fakeRequirements}\r\n        templates={templates}\r\n      />\r\n\r\n      {/* Dialog xem chi tiết báo giá */}\r\n      <QuotationDetail\r\n        open={detailDialogOpen}\r\n        onClose={() => setDetailDialogOpen(false)}\r\n        quotation={selectedQuotation}\r\n      />\r\n\r\n      {/* Preview and export PDF dialog */}\r\n      <QuotationPreview\r\n        open={previewDialogOpen}\r\n        onClose={() => setPreviewDialogOpen(false)}\r\n        quotation={selectedQuotation}\r\n        onSaveDraft={(quotation) => {\r\n          // Cập nhật báo giá với nội dung mới\r\n          const updatedQuotations = quotations.map(q => \r\n            q.id === quotation.id ? quotation : q\r\n          );\r\n          setQuotations(updatedQuotations);\r\n          setPreviewDialogOpen(false);\r\n          alert(t('pages.quotations.notifications.saveDraftSuccess'));\r\n        }}\r\n        onExportPdf={(quotation) => {\r\n          console.log('Export PDF', quotation);\r\n          alert(t('pages.quotations.notifications.exportPdfSuccess'));\r\n        }}\r\n        onEdit={() => {\r\n          setPreviewDialogOpen(false);\r\n          // Mở lại form chỉnh sửa nếu cần\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default QuotationManagement;\r\n"],"names":["createSvgIcon","_jsx","d","getTableFooterUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableFooterRoot","styled","name","display","tablelvl2","variant","defaultComponent","React","inProps","ref","props","useDefaultProps","className","component","other","_objectWithoutProperties","ownerState","_objectSpread","classes","composeClasses","root","useUtilityClasses","Tablelvl2Context","Provider","value","children","as","clsx","role","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","useThemePropsDefault","useThemePropsSystem","joinChildren","separator","childrenArray","toArray","filter","Boolean","reduce","output","child","index","push","length","key","concat","style","_ref","theme","styles","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","useFlexGap","gap","getValue","margin","row","column","deepmerge","mergeBreakpointsInOrder","Stack","options","arguments","undefined","createStyledComponent","useThemeProps","componentName","StackRoot","themeProps","extendSxProp","divider","createStack","createStyled","FIXED_COLUMNS","isFixed","isEffort","rows","effortColumns","onRowsChange","onColumnsChange","t","useTranslation","page","setPage","useState","rowsPerPage","setRowsPerPage","newColumnName","setNewColumnName","editingColumn","setEditingColumn","editColumnName","setEditColumnName","handleCellChange","rowId","field","updatedRows","map","id","startsWith","efforts","Number","fixedColumnsWithIds","col","toLowerCase","replace","order","nonDuplicateEffortColumns","effortCol","some","fixedCol","subtotalColumn","allColumns","sort","a","b","_jsxs","Box","sx","justifyContent","mb","Button","color","startIcon","AddIcon","onClick","handleAddRow","newRow","Date","now","feature","detail","description","notes","itReq","uxUi","size","mr","alignItems","TextField","placeholder","onChange","e","target","minWidth","handleAddColumn","trim","newColumn","disabled","TableContainer","Paper","maxHeight","overflow","Table","stickyHeader","TableHead","TableRow","TableCell","width","DragHandleIcon","cursor","opacity","IconButton","columnId","updatedColumns","saveColumnName","SaveIcon","fontSize","CancelIcon","Typography","ml","startEditingColumn","currentName","p","EditIcon","columnToDelete","find","_ref2","_ref3","_","restEfforts","_toPropertyKey","handleDeleteColumn","DeleteIcon","TableBody","slice","rowIndex","hover","_row$efforts2","isEffortColumn","console","log","isSubtotalColumn","type","fullWidth","inputProps","min","step","fontWeight","sum","_row$efforts3","multiline","maxRows","Tooltip","title","handleDeleteRow","TableFooter","colSpan","align","columnKey","_row$efforts","rowSum","_row$efforts4","backgroundColor","_row$efforts5","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","labelRowsPerPage","labelDisplayedRows","_ref4","from","to","DEFAULT_ROLES","rates","onRatesChange","newRole","setNewRole","customRole","setCustomRole","handleRateChange","updatedRates","rate","calculateTotalHours","hours","unit","FormControl","InputLabel","Select","label","MenuItem","roleToAdd","alert","newRate","Intl","NumberFormat","currency","format","DEFAULT_EFFORT_COLUMNS","DEFAULT_TM_RATES","mode","onModeChange","onEstimationDataChange","initialData","fixedPriceRows","setFixedPriceRows","setEffortColumns","tmRates","setTmRates","snackbar","setSnackbar","open","message","severity","useEffect","mappedRows","item","Math","random","toString","substr","note","createNewRow","handleFixedPriceDataChange","columns","handleCloseSnackbar","mt","gutterBottom","elevation","border","borderRadius","FormLabel","RadioGroup","newMode","FormControlLabel","control","Radio","Divider","my","FixedPriceTable","TimeAndMaterialTable","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","_newQuotation$totalAm","onSave","customers","deals","requirements","templates","activeStep","setActiveStep","touched","setTouched","estimationMode","setEstimationMode","newQuotation","setNewQuotation","customer","dealId","dealName","requirementId","requirementName","status","createdDate","toISOString","split","items","totalEffort","totalAmount","templateId","templateName","filteredDeals","setFilteredDeals","filteredRequirements","setFilteredRequirements","estimationItems","setEstimationItems","deal","req","selectedRequirement","features","frontendEffort","backendEffort","qcEffort","pmEffort","totalMD","totalMM","handleItemsChange","updatedItems","steps","Dialog","maxWidth","DialogTitle","DialogContent","Stepper","pt","pb","Step","StepLabel","bgcolor","TemplateIcon","required","error","labelId","selectedTemplate","prev","onBlur","template","FormHelperText","flexWrap","Autocomplete","handleCustomerChange","newValue","renderInput","params","flex","getOptionLabel","option","handleDealChange","r","handleRequirementChange","EstimationStep","data","convertedItems","val","estimationConfig","pl","toLocaleString","fontStyle","DialogActions","handleBack","prevStep","handleNext","endIcon","NextIcon","handleSave","onItemsChange","readOnly","disableFeatureFields","tableItems","setTableItems","handleValueChange","updatedItem","includes","totalFE","totalBE","totalQC","totalPM","newItem","max","overflowX","tableLayout","position","left","zIndex","arrow","placement","whiteSpace","wordBreak","toFixed","quotation","i18n","defaultValue","statusInfo","draft","sent","approved","rejected","Chip","getStatusChip","amount","lang","language","locale","formatCurrency","EstimationTable","executiveSummary","_Fragment","PdfIcon","EmailIcon","onSaveDraft","onExportPdf","pages","setPages","customPages","Array","isArray","toLocaleDateString","total","nf","join","paymentTerms","height","PdfPageEditor","initialContent","updatedPages","textAlign","handleSaveDraft","updatedQuotation","quotations","totalCount","onViewDetail","onDownloadPdf","onSendEmail","formatDate","dateString","date","isNaN","getTime","DateTimeFormat","year","month","day","ViewIcon","onSend","customerName","serviceName","responsiblePerson","pdfFileName","emailData","setEmailData","cc","subject","content","interpolation","escapeValue","handleChange","CloseIcon","dividers","window","PreviewIcon","SendIcon","handleSend","loading","onUploadClick","onViewTemplate","onDeleteTemplate","onDownloadTemplate","isDefault","createdAt","createdBy","placeholderCount","VisibilityIcon","FileDownloadIcon","onSubmit","setValues","file","extractedFields","setLoading","analyzing","setAnalyzing","setExtractedFields","handleUpdatePlaceholder","updatedFields","handleClose","async","preventDefault","gridTemplateColumns","xs","md","accept","_e$target$files","files","endsWith","setTimeout","mockExtractedFields","originalText","example","htmlFor","UploadIcon","py","CircularProgress","splice","borderTop","borderColor","fakeCustomers","fakeDeals","fakeRequirements","generateFakeQuotations","i","floor","statusOptions","QuotationManagement","currentTab","setCurrentTab","searchTerm","setSearchTerm","customerFilter","setCustomerFilter","statusFilter","setStatusFilter","setTemplates","uploadDialogOpen","setUploadDialogOpen","setSelectedTemplate","setQuotations","createDialogOpen","setCreateDialogOpen","detailDialogOpen","setDetailDialogOpen","selectedQuotation","setSelectedQuotation","previewDialogOpen","setPreviewDialogOpen","emailDialogOpen","setEmailDialogOpen","emailQuotation","setEmailQuotation","updatedAt","filteredQuotations","q","matchesSearch","matchesCustomer","matchesStatus","paginatedQuotations","EmailQuotationDialog","updatedQuotations","handleCreateQuotation","borderBottom","Tabs","handleTabChange","_event","Tab","QuotationTemplates","handleOpenUploadDialog","UploadQuoteTemplate","handleCloseUploadDialog","Promise","resolve","newTemplate","InputProps","startAdornment","SearchIcon","handleCustomerFilterChange","ExportIcon","QuotationList","handlePageChange","QuotationForm","handleCloseCreateDialog","QuotationDetail","QuotationPreview","onEdit"],"sourceRoot":""}