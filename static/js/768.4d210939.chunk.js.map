{"version":3,"file":"static/js/768.4d210939.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/esm/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/esm/internal/switchBaseClasses.js","../node_modules/@mui/material/esm/internal/SwitchBase.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useFormControl } from \"../FormControl/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from \"./formControlLabelClasses.js\";\nimport formControlState from \"../FormControl/formControlState.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  },\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  },\n  variants: [{\n    props: {\n      labelPlacement: 'start'\n    },\n    style: {\n      flexDirection: 'row-reverse',\n      marginRight: -11\n    }\n  }, {\n    props: {\n      labelPlacement: 'top'\n    },\n    style: {\n      flexDirection: 'column-reverse'\n    }\n  }, {\n    props: {\n      labelPlacement: 'bottom'\n    },\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      labelPlacement\n    }) => labelPlacement === 'start' || labelPlacement === 'top' || labelPlacement === 'bottom',\n    style: {\n      marginLeft: 16 // used for row presentation of radio/checkbox\n    }\n  }]\n})));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk'\n})(memoTheme(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n})));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n    checked,\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    inputRef,\n    label: labelProp,\n    labelPlacement = 'end',\n    name,\n    onChange,\n    required: requiredProp,\n    slots = {},\n    slotProps = {},\n    value,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const disabled = disabledProp ?? control.props.disabled ?? muiFormControl?.disabled;\n  const required = requiredProp ?? control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = {\n    ...props,\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [TypographySlot, typographySlotProps] = useSlot('typography', {\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState\n  });\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(TypographySlot, {\n      component: \"span\",\n      ...typographySlotProps,\n      className: clsx(classes.label, typographySlotProps?.className),\n      children: label\n    });\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(\"div\", {\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    typography: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { getSwitchBaseUtilityClass } from \"./switchBaseClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase, {\n  name: 'MuiSwitchBase'\n})({\n  padding: 9,\n  borderRadius: '50%',\n  variants: [{\n    props: {\n      edge: 'start',\n      size: 'small'\n    },\n    style: {\n      marginLeft: -3\n    }\n  }, {\n    props: ({\n      edge,\n      ownerState\n    }) => edge === 'start' && ownerState.size !== 'small',\n    style: {\n      marginLeft: -12\n    }\n  }, {\n    props: {\n      edge: 'end',\n      size: 'small'\n    },\n    style: {\n      marginRight: -3\n    }\n  }, {\n    props: ({\n      edge,\n      ownerState\n    }) => edge === 'end' && ownerState.size !== 'small',\n    style: {\n      marginRight: -12\n    }\n  }]\n});\nconst SwitchBaseInput = styled('input', {\n  name: 'MuiSwitchBase',\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required = false,\n    tabIndex,\n    type,\n    value,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = {\n    ...props,\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      input: inputProps,\n      ...slotProps\n    }\n  };\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    elementType: SwitchBaseRoot,\n    className: classes.root,\n    shouldForwardComponentProp: true,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      component: 'span',\n      ...other\n    },\n    getSlotProps: handlers => ({\n      ...handlers,\n      onFocus: event => {\n        handlers.onFocus?.(event);\n        handleFocus(event);\n      },\n      onBlur: event => {\n        handlers.onBlur?.(event);\n        handleBlur(event);\n      }\n    }),\n    ownerState,\n    additionalProps: {\n      centerRipple: true,\n      focusRipple: !disableFocusRipple,\n      disabled,\n      role: undefined,\n      tabIndex: null\n    }\n  });\n  const [InputSlot, inputSlotProps] = useSlot('input', {\n    ref: inputRef,\n    elementType: SwitchBaseInput,\n    className: classes.input,\n    externalForwardedProps,\n    getSlotProps: handlers => ({\n      ...handlers,\n      onChange: event => {\n        handlers.onChange?.(event);\n        handleInputChange(event);\n      }\n    }),\n    ownerState,\n    additionalProps: {\n      autoFocus,\n      checked: checkedProp,\n      defaultChecked,\n      disabled,\n      id: hasLabelFor ? id : undefined,\n      name,\n      readOnly,\n      required,\n      tabIndex,\n      type,\n      ...(type === 'checkbox' && value === undefined ? {} : {\n        value\n      })\n    }\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [/*#__PURE__*/_jsx(InputSlot, {\n      ...inputSlotProps\n    }), checked ? checkedIcon : icon]\n  });\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/input#attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["getFormControlLabelUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormControlLabelRoot","styled","name","overridesResolver","props","styles","ownerState","concat","formControlLabelClasses","label","root","capitalize","labelPlacement","memoTheme","_ref","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","disabled","color","vars","palette","text","variants","style","flexDirection","_ref2","AsteriskComponent","_ref3","error","main","React","inProps","ref","_ref4","useDefaultProps","checked","className","componentsProps","control","disabledProp","disableTypography","inputRef","labelProp","onChange","required","requiredProp","slots","slotProps","value","other","_objectWithoutProperties","muiFormControl","useFormControl","controlProps","forEach","key","fcs","formControlState","states","_objectSpread","classes","asterisk","composeClasses","useUtilityClasses","externalForwardedProps","TypographySlot","typographySlotProps","useSlot","elementType","Typography","type","_jsx","component","clsx","children","_jsxs","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","padding","borderRadius","edge","size","SwitchBaseInput","shouldForwardProp","rootShouldForwardProp","position","opacity","width","height","top","left","margin","zIndex","autoFocus","checkedProp","checkedIcon","defaultChecked","disableFocusRipple","icon","id","inputProps","onBlur","onFocus","readOnly","tabIndex","setCheckedState","useControlled","controlled","default","Boolean","state","hasLabelFor","input","RootSlot","rootSlotProps","shouldForwardComponentProp","getSlotProps","handlers","event","_handlers$onFocus","call","handleFocus","_handlers$onBlur","handleBlur","additionalProps","centerRipple","focusRipple","role","undefined","InputSlot","inputSlotProps","_handlers$onChange","nativeEvent","defaultPrevented","newChecked","target","handleInputChange"],"sourceRoot":""}