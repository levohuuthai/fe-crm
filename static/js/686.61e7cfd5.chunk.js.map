{"version":3,"file":"static/js/686.61e7cfd5.chunk.js","mappings":"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","sources":["pages/RequirementManagement/components/dialogs/DeleteConfirmDialog.tsx","pages/RequirementManagement/components/RequirementList/index.tsx","pages/RequirementManagement/components/RequirementForm/index.tsx","pages/RequirementManagement/components/RequirementDetail/index.tsx","pages/RequirementManagement/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n} from '@mui/material';\r\nimport { DeleteConfirmDialogProps } from '../../types';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst DeleteConfirmDialog: React.FC<DeleteConfirmDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  onConfirm,\r\n  title,\r\n  content,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const localTitle =\r\n    title ?? t('pages.requirements.dialogs.deleteConfirmTitle', { defaultValue: 'Delete confirmation' });\r\n  const localContent =\r\n    content ?? t('pages.requirements.dialogs.deleteConfirmText', { defaultValue: 'Are you sure you want to delete this requirement?' });\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        {localTitle}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {localContent}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          {t('common.cancel', { defaultValue: 'Cancel' })}\r\n        </Button>\r\n        <Button onClick={onConfirm} color=\"error\" autoFocus>\r\n          {t('common.delete', { defaultValue: 'Delete' })}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DeleteConfirmDialog;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  Chip,\r\n  TablePagination,\r\n  Typography\r\n} from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Requirement, Status } from '../../types';\r\n\r\ninterface RequirementListProps {\r\n  requirements: Requirement[];\r\n  page: number;\r\n  rowsPerPage: number;\r\n  totalCount: number;\r\n  onPageChange: (event: unknown, newPage: number) => void;\r\n  onRowsPerPageChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onEdit: (id: number) => void;\r\n  onDelete: (id: number) => void;\r\n  onViewDetail: (id: number) => void;\r\n}\r\n\r\nconst getStatusColor = (status: Status) => {\r\n  switch (status) {\r\n    case 'pending':\r\n      return 'warning';\r\n    case 'in_discussion':\r\n      return 'info';\r\n    case 'confirmed':\r\n      return 'success';\r\n    default:\r\n      return 'default';\r\n  }\r\n};\r\n\r\nconst getStatusLabel = (t: (key: string) => string, status: Status) => {\r\n  switch (status) {\r\n    case 'pending':\r\n      return t('pages.requirements.status.pending');\r\n    case 'in_discussion':\r\n      return t('pages.requirements.status.in_discussion');\r\n    case 'confirmed':\r\n      return t('pages.requirements.status.confirmed');\r\n    default:\r\n      return t('common.unknown');\r\n  }\r\n};\r\n\r\nconst RequirementList: React.FC<RequirementListProps> = ({\r\n  requirements,\r\n  page,\r\n  rowsPerPage,\r\n  totalCount,\r\n  onPageChange,\r\n  onRowsPerPageChange,\r\n  onEdit,\r\n  onDelete,\r\n  onViewDetail\r\n}) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <TableContainer sx={{ maxHeight: 440 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{t('pages.requirements.list.columns.id')}</TableCell>\r\n              <TableCell>{t('pages.requirements.list.columns.name')}</TableCell>\r\n              <TableCell>{t('pages.requirements.list.columns.type')}</TableCell>\r\n              <TableCell>{t('pages.requirements.list.columns.customer')}</TableCell>\r\n              <TableCell>{t('pages.requirements.list.columns.assignee')}</TableCell>\r\n              <TableCell>{t('pages.requirements.list.columns.source')}</TableCell>\r\n              <TableCell>{t('pages.requirements.list.columns.createdDate')}</TableCell>\r\n              <TableCell>{t('pages.requirements.list.columns.deadline')}</TableCell>\r\n              <TableCell>{t('pages.requirements.list.columns.status')}</TableCell>\r\n              <TableCell>{t('pages.requirements.list.columns.actions')}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {requirements.length > 0 ? (\r\n              requirements.map((req) => (\r\n                <TableRow \r\n                  hover \r\n                  key={req.id} \r\n                  onClick={() => onViewDetail(req.id)}\r\n                  sx={{ cursor: 'pointer' }}\r\n                >\r\n                  <TableCell>{req.id}</TableCell>\r\n                  <TableCell>{req.name}</TableCell>\r\n                  <TableCell>{req.type || 'N/A'}</TableCell>\r\n                  <TableCell>{req.customer}</TableCell>\r\n                  <TableCell>{req.assignee}</TableCell>\r\n                  <TableCell>{req.source || 'N/A'}</TableCell>\r\n                  <TableCell>{req.createdDate}</TableCell>\r\n                  <TableCell>{req.expectedDeadline}</TableCell>\r\n                  <TableCell>\r\n                    <Chip \r\n                      label={getStatusLabel(t, req.status)} \r\n                      color={getStatusColor(req.status) as any} \r\n                      size=\"small\" \r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <IconButton size=\"small\" onClick={() => onEdit(req.id)}>\r\n                      <EditIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                    <IconButton size=\"small\" onClick={() => onDelete(req.id)}>\r\n                      <DeleteIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan={10} align=\"center\">\r\n                  <Typography variant=\"body1\">{t('pages.requirements.list.empty')}</Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={totalCount}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={onPageChange}\r\n        onRowsPerPageChange={onRowsPerPageChange}\r\n        labelRowsPerPage={t('pages.requirements.pagination.rowsPerPage')}\r\n        labelDisplayedRows={({ from, to, count }) =>\r\n          t('pages.requirements.pagination.displayedRows', { from, to, count })\r\n        }\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default RequirementList;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Autocomplete,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  FormLabel,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableFooter,\r\n  Tabs,\r\n  Tab,\r\n  Link,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  IconButton,\r\n  CircularProgress,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  StepContent,\r\n  Card,\r\n  CardContent,\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Refresh as RefreshIcon,\r\n  Save as SaveIcon,\r\n  Delete as DeleteIcon,\r\n} from '@mui/icons-material';\r\nimport { \r\n  AIFeature, \r\n  Requirement, \r\n  NonFunctionalRequirement, \r\n  TestRequirement, \r\n  UIMockup, \r\n  DataModelEntity, \r\n  IntegrationRequirement \r\n} from '../../types';\r\n\r\ninterface RequirementFormProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onSave: (requirement: Requirement) => void;\r\n  customers: string[];\r\n  assignees: string[];\r\n}\r\n\r\nconst RequirementForm: React.FC<RequirementFormProps> = ({\r\n  open,\r\n  onClose,\r\n  onSave,\r\n  customers,\r\n  assignees,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // Form state\r\n  const [newRequirement, setNewRequirement] = useState<Partial<Requirement>>({\r\n    name: '',\r\n    type: '',\r\n    customer: '',\r\n    assignee: '',\r\n    source: 'manual',\r\n    status: 'pending',\r\n    expectedDeadline: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n    createdDate: new Date().toISOString().split('T')[0],\r\n    description: '',\r\n    features: []\r\n  });\r\n  \r\n  // Creation method state\r\n  const [creationMethod, setCreationMethod] = useState<'manual' | 'upload'>('manual');\r\n  \r\n  // AI generation state\r\n  const [aiFeatures, setAiFeatures] = useState<AIFeature[]>([]);\r\n  const [aiDescription, setAiDescription] = useState('');\r\n  const [showAiResult, setShowAiResult] = useState(false);\r\n  \r\n  // SRS tabs state\r\n  const [currentTab, setCurrentTab] = useState(0);\r\n  const [nonFunctionalRequirements, setNonFunctionalRequirements] = useState<NonFunctionalRequirement[]>([]);\r\n  const [testRequirements, setTestRequirements] = useState<TestRequirement[]>([]);\r\n  const [uiMockups, setUiMockups] = useState<UIMockup[]>([]);\r\n  const [dataModelEntities, setDataModelEntities] = useState<DataModelEntity[]>([]);\r\n  const [integrationRequirements, setIntegrationRequirements] = useState<IntegrationRequirement[]>([]);\r\n  \r\n  // Refs\r\n  const aiResultRef = useRef<HTMLDivElement>(null);\r\n  \r\n  // Editing state\r\n  const [editingFeature, setEditingFeature] = useState<AIFeature | null>(null);\r\n  const [editingField, setEditingField] = useState<keyof AIFeature | null>(null);\r\n  const [editingValue, setEditingValue] = useState('');\r\n\r\n  const handleSaveRequirement = () => {\r\n    if (newRequirement.name && newRequirement.customer && newRequirement.assignee && newRequirement.type) {\r\n      const requirement: Requirement = {\r\n        ...newRequirement as Requirement,\r\n        id: Math.floor(Math.random() * 10000), // Temporary ID, will be replaced by backend\r\n        createdDate: new Date().toISOString().split('T')[0],\r\n        status: 'pending',\r\n        features: aiFeatures,\r\n        // Sử dụng mô tả từ người dùng nếu có, nếu không thì sử dụng mô tả từ AI\r\n        description: newRequirement.description || aiDescription,\r\n        // Cập nhật nguồn tạo dựa trên phương thức\r\n        source: creationMethod === 'manual' ? \r\n          (showAiResult ? 'AI sinh từ mô tả' : 'Nhập tay') : \r\n          'AI sinh từ file upload'\r\n      };\r\n      \r\n      onSave(requirement);\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setShowAiResult(false);\r\n    \r\n    // Reset form\r\n    setAiFeatures([]);\r\n    setAiDescription('');\r\n    setCreationMethod('manual');\r\n    setCurrentTab(0);\r\n    setNonFunctionalRequirements([]);\r\n    setTestRequirements([]);\r\n    setUiMockups([]);\r\n    setDataModelEntities([]);\r\n    setIntegrationRequirements([]);\r\n    setNewRequirement({\r\n      name: '',\r\n      type: '',\r\n      customer: '',\r\n      assignee: '',\r\n      source: 'manual',\r\n      status: 'pending',\r\n      expectedDeadline: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n      createdDate: new Date().toISOString().split('T')[0],\r\n      description: '',\r\n      features: []\r\n    });\r\n  };\r\n\r\n  const handleEditCell = (feature: AIFeature, field: keyof AIFeature, value: string) => {\r\n    setAiFeatures(prev => \r\n      prev.map(f => \r\n        f.id === feature.id ? { ...f, [field]: value } : f\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleAddNewRow = () => {\r\n    const newId = aiFeatures.length > 0 ? Math.max(...aiFeatures.map(f => f.id)) + 1 : 1;\r\n    setAiFeatures([\r\n      ...aiFeatures,\r\n      {\r\n        id: newId,\r\n        feature: '',\r\n        detail: '',\r\n        description: '',\r\n        notes: 'Từ AI (mẫu)'\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const handleDeleteRow = (id: number) => {\r\n    setAiFeatures(prev => prev.filter(f => f.id !== id));\r\n  };\r\n\r\n  const handleRegenerate = () => {\r\n    // Mock regenerate with new data\r\n    const mockFeatures: AIFeature[] = [\r\n      { \r\n        id: 1, \r\n        feature: 'Quản lý Kho', \r\n        detail: 'Luân chuyển kho',\r\n        description: 'Theo dõi mọi hoạt động nhập xuất kho',\r\n        notes: 'Tạo lại bởi AI (mẫu)'\r\n      },\r\n      { \r\n        id: 2, \r\n        feature: 'Tồn kho', \r\n        detail: 'Mức tồn kho',\r\n        description: 'Theo dõi mức tồn kho hiện tại',\r\n        notes: 'Tạo lại bởi AI (mẫu)'\r\n      }\r\n    ];\r\n    setAiFeatures(mockFeatures);\r\n  };\r\n\r\n  const generateAIResponse = () => {\r\n    // Giả lập việc gọi API để tạo yêu cầu từ AI\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      // Mock AI response\r\n      const mockFeatures: AIFeature[] = [\r\n        { \r\n          id: 1, \r\n          feature: 'Quản lý Kho', \r\n          detail: 'Nhập kho',\r\n          description: 'Cho phép người dùng nhập hàng mới vào kho',\r\n          notes: 'Từ AI (mẫu)'\r\n        },\r\n        { \r\n          id: 2, \r\n          feature: 'Quản lý Kho', \r\n          detail: 'Xuất kho',\r\n          description: 'Ghi nhận xuất kho khi giao hàng hoặc bán',\r\n          notes: 'Từ AI (mẫu)'\r\n        },\r\n        { \r\n          id: 3, \r\n          feature: 'Giám sát Kho', \r\n          detail: 'Cảnh báo tồn kho thấp',\r\n          description: 'Thông báo khi số lượng hàng tồn dưới mức tối thiểu',\r\n          notes: 'Từ AI (mẫu)'\r\n        }\r\n      ];\r\n      \r\n      // Mock data for other SRS sections\r\n      const mockNonFunctional: NonFunctionalRequirement[] = [\r\n        { id: 1, key: 'Hiệu suất', value: 'Hệ thống phải xử lý ít nhất 100 giao dịch/phút' },\r\n        { id: 2, key: 'Bảo mật', value: 'Mã hóa dữ liệu người dùng, xác thực 2 yếu tố' },\r\n        { id: 3, key: 'Khả dụng', value: 'Uptime 99.9%, thời gian khôi phục < 1 giờ' },\r\n      ];\r\n      \r\n      const mockTestRequirements: TestRequirement[] = [\r\n        { id: 1, testCase: 'Nhập kho', condition: 'Số lượng > 0', expectedResult: 'Cập nhật số lượng tồn kho' },\r\n        { id: 2, testCase: 'Xuất kho', condition: 'Số lượng <= Tồn kho', expectedResult: 'Giảm số lượng tồn kho' },\r\n        { id: 3, testCase: 'Cảnh báo', condition: 'Tồn kho < Ngưỡng tối thiểu', expectedResult: 'Hiển thị cảnh báo' },\r\n      ];\r\n      \r\n      const mockUiMockups: UIMockup[] = [\r\n        { id: 1, description: 'Giao diện quản lý kho', figmaLink: 'https://figma.com/example' },\r\n      ];\r\n      \r\n      const mockDataModel: DataModelEntity[] = [\r\n        { id: 1, entityName: 'Product', fields: 'id, name, description, quantity, min_quantity', description: 'Thông tin sản phẩm' },\r\n        { id: 2, entityName: 'Transaction', fields: 'id, product_id, type, quantity, date', description: 'Giao dịch nhập/xuất' },\r\n      ];\r\n      \r\n      const mockIntegration: IntegrationRequirement[] = [\r\n        { id: 1, system: 'ERP', method: 'REST API', purpose: 'Đồng bộ dữ liệu sản phẩm' },\r\n        { id: 2, system: 'Notification Service', method: 'WebSocket', purpose: 'Gửi cảnh báo tồn kho thấp' },\r\n      ];\r\n      \r\n      setAiDescription('Hệ thống quản lý kho với đầy đủ các chức năng nhập xuất tồn');\r\n      setAiFeatures(mockFeatures);\r\n      setNonFunctionalRequirements(mockNonFunctional);\r\n      setTestRequirements(mockTestRequirements);\r\n      setUiMockups(mockUiMockups);\r\n      setDataModelEntities(mockDataModel);\r\n      setIntegrationRequirements(mockIntegration);\r\n      setShowAiResult(true);\r\n      setIsLoading(false);\r\n      \r\n      // Scroll to the AI result section\r\n      setTimeout(() => {\r\n        aiResultRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n      }, 100);\r\n    }, 2000);\r\n  };\r\n\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  \r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const isStep1Valid = () => {\r\n    return (\r\n      newRequirement.name && \r\n      newRequirement.type && \r\n      newRequirement.customer && \r\n      newRequirement.assignee && \r\n      newRequirement.expectedDeadline\r\n    );\r\n  };\r\n  \r\n  const isStep2Valid = () => {\r\n    if (creationMethod === 'manual') {\r\n      return newRequirement.description && newRequirement.description.length > 10;\r\n    }\r\n    return true; // For upload method, we'll validate when file is selected\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth=\"lg\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n          <Typography variant=\"h6\">{t('pages.requirements.form.title')}</Typography>\r\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mr: 1 }}>\r\n              {t('pages.requirements.form.steps.indicator', { current: activeStep + 1 })}\r\n            </Typography>\r\n            <Box sx={{ width: 100, display: 'flex', alignItems: 'center' }}>\r\n              <Box\r\n                sx={{\r\n                  width: `${(activeStep + 1) * 50}%`,\r\n                  height: 4,\r\n                  backgroundColor: 'primary.main',\r\n                  borderRadius: 1\r\n                }}\r\n              />\r\n              <Box\r\n                sx={{\r\n                  width: `${(2 - activeStep - 1) * 50}%`,\r\n                  height: 4,\r\n                  backgroundColor: 'grey.300',\r\n                  borderRadius: 1\r\n                }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Box sx={{ mt: 2 }}>\r\n          <Stepper activeStep={activeStep} orientation=\"vertical\" sx={{ '& .MuiStepLabel-root': { padding: '8px 0' } }}>\r\n            {/* Step 1: Basic Information */}\r\n            <Step>\r\n              <StepLabel>\r\n                <Typography variant=\"subtitle1\">{t('pages.requirements.form.steps.step1')}</Typography>\r\n              </StepLabel>\r\n              <StepContent>\r\n                <Card variant=\"outlined\" sx={{ mb: 2 }}>\r\n                  <CardContent>\r\n                    <TextField\r\n                      label={t('pages.requirements.form.fields.name')}\r\n                      fullWidth\r\n                      required\r\n                      value={newRequirement.name || ''}\r\n                      onChange={(e) => setNewRequirement({...newRequirement, name: e.target.value})}\r\n                      margin=\"normal\"\r\n                      size=\"small\"\r\n                      placeholder={t('pages.requirements.form.placeholders.name')}\r\n                    />\r\n                    <FormControl fullWidth margin=\"normal\" size=\"small\" required>\r\n                      <InputLabel>{t('pages.requirements.form.fields.type', { defaultValue: 'Type' })}</InputLabel>\r\n                      <Select\r\n                        value={newRequirement.type || ''}\r\n                        label={t('pages.requirements.form.fields.type', { defaultValue: 'Type' })}\r\n                        onChange={(e) => setNewRequirement({...newRequirement, type: e.target.value})}\r\n                      >\r\n                        <MenuItem value=\"RFI\">{t('pages.requirements.form.types.rfi', { defaultValue: 'RFI' })}</MenuItem>\r\n                        <MenuItem value=\"Bank\">{t('pages.requirements.form.types.bank', { defaultValue: 'Bank' })}</MenuItem>\r\n                        <MenuItem value=\"Industry\">{t('pages.requirements.form.types.industry', { defaultValue: 'Industry' })}</MenuItem>\r\n                        <MenuItem value=\"Client\">{t('pages.requirements.form.types.client', { defaultValue: 'Client' })}</MenuItem>\r\n                        <MenuItem value=\"Internal\">{t('pages.requirements.form.types.internal', { defaultValue: 'Internal' })}</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                    <Box sx={{ display: 'flex', gap: 2, mt: 2, flexWrap: 'wrap' }}>\r\n                      <Autocomplete\r\n                        options={customers}\r\n                        value={newRequirement.customer || null}\r\n                        onChange={(_, newValue) => setNewRequirement({...newRequirement, customer: newValue || ''})}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label={t('pages.requirements.form.fields.customer')}\r\n                            size=\"small\"\r\n                            sx={{ minWidth: 250, flex: 1 }}\r\n                            required\r\n                          />\r\n                        )}\r\n                      />\r\n                      <Autocomplete\r\n                        options={assignees}\r\n                        value={newRequirement.assignee || null}\r\n                        onChange={(_, newValue) => setNewRequirement({...newRequirement, assignee: newValue || ''})}\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label={t('pages.requirements.form.fields.assignee')}\r\n                            size=\"small\"\r\n                            sx={{ minWidth: 250 }}\r\n                            required\r\n                          />\r\n                        )}\r\n                      />\r\n                      <TextField\r\n                        label={t('pages.requirements.form.fields.deadline')}\r\n                        type=\"date\"\r\n                        size=\"small\"\r\n                        sx={{ minWidth: 200 }}\r\n                        value={newRequirement.expectedDeadline || ''}\r\n                        onChange={(e) => setNewRequirement({...newRequirement, expectedDeadline: e.target.value})}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        required\r\n                      />\r\n                    </Box>\r\n                  </CardContent>\r\n                </Card>\r\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={handleNext}\r\n                    disabled={!isStep1Valid()}\r\n                  >\r\n                    {t('pages.requirements.form.actions.next')}\r\n                  </Button>\r\n                </Box>\r\n              </StepContent>\r\n            </Step>\r\n            \r\n            {/* Step 2: Requirement Creation Method */}\r\n            <Step>\r\n              <StepLabel>\r\n                <Typography variant=\"subtitle1\">{t('pages.requirements.form.steps.step2')}</Typography>\r\n              </StepLabel>\r\n              <StepContent>\r\n                <Card variant=\"outlined\" sx={{ mb: 2 }}>\r\n                  <CardContent>\r\n                    <FormControl component=\"fieldset\" sx={{ mb: 2 }}>\r\n                      <FormLabel component=\"legend\">{t('pages.requirements.form.method.group')}</FormLabel>\r\n                      <RadioGroup \r\n                        row \r\n                        value={creationMethod} \r\n                        onChange={(e) => setCreationMethod(e.target.value as 'manual' | 'upload')}\r\n                      >\r\n                        <FormControlLabel value=\"manual\" control={<Radio />} label={t('pages.requirements.form.method.manual')} />\r\n                        <FormControlLabel value=\"upload\" control={<Radio />} label={t('pages.requirements.form.method.upload')} />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                    \r\n                    {creationMethod === 'manual' ? (\r\n                      <TextField\r\n                        label={t('pages.requirements.form.fields.description')}\r\n                        placeholder={t('pages.requirements.form.placeholders.description')}\r\n                        multiline\r\n                        rows={6}\r\n                        fullWidth\r\n                        value={newRequirement.description || ''}\r\n                        onChange={(e) => setNewRequirement({ ...newRequirement, description: e.target.value })}\r\n                      />\r\n                    ) : (\r\n                      <Box sx={{ border: '1px dashed #ccc', p: 3, borderRadius: 1, textAlign: 'center', mb: 2 }}>\r\n                        <input\r\n                          accept=\".pdf,.docx\"\r\n                          style={{ display: 'none' }}\r\n                          id=\"file-upload\"\r\n                          type=\"file\"\r\n                          onChange={(e) => {\r\n                            if (e.target.files && e.target.files[0]) {\r\n                              setTimeout(() => {\r\n                                setNewRequirement({\r\n                                  ...newRequirement,\r\n                                  description: t('pages.requirements.form.upload.generatedDescription', { fileName: e.target.files?.[0].name })\r\n                                });\r\n                              }, 1000);\r\n                            }\r\n                          }}\r\n                        />\r\n                        <label htmlFor=\"file-upload\">\r\n                          <Button variant=\"outlined\" component=\"span\">\r\n                            {t('pages.requirements.form.method.uploadButton')}\r\n                          </Button>\r\n                        </label>\r\n                        <Typography variant=\"body2\" sx={{ mt: 1, color: 'text.secondary' }}>\r\n                          {t('pages.requirements.form.method.uploadHelp')}\r\n                        </Typography>\r\n                      </Box>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\r\n                  <Button onClick={handleBack}>{t('pages.requirements.form.actions.back')}</Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={generateAIResponse}\r\n                    disabled={!isStep2Valid() || isLoading}\r\n                    startIcon={isLoading ? <CircularProgress size={20} color=\"inherit\" /> : null}\r\n                  >\r\n                    {isLoading ? t('pages.requirements.form.actions.generating') : t('pages.requirements.form.actions.generate')}\r\n                  </Button>\r\n                </Box>\r\n              </StepContent>\r\n            </Step>\r\n          </Stepper>\r\n\r\n        {showAiResult && activeStep === 1 && (\r\n          <Box ref={aiResultRef} sx={{ mt: 2, mb: 3, border: '1px solid #e0e0e0', borderRadius: 1, p: 2 }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom sx={{ fontWeight: 'bold', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n              <span>{t('pages.requirements.form.ai.resultTitle')}</span>\r\n              <Button \r\n                variant=\"outlined\" \r\n                size=\"small\"\r\n                startIcon={<RefreshIcon />}\r\n                onClick={handleRegenerate}\r\n              >\r\n                {t('pages.requirements.form.actions.regenerate')}\r\n              </Button>\r\n            </Typography>\r\n            <Typography variant=\"body1\" gutterBottom>\r\n              {aiDescription}\r\n            </Typography>\r\n            <Box sx={{ borderBottom: 1, borderColor: 'divider', mt: 2 }}>\r\n              <Tabs \r\n                value={currentTab} \r\n                onChange={(e, newValue) => setCurrentTab(newValue)}\r\n                variant=\"scrollable\"\r\n                scrollButtons=\"auto\"\r\n              >\r\n                <Tab label={t('pages.requirements.form.tabs.functional')} />\r\n                <Tab label={t('pages.requirements.form.tabs.nonFunctional')} />\r\n                <Tab label={t('pages.requirements.form.tabs.test')} />\r\n                <Tab label={t('pages.requirements.form.tabs.uiMockup')} />\r\n              </Tabs>\r\n            </Box>\r\n\r\n            {/* Tab 0: Functional requirements */}\r\n            {currentTab === 0 && (\r\n              <TableContainer component={Paper} sx={{ mt: 2 }}>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell sx={{ fontWeight: 'bold', width: '20%' }}>{t('pages.requirements.form.tableHeaders.feature')}</TableCell>\r\n                      <TableCell sx={{ fontWeight: 'bold', width: '20%' }}>{t('pages.requirements.form.tableHeaders.detail')}</TableCell>\r\n                      <TableCell sx={{ fontWeight: 'bold', width: '40%' }}>{t('pages.requirements.form.tableHeaders.description')}</TableCell>\r\n                      <TableCell sx={{ fontWeight: 'bold', width: '15%' }}>{t('pages.requirements.form.tableHeaders.notes')}</TableCell>\r\n                      <TableCell sx={{ width: '5%' }}></TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {aiFeatures.map((feature) => (\r\n                      <TableRow key={feature.id} hover>\r\n                        <TableCell\r\n                          onClick={() => {\r\n                            setEditingFeature(feature);\r\n                            setEditingField('feature');\r\n                            setEditingValue(feature.feature);\r\n                          }}\r\n                          sx={{ cursor: 'pointer' }}\r\n                        >\r\n                          {editingFeature?.id === feature.id && editingField === 'feature' ? (\r\n                            <TextField\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              variant=\"standard\"\r\n                              value={editingValue}\r\n                              onChange={(e) => setEditingValue(e.target.value)}\r\n                              onBlur={() => {\r\n                                handleEditCell(feature, 'feature', editingValue);\r\n                                setEditingFeature(null);\r\n                                setEditingField(null);\r\n                              }}\r\n                              onKeyPress={(e) => {\r\n                                if (e.key === 'Enter') {\r\n                                  handleEditCell(feature, 'feature', editingValue);\r\n                                  setEditingFeature(null);\r\n                                  setEditingField(null);\r\n                                }\r\n                              }}\r\n                              autoFocus\r\n                            />\r\n                          ) : (\r\n                            feature.feature\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          onClick={() => {\r\n                            setEditingFeature(feature);\r\n                            setEditingField('detail');\r\n                            setEditingValue(feature.detail);\r\n                          }}\r\n                          sx={{ cursor: 'pointer' }}\r\n                        >\r\n                          {editingFeature?.id === feature.id && editingField === 'detail' ? (\r\n                            <TextField\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              variant=\"standard\"\r\n                              value={editingValue}\r\n                              onChange={(e) => setEditingValue(e.target.value)}\r\n                              onBlur={() => {\r\n                                handleEditCell(feature, 'detail', editingValue);\r\n                                setEditingFeature(null);\r\n                                setEditingField(null);\r\n                              }}\r\n                              onKeyPress={(e) => {\r\n                                if (e.key === 'Enter') {\r\n                                  handleEditCell(feature, 'detail', editingValue);\r\n                                  setEditingFeature(null);\r\n                                  setEditingField(null);\r\n                                }\r\n                              }}\r\n                              autoFocus\r\n                            />\r\n                          ) : (\r\n                            feature.detail\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          onClick={() => {\r\n                            setEditingFeature(feature);\r\n                            setEditingField('description');\r\n                            setEditingValue(feature.description);\r\n                          }}\r\n                          sx={{ cursor: 'pointer' }}\r\n                        >\r\n                          {editingFeature?.id === feature.id && editingField === 'description' ? (\r\n                            <TextField\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              variant=\"standard\"\r\n                              value={editingValue}\r\n                              onChange={(e) => setEditingValue(e.target.value)}\r\n                              onBlur={() => {\r\n                                handleEditCell(feature, 'description', editingValue);\r\n                                setEditingFeature(null);\r\n                                setEditingField(null);\r\n                              }}\r\n                              onKeyPress={(e) => {\r\n                                if (e.key === 'Enter') {\r\n                                  handleEditCell(feature, 'description', editingValue);\r\n                                  setEditingFeature(null);\r\n                                  setEditingField(null);\r\n                                }\r\n                              }}\r\n                              autoFocus\r\n                            />\r\n                          ) : (\r\n                            feature.description\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>{feature.notes}</TableCell>\r\n                        <TableCell>\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            color=\"error\"\r\n                            onClick={() => handleDeleteRow(feature.id)}\r\n                          >\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                  <TableFooter>\r\n                    <TableRow>\r\n                      <TableCell colSpan={5} align=\"center\">\r\n                        <Button\r\n                          startIcon={<AddIcon />}\r\n                          onClick={handleAddNewRow}\r\n                          size=\"small\"\r\n                          sx={{ mr: 1 }}\r\n                        >\r\n                          {t('pages.requirements.form.actions.addRow')}\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableFooter>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n              \r\n              {/* Tab 1: Yêu cầu phi chức năng */}\r\n              {currentTab === 1 && (\r\n                <TableContainer component={Paper} sx={{ mt: 2 }}>\r\n                  <Table size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell sx={{ fontWeight: 'bold', width: '30%' }}>{t('pages.requirements.form.tableHeaders.requirementType')}</TableCell>\r\n                        <TableCell sx={{ fontWeight: 'bold', width: '70%' }}>{t('pages.requirements.form.tableHeaders.value')}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {nonFunctionalRequirements.map((req) => (\r\n                        <TableRow key={req.id} hover>\r\n                          <TableCell>{req.key}</TableCell>\r\n                          <TableCell>{req.value}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              )}\r\n              \r\n              {/* Tab 2: Yêu cầu kiểm thử */}\r\n              {currentTab === 2 && (\r\n                <TableContainer component={Paper} sx={{ mt: 2 }}>\r\n                  <Table size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell sx={{ fontWeight: 'bold', width: '30%' }}>{t('pages.requirements.form.tableHeaders.testCase')}</TableCell>\r\n                        <TableCell sx={{ fontWeight: 'bold', width: '30%' }}>{t('pages.requirements.form.tableHeaders.condition')}</TableCell>\r\n                        <TableCell sx={{ fontWeight: 'bold', width: '40%' }}>{t('pages.requirements.form.tableHeaders.expectedResult')}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {testRequirements.map((test) => (\r\n                        <TableRow key={test.id} hover>\r\n                          <TableCell>{test.testCase}</TableCell>\r\n                          <TableCell>{test.condition}</TableCell>\r\n                          <TableCell>{test.expectedResult}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              )}\r\n              \r\n              {/* Tab 3: UI Mockup/mô tả */}\r\n              {currentTab === 3 && (\r\n                <Box sx={{ mt: 2 }}>\r\n                  <List>\r\n                    {uiMockups.map((mockup) => (\r\n                      <ListItem key={mockup.id} divider>\r\n                        <ListItemText \r\n                          primary={mockup.description}\r\n                          secondary={\r\n                            mockup.figmaLink && (\r\n                              <Link href={mockup.figmaLink} target=\"_blank\" rel=\"noopener\">\r\n                                {t('pages.requirements.form.links.viewOnFigma')}\r\n                              </Link>\r\n                            )\r\n                          }\r\n                        />\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </Box>\r\n              )}\r\n              \r\n              {/* Tab 4: Mô hình dữ liệu */}\r\n              {currentTab === 4 && (\r\n                <TableContainer component={Paper} sx={{ mt: 2 }}>\r\n                  <Table size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell sx={{ fontWeight: 'bold', width: '20%' }}>{t('pages.requirements.form.tableHeaders.entity')}</TableCell>\r\n                        <TableCell sx={{ fontWeight: 'bold', width: '40%' }}>{t('pages.requirements.form.tableHeaders.fields')}</TableCell>\r\n                        <TableCell sx={{ fontWeight: 'bold', width: '40%' }}>{t('pages.requirements.form.tableHeaders.modelDescription')}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {dataModelEntities.map((entity) => (\r\n                        <TableRow key={entity.id} hover>\r\n                          <TableCell>{entity.entityName}</TableCell>\r\n                          <TableCell>\r\n                            <code>{entity.fields}</code>\r\n                          </TableCell>\r\n                          <TableCell>{entity.description}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              )}\r\n              \r\n              {/* Tab 5: Yêu cầu tích hợp */}\r\n              {currentTab === 5 && (\r\n                <TableContainer component={Paper} sx={{ mt: 2 }}>\r\n                  <Table size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell sx={{ fontWeight: 'bold', width: '30%' }}>Hệ thống</TableCell>\r\n                        <TableCell sx={{ fontWeight: 'bold', width: '30%' }}>Phương thức</TableCell>\r\n                        <TableCell sx={{ fontWeight: 'bold', width: '40%' }}>Mục đích</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {integrationRequirements.map((integration) => (\r\n                        <TableRow key={integration.id} hover>\r\n                          <TableCell>{integration.system}</TableCell>\r\n                          <TableCell>{integration.method}</TableCell>\r\n                          <TableCell>{integration.purpose}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              )}\r\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2, gap: 1 }}>\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"\r\n                  startIcon={<SaveIcon />}\r\n                  onClick={handleSaveRequirement}\r\n                >\r\n                  Xác nhận & Lưu\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default RequirementForm;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Chip,\r\n  Divider,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport type { TFunction } from 'i18next';\r\nimport { Requirement, AIFeature } from '../../types';\r\n\r\ninterface RequirementDetailProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  requirement: Requirement | null;\r\n}\r\n\r\nconst getStatusColor = (status: string) => {\r\n  switch (status) {\r\n    case 'pending':\r\n      return 'warning';\r\n    case 'in_discussion':\r\n      return 'info';\r\n    case 'confirmed':\r\n      return 'success';\r\n    default:\r\n      return 'default';\r\n  }\r\n};\r\n\r\nconst getStatusLabel = (status: string, t: (key: string, options?: any) => string) => {\r\n  return t(`pages.requirements.detail.status.${status}`, { defaultValue: status });\r\n};\r\n\r\nconst RequirementDetail: React.FC<RequirementDetailProps> = ({ open, onClose, requirement }) => {\r\n  const { t } = useTranslation();\r\n  if (!requirement) return null;\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      PaperProps={{ sx: { maxHeight: '90vh' } }}\r\n    >\r\n      <DialogTitle sx={{ fontWeight: 'bold' }}>\r\n        {t('pages.requirements.detail.title', 'Requirement details')}\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Box sx={{ mb: 4 }}>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.main' }}>\r\n            📌 {t('pages.requirements.detail.sections.basicInfo', 'Basic information')}\r\n          </Typography>\r\n          <Paper variant=\"outlined\" sx={{ p: 2 }}>\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\r\n              <Box sx={{ width: { xs: '100%', sm: 'calc(50% - 8px)' } }}>\r\n                <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                  {t('pages.requirements.detail.fields.name', 'Requirement name')}\r\n                </Typography>\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 'medium' }}>\r\n                  {requirement.name}\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{ width: { xs: '100%', sm: 'calc(50% - 8px)' } }}>\r\n                <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                  {t('pages.requirements.detail.fields.customer', 'Customer')}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {requirement.customer}\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{ width: { xs: '100%', sm: 'calc(50% - 8px)' } }}>\r\n                <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                  {t('pages.requirements.detail.fields.assignee', 'Assignee')}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {requirement.assignee}\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{ width: { xs: '100%', sm: 'calc(50% - 8px)' } }}>\r\n                <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                  {t('pages.requirements.detail.fields.status', 'Status')}\r\n                </Typography>\r\n                <Chip \r\n                  label={getStatusLabel(requirement.status, t)} \r\n                  color={getStatusColor(requirement.status) as \"warning\" | \"info\" | \"success\" | \"default\"}\r\n                  size=\"small\"\r\n                />\r\n              </Box>\r\n              <Box sx={{ width: { xs: '100%', sm: 'calc(50% - 8px)' } }}>\r\n                <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                  {t('pages.requirements.detail.fields.deadline', 'Expected deadline')}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {requirement.expectedDeadline}\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{ width: { xs: '100%', sm: 'calc(50% - 8px)' } }}>\r\n                <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                  {t('pages.requirements.detail.fields.createdAt', 'Created at')}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {requirement.createdDate}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </Paper>\r\n        </Box>\r\n\r\n        <Divider sx={{ my: 3 }} />\r\n\r\n        <Box sx={{ mb: 4 }}>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.main', mt: 4 }}>\r\n            📝 {t('pages.requirements.detail.sections.description', 'Requirement description')}\r\n          </Typography>\r\n          <Paper variant=\"outlined\" sx={{ p: 2 }}>\r\n            <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n              {requirement.description || ''}\r\n            </Typography>\r\n          </Paper>\r\n        </Box>\r\n\r\n        <Divider sx={{ my: 3 }} />\r\n\r\n        <Box>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.main', mt: 4 }}>\r\n            🤖 {t('pages.requirements.detail.sections.aiAnalysis', 'AI-generated requirement analysis')}\r\n          </Typography>\r\n          {requirement.features && requirement.features.length > 0 ? (\r\n            <TableContainer component={Paper} variant=\"outlined\">\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>{t('pages.requirements.detail.table.headers.no', 'No.')}</TableCell>\r\n                    <TableCell>{t('pages.requirements.detail.table.headers.feature', 'Feature')}</TableCell>\r\n                    <TableCell>{t('pages.requirements.detail.table.headers.detail', 'Detail')}</TableCell>\r\n                    <TableCell>{t('pages.requirements.detail.table.headers.description', 'Description')}</TableCell>\r\n                    <TableCell>{t('pages.requirements.detail.table.headers.notes', 'Notes')}</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {requirement.features.map((feature: AIFeature, index: number) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell>{index + 1}</TableCell>\r\n                      <TableCell>{feature.feature}</TableCell>\r\n                      <TableCell>{feature.detail}</TableCell>\r\n                      <TableCell sx={{ whiteSpace: 'pre-wrap' }}>{feature.description}</TableCell>\r\n                      <TableCell sx={{ whiteSpace: 'pre-wrap' }}>{feature.notes}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          ) : (\r\n            <Paper variant=\"outlined\" sx={{ p: 2 }}>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                {t('pages.requirements.detail.empty.aiFeatures', 'No AI-generated features available.')}\r\n              </Typography>\r\n            </Paper>\r\n          )}\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose}>{t('pages.requirements.detail.buttons.close', 'Close')}</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default RequirementDetail;\r\n","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Stack,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Autocomplete,\r\n  SelectChangeEvent,\r\n} from '@mui/material';\r\nimport {\r\n  Search as SearchIcon,\r\n  Add as AddIcon,\r\n  FilterList as FilterIcon,\r\n  FileDownload as ExportIcon,\r\n} from '@mui/icons-material';\r\n\r\n// Types\r\nimport { Status, Requirement } from './types';\r\nimport DeleteConfirmDialog from './components/dialogs/DeleteConfirmDialog';\r\nimport RequirementList from './components/RequirementList';\r\nimport RequirementForm from './components/RequirementForm';\r\nimport RequirementDetail from './components/RequirementDetail';\r\n\r\n// Fake data\r\nconst fakeCustomers = ['Company A', 'Company B', 'Company C', 'Company D'];\r\nconst fakeAssignees = ['User A', 'User B', 'User C', 'User D'];\r\n\r\nconst generateFakeRequirements = (count: number): Requirement[] => {\r\n  return Array.from({ length: count }, (_, i) => ({\r\n    id: i + 1,\r\n    name: `Yêu cầu ${i + 1} - ${['Hệ thống kho', 'Website bán hàng', 'App di động', 'Phần mềm kế toán'][i % 4]}`,\r\n    customer: fakeCustomers[Math.floor(Math.random() * fakeCustomers.length)],\r\n    assignee: fakeAssignees[Math.floor(Math.random() * fakeAssignees.length)],\r\n    status: ['pending', 'in_discussion', 'confirmed'][Math.floor(Math.random() * 3)] as Status,\r\n    expectedDeadline: new Date(Date.now() + Math.floor(Math.random() * 30) * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n    createdDate: new Date(Date.now() - Math.floor(Math.random() * 90) * 24 * 60 * 60 * 1000).toISOString().split('T')[0]\r\n  }));\r\n};\r\n\r\nconst statusOptions = [\r\n  { value: 'pending', labelKey: 'pages.requirements.status.pending' },\r\n  { value: 'in_discussion', labelKey: 'pages.requirements.status.in_discussion' },\r\n  { value: 'confirmed', labelKey: 'pages.requirements.status.confirmed' }\r\n];\r\n\r\nconst RequirementManagement = () => {\r\n  const { t } = useTranslation();\r\n  // Pagination and filtering states\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [customerFilter, setCustomerFilter] = useState<string | null>(null);\r\n  const [assigneeFilter, setAssigneeFilter] = useState<string | null>(null);\r\n  const [statusFilter, setStatusFilter] = useState<string>('all');\r\n  \r\n  // Requirements state\r\n  const [requirements, setRequirements] = useState<Requirement[]>(generateFakeRequirements(25));\r\n  \r\n  // Create dialog state\r\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\r\n  \r\n  // Delete dialog state\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [requirementToDelete, setRequirementToDelete] = useState<number | null>(null);\r\n\r\n  // Detail dialog state\r\n  const [detailDialogOpen, setDetailDialogOpen] = useState(false);\r\n  const [selectedRequirement, setSelectedRequirement] = useState<Requirement | null>(null);\r\n\r\n  const handleSaveRequirement = (requirement: Requirement) => {\r\n    const newRequirement = {\r\n      ...requirement,\r\n      id: Math.max(...requirements.map(r => r.id), 0) + 1,\r\n    };\r\n    \r\n    setRequirements([newRequirement, ...requirements]);\r\n    setCreateDialogOpen(false);\r\n  };\r\n\r\n  // Filter requirements\r\n  const filteredRequirements = requirements.filter(req => {\r\n    const matchesSearch = req.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesCustomer = !customerFilter || req.customer === customerFilter;\r\n    const matchesAssignee = !assigneeFilter || req.assignee === assigneeFilter;\r\n    const matchesStatus = statusFilter === 'all' || req.status === statusFilter;\r\n    \r\n    return matchesSearch && matchesCustomer && matchesAssignee && matchesStatus;\r\n  });\r\n\r\n  // Pagination\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleCustomerFilterChange = (event: any, newValue: string | null) => {\r\n    setCustomerFilter(newValue);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleAssigneeFilterChange = (event: any, newValue: string | null) => {\r\n    setAssigneeFilter(newValue);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleStatusFilterChange = (event: SelectChangeEvent) => {\r\n    setStatusFilter(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleEditRequirement = (id: number) => {\r\n    // Implement edit requirement logic\r\n    console.log(`Edit requirement with id ${id}`);\r\n  };\r\n\r\n  const handleDeleteRequirement = (id: number) => {\r\n    setRequirementToDelete(id);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleViewRequirementDetail = (id: number) => {\r\n    const requirement = requirements.find(req => req.id === id);\r\n    if (requirement) {\r\n      setSelectedRequirement(requirement);\r\n      setDetailDialogOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleCloseDeleteDialog = () => {\r\n    setDeleteDialogOpen(false);\r\n    setRequirementToDelete(null);\r\n  };\r\n\r\n  const handleConfirmDelete = () => {\r\n    if (requirementToDelete !== null) {\r\n      setRequirements(requirements.filter(req => req.id !== requirementToDelete));\r\n      setDeleteDialogOpen(false);\r\n      setRequirementToDelete(null);\r\n    }\r\n  };\r\n\r\n  const handleCreateRequirement = () => {\r\n    setCreateDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseCreateDialog = () => {\r\n    setCreateDialogOpen(false);\r\n  };\r\n\r\n  const paginatedRequirements = filteredRequirements.slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3, flexWrap: 'wrap', gap: 2 }}>\r\n        <Typography variant=\"h4\" component=\"h1\">\r\n          {t('pages.requirements.title')}\r\n        </Typography>\r\n        <Stack direction=\"row\" spacing={2} sx={{ flexWrap: 'wrap', gap: 1 }}>\r\n          <Button \r\n            variant=\"outlined\" \r\n            startIcon={<ExportIcon />}\r\n            onClick={() => console.log('Export to Excel')}\r\n          >\r\n            {t('pages.requirements.actions.exportExcel')}\r\n          </Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            startIcon={<AddIcon />}\r\n            onClick={handleCreateRequirement}\r\n          >\r\n            {t('pages.requirements.actions.createRequirement')}\r\n          </Button>\r\n        </Stack>\r\n      </Box>\r\n\r\n      <Paper sx={{ p: 2, mb: 2 }}>\r\n        <Box sx={{ display: 'flex', gap: 2, mb: 2, flexWrap: 'wrap' }}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            placeholder={t('pages.requirements.searchPlaceholder')}\r\n            size=\"small\"\r\n            value={searchTerm}\r\n            onChange={handleSearch}\r\n            sx={{ minWidth: 250, flex: 1 }}\r\n            InputProps={{\r\n              startAdornment: <SearchIcon sx={{ color: 'action.active', mr: 1 }} />,\r\n            }}\r\n          />\r\n          <Autocomplete\r\n            options={fakeCustomers}\r\n            value={customerFilter}\r\n            onChange={handleCustomerFilterChange}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label={t('pages.requirements.filters.customer')}\r\n                size=\"small\"\r\n                sx={{ minWidth: 200 }}\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  startAdornment: <FilterIcon fontSize=\"small\" sx={{ color: 'action.active', mr: 1 }} />,\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            options={fakeAssignees}\r\n            value={assigneeFilter}\r\n            onChange={handleAssigneeFilterChange}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label={t('pages.requirements.filters.assignee')}\r\n                size=\"small\"\r\n                sx={{ minWidth: 200 }}\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  startAdornment: <FilterIcon fontSize=\"small\" sx={{ color: 'action.active', mr: 1 }} />,\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n          <FormControl sx={{ minWidth: 200 }} size=\"small\">\r\n            <InputLabel>{t('pages.requirements.filters.status')}</InputLabel>\r\n            <Select\r\n              value={statusFilter}\r\n              label={t('pages.requirements.filters.status')}\r\n              onChange={handleStatusFilterChange}\r\n              startAdornment={<FilterIcon fontSize=\"small\" sx={{ color: 'action.active', mr: 1 }} />}\r\n            >\r\n              <MenuItem value=\"all\">{t('pages.requirements.filters.all')}</MenuItem>\r\n              {statusOptions.map((status) => (\r\n                <MenuItem key={status.value} value={status.value}>\r\n                  {t(status.labelKey as string)}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n\r\n        <RequirementList\r\n          requirements={paginatedRequirements}\r\n          page={page}\r\n          rowsPerPage={rowsPerPage}\r\n          totalCount={filteredRequirements.length}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n          onEdit={handleEditRequirement}\r\n          onDelete={handleDeleteRequirement}\r\n          onViewDetail={handleViewRequirementDetail}\r\n        />\r\n      </Paper>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <DeleteConfirmDialog\r\n        open={deleteDialogOpen}\r\n        onClose={handleCloseDeleteDialog}\r\n        onConfirm={handleConfirmDelete}\r\n        title={t('pages.requirements.dialogs.deleteConfirmTitle')}\r\n        content={t('pages.requirements.dialogs.deleteConfirmText')}\r\n      />\r\n\r\n      {/* Requirement Detail Dialog */}\r\n      <RequirementDetail\r\n        open={detailDialogOpen}\r\n        onClose={() => setDetailDialogOpen(false)}\r\n        requirement={selectedRequirement}\r\n      />\r\n\r\n      {/* Create Requirement Form */}\r\n      <RequirementForm\r\n        open={createDialogOpen}\r\n        onClose={handleCloseCreateDialog}\r\n        onSave={handleSaveRequirement}\r\n        customers={fakeCustomers}\r\n        assignees={fakeAssignees}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RequirementManagement;\r\n"],"names":["_ref","open","onClose","onConfirm","title","content","t","useTranslation","localTitle","defaultValue","localContent","_jsxs","Dialog","children","_jsx","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","getStatusColor","status","getStatusLabel","requirements","page","rowsPerPage","totalCount","onPageChange","onRowsPerPageChange","onEdit","onDelete","onViewDetail","Paper","sx","width","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","length","map","req","hover","cursor","name","type","customer","assignee","source","createdDate","expectedDeadline","Chip","label","size","IconButton","EditIcon","fontSize","DeleteIcon","colSpan","align","Typography","variant","TablePagination","component","count","labelRowsPerPage","labelDisplayedRows","_ref2","from","to","onSave","customers","assignees","isLoading","setIsLoading","useState","newRequirement","setNewRequirement","Date","now","toISOString","split","description","features","creationMethod","setCreationMethod","aiFeatures","setAiFeatures","aiDescription","setAiDescription","showAiResult","setShowAiResult","currentTab","setCurrentTab","nonFunctionalRequirements","setNonFunctionalRequirements","testRequirements","setTestRequirements","uiMockups","setUiMockups","dataModelEntities","setDataModelEntities","integrationRequirements","setIntegrationRequirements","aiResultRef","useRef","editingFeature","setEditingFeature","editingField","setEditingField","editingValue","setEditingValue","resetForm","handleEditCell","feature","field","value","prev","f","_objectSpread","activeStep","setActiveStep","maxWidth","fullWidth","Box","display","alignItems","justifyContent","mr","current","concat","height","backgroundColor","borderRadius","mt","Stepper","orientation","padding","Step","StepLabel","StepContent","Card","mb","CardContent","TextField","required","onChange","e","target","margin","placeholder","FormControl","InputLabel","Select","MenuItem","gap","flexWrap","Autocomplete","options","_","newValue","renderInput","params","minWidth","flex","InputLabelProps","shrink","handleNext","prevActiveStep","disabled","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","multiline","rows","border","p","textAlign","accept","style","files","setTimeout","_e$target$files","fileName","htmlFor","handleBack","generateAIResponse","detail","notes","key","testCase","condition","expectedResult","figmaLink","entityName","fields","system","method","purpose","_aiResultRef$current","scrollIntoView","behavior","startIcon","CircularProgress","ref","gutterBottom","fontWeight","RefreshIcon","handleRegenerate","borderBottom","borderColor","Tabs","scrollButtons","Tab","onBlur","onKeyPress","handleDeleteRow","filter","TableFooter","AddIcon","handleAddNewRow","newId","Math","max","test","List","mockup","ListItem","divider","ListItemText","primary","secondary","Link","href","rel","entity","integration","SaveIcon","handleSaveRequirement","requirement","floor","random","PaperProps","dividers","xs","sm","Divider","my","whiteSpace","index","fakeCustomers","fakeAssignees","statusOptions","labelKey","RequirementManagement","setPage","setRowsPerPage","searchTerm","setSearchTerm","customerFilter","setCustomerFilter","assigneeFilter","setAssigneeFilter","statusFilter","setStatusFilter","setRequirements","Array","i","createDialogOpen","setCreateDialogOpen","deleteDialogOpen","setDeleteDialogOpen","requirementToDelete","setRequirementToDelete","detailDialogOpen","setDetailDialogOpen","selectedRequirement","setSelectedRequirement","filteredRequirements","matchesSearch","toLowerCase","includes","matchesCustomer","matchesAssignee","matchesStatus","paginatedRequirements","slice","Stack","direction","spacing","ExportIcon","console","log","handleCreateRequirement","event","InputProps","startAdornment","SearchIcon","handleCustomerFilterChange","FilterIcon","handleAssigneeFilterChange","RequirementList","handleChangePage","newPage","parseInt","find","DeleteConfirmDialog","handleCloseDeleteDialog","handleConfirmDelete","RequirementDetail","RequirementForm","handleCloseCreateDialog","r"],"sourceRoot":""}