{"version":3,"file":"static/js/228.a20d90fe.chunk.js","mappings":"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","sources":["pages/Contact/components/ContactList/index.tsx","pages/Contact/components/CreateContactForm/index.tsx","pages/Contact/components/EmailWindow/index.tsx","pages/Contact/components/NoteDialog/index.tsx","pages/Contact/index.tsx","pages/Contact/components/ContactDetails/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Chip,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n  InputAdornment,\r\n  Button,\r\n  Avatar,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Search as SearchIcon,\r\n  FilterList as FilterListIcon,\r\n  MoreVert as MoreVertIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon\r\n} from '@mui/icons-material';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface Contact {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone: string;\r\n  owner: string;\r\n  createDate: string;\r\n  leadStatus: string;\r\n}\r\n\r\ninterface ContactListProps {\r\n  contacts: Contact[];\r\n  searchTerm: string;\r\n  page: number;\r\n  rowsPerPage: number;\r\n  selectedContacts: number[];\r\n  onSearchChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onChangePage: (event: unknown, newPage: number) => void;\r\n  onChangeRowsPerPage: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onCheckboxClick: (id: number) => void;\r\n  onOpenCreateDialog: () => void;\r\n  onOpenContactDrawer: (contact: Contact) => void;\r\n  getInitials: (firstName: string, lastName: string) => string;\r\n  isSelected: (id: number) => boolean;\r\n}\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'pages.contacts.columns.name', minWidth: 170 },\r\n  { id: 'email', label: 'pages.contacts.columns.email', minWidth: 170 },\r\n  { id: 'phone', label: 'pages.contacts.columns.phone', minWidth: 120 },\r\n  { id: 'owner', label: 'pages.contacts.columns.owner', minWidth: 120 },\r\n  { id: 'createDate', label: 'pages.contacts.columns.createDate', minWidth: 100 },\r\n  { id: 'leadStatus', label: 'pages.contacts.columns.leadStatus', minWidth: 100 },\r\n  { id: 'actions', label: 'pages.contacts.columns.actions', minWidth: 80 },\r\n];\r\n\r\nconst ContactList: React.FC<ContactListProps> = ({\r\n  contacts,\r\n  searchTerm,\r\n  page,\r\n  rowsPerPage,\r\n  selectedContacts,\r\n  onSearchChange,\r\n  onChangePage,\r\n  onChangeRowsPerPage,\r\n  onSelectAllClick,\r\n  onCheckboxClick,\r\n  onOpenCreateDialog,\r\n  onOpenContactDrawer,\r\n  getInitials,\r\n  isSelected\r\n}) => {\r\n  const { t } = useTranslation();\r\n  // Filter contacts based on search term\r\n  const filteredContacts = contacts.filter(contact => \r\n    contact.firstName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    contact.lastName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    contact.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    contact.phone.includes(searchTerm)\r\n  );\r\n\r\n  const translatedColumns = React.useMemo(() => {\r\n    return columns.map(col => ({ ...col, label: t(col.label as any) }));\r\n  }, [t]);\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <Box p={2} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Typography variant=\"h6\" component=\"div\">\r\n          {t('common.contacts')}\r\n          <Typography component=\"span\" color=\"text.secondary\" sx={{ ml: 1 }}>\r\n            ({filteredContacts.length})\r\n          </Typography>\r\n        </Typography>\r\n        <Box display=\"flex\" gap={1}>\r\n          <Button \r\n            variant=\"contained\" \r\n            startIcon={<AddIcon />}\r\n            onClick={onOpenCreateDialog}\r\n          >\r\n            {t('pages.contacts.actions.createContact')}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      \r\n      <Box px={2} pb={2} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <TextField\r\n          placeholder={t('pages.contacts.searchPlaceholder')}\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={onSearchChange}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          sx={{ width: 300 }}\r\n        />\r\n        <IconButton>\r\n          <FilterListIcon />\r\n        </IconButton>\r\n      </Box>\r\n      \r\n      <TableContainer sx={{ maxHeight: 'calc(100vh - 280px)' }}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                  indeterminate={selectedContacts.length > 0 && selectedContacts.length < filteredContacts.length}\r\n                  checked={filteredContacts.length > 0 && selectedContacts.length === filteredContacts.length}\r\n                  onChange={onSelectAllClick}\r\n                />\r\n              </TableCell>\r\n              {translatedColumns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  style={{ minWidth: column.minWidth }}\r\n                  sx={{ fontWeight: 'bold' }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filteredContacts\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((contact) => {\r\n                const isItemSelected = isSelected(contact.id);\r\n                \r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={-1}\r\n                    key={contact.id}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={isItemSelected}\r\n                        onClick={() => onCheckboxClick(contact.id)}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box display=\"flex\" alignItems=\"center\" sx={{ cursor: 'pointer' }} onClick={() => onOpenContactDrawer(contact)}>\r\n                        <Avatar sx={{ mr: 2, bgcolor: 'primary.main' }}>\r\n                          {getInitials(contact.firstName, contact.lastName)}\r\n                        </Avatar>\r\n                        <Typography>\r\n                          {contact.firstName} {contact.lastName}\r\n                        </Typography>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>{contact.email}</TableCell>\r\n                    <TableCell>{contact.phone}</TableCell>\r\n                    <TableCell>{contact.owner}</TableCell>\r\n                    <TableCell>{contact.createDate}</TableCell>\r\n                    <TableCell>\r\n                      <Chip \r\n                        label={contact.leadStatus} \r\n                        color={\r\n                          contact.leadStatus === 'New' ? 'primary' : \r\n                          contact.leadStatus === 'Qualified' ? 'success' : \r\n                          'warning'\r\n                        } \r\n                        size=\"small\" \r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box display=\"flex\">\r\n                        <Tooltip title={t('common.edit')}>\r\n                          <IconButton size=\"small\">\r\n                            <EditIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title={t('common.delete')}>\r\n                          <IconButton size=\"small\">\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title={t('common.more')}>\r\n                          <IconButton size=\"small\">\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Box>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={filteredContacts.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={onChangePage}\r\n        onRowsPerPageChange={onChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton\r\n} from '@mui/material';\r\nimport {\r\n  Close as CloseIcon\r\n} from '@mui/icons-material';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface CreateContactFormProps {\r\n  newContact: {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phone: string;\r\n    jobTitle: string;\r\n    leadStatus: string;\r\n  };\r\n  onClose: () => void;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\r\n  onLeadStatusChange: (event: any) => void;\r\n  onSubmit: () => void;\r\n}\r\n\r\nconst CreateContactForm: React.FC<CreateContactFormProps> = ({\r\n  newContact,\r\n  onClose,\r\n  onChange,\r\n  onLeadStatusChange,\r\n  onSubmit\r\n}) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <DialogTitle>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {t('pages.contacts.form.createTitle')}\r\n          <IconButton onClick={onClose} size=\"small\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Box sx={{ mt: 1, display: 'flex', flexWrap: 'wrap', gap: 2 }}>\r\n          <Box sx={{ flex: '1 1 calc(50% - 8px)' }}>\r\n            <TextField\r\n              name=\"firstName\"\r\n              label={t('pages.contacts.form.fields.firstName')}\r\n              fullWidth\r\n              required\r\n              value={newContact.firstName}\r\n              onChange={onChange}\r\n              autoFocus\r\n            />\r\n          </Box>\r\n          <Box sx={{ flex: '1 1 calc(50% - 8px)' }}>\r\n            <TextField\r\n              name=\"lastName\"\r\n              label={t('pages.contacts.form.fields.lastName')}\r\n              fullWidth\r\n              value={newContact.lastName}\r\n              onChange={onChange}\r\n            />\r\n          </Box>\r\n          <Box sx={{ width: '100%', mt: 2 }}>\r\n            <TextField\r\n              name=\"email\"\r\n              label={t('pages.contacts.form.fields.email')}\r\n              type=\"email\"\r\n              fullWidth\r\n              required\r\n              value={newContact.email}\r\n              onChange={onChange}\r\n            />\r\n          </Box>\r\n          <Box sx={{ width: '100%', mt: 2 }}>\r\n            <TextField\r\n              name=\"phone\"\r\n              label={t('pages.contacts.form.fields.phone')}\r\n              fullWidth\r\n              value={newContact.phone}\r\n              onChange={onChange}\r\n            />\r\n          </Box>\r\n          <Box sx={{ width: '100%', mt: 2 }}>\r\n            <TextField\r\n              name=\"jobTitle\"\r\n              label={t('pages.contacts.form.fields.jobTitle')}\r\n              fullWidth\r\n              value={newContact.jobTitle}\r\n              onChange={onChange}\r\n            />\r\n          </Box>\r\n          <Box sx={{ width: '100%', mt: 2 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>{t('pages.contacts.form.fields.leadStatus')}</InputLabel>\r\n              <Select\r\n                value={newContact.leadStatus}\r\n                label={t('pages.contacts.form.fields.leadStatus')}\r\n                onChange={onLeadStatusChange}\r\n              >\r\n                <MenuItem value=\"New\">{t('pages.contacts.form.options.leadStatus.new')}</MenuItem>\r\n                <MenuItem value=\"Contacted\">{t('pages.contacts.form.options.leadStatus.contacted')}</MenuItem>\r\n                <MenuItem value=\"Qualified\">{t('pages.contacts.form.options.leadStatus.qualified')}</MenuItem>\r\n                <MenuItem value=\"Lost\">{t('pages.contacts.form.options.leadStatus.lost')}</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose}>{t('pages.contacts.form.actions.cancel')}</Button>\r\n        <Button onClick={onSubmit} variant=\"contained\" color=\"primary\">\r\n          {t('pages.contacts.form.actions.save')}\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateContactForm;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Paper,\r\n  Divider,\r\n  Menu,\r\n  MenuItem,\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  Popover,\r\n  ButtonGroup\r\n} from '@mui/material';\r\nimport {\r\n  Close as CloseIcon,\r\n  Minimize as MinimizeIcon,\r\n  Maximize as MaximizeIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n  Schedule as ScheduleIcon,\r\n  CalendarToday as CalendarIcon,\r\n  Launch as LaunchIcon,\r\n  AttachFile as AttachFileIcon,\r\n  Image as ImageIcon,\r\n  Link as LinkIcon,\r\n  FormatBold as FormatBoldIcon,\r\n  FormatItalic as FormatItalicIcon,\r\n  FormatUnderlined as FormatUnderlinedIcon,\r\n  ArrowDropDown as ArrowDropDownIcon,\r\n  OpenInFull as OpenInFullIcon,\r\n  CloseFullscreen as CloseFullscreenIcon,\r\n  Edit as EditIcon,\r\n  ContentCopy as ContentCopyIcon\r\n} from '@mui/icons-material';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface EmailWindowProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  recipientEmail?: string;\r\n  fromContactDetails?: boolean;\r\n}\r\n\r\nconst EmailWindow: React.FC<EmailWindowProps> = ({ open, onClose, recipientEmail = '', fromContactDetails = false }) => {\r\n  const { t } = useTranslation();\r\n  // Default position in the center of the screen\r\n  const defaultPosition = { x: window.innerWidth / 2 - 375, y: window.innerHeight / 2 - 300 };\r\n  const [position, setPosition] = useState(defaultPosition);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const [isMaximized, setIsMaximized] = useState(false);\r\n  const [showSendOptions, setShowSendOptions] = useState(false);\r\n  const [sendLaterSelected, setSendLaterSelected] = useState(false);\r\n  \r\n  // Gmail integration and email state\r\n  const [emailSubject, setEmailSubject] = useState('');\r\n  const [emailBody, setEmailBody] = useState('');\r\n  const [emailTo, setEmailTo] = useState(recipientEmail || '');\r\n  // Set from contact details based on prop\r\n  useEffect(() => {\r\n    if (open) {\r\n      // Always position at the bottom right corner like Gmail\r\n      // Adjust for Contact Details panel if needed\r\n      let rightOffset = 20; // Default right margin\r\n      \r\n      if (fromContactDetails) {\r\n        // If opened from contact details, adjust position to avoid overlap\r\n        const contactDetailsWidth = 400; // Approximate width of contact details\r\n        rightOffset = contactDetailsWidth + 20; // Position to the left of contact details\r\n      }\r\n      \r\n      // Position at the very bottom of the screen\r\n      // For Gmail-like behavior, we want it flush with the bottom\r\n      const bottomPosition = window.innerHeight - (isMinimized ? 48 : 600);\r\n      const rightPosition = window.innerWidth - 750 - rightOffset;\r\n      \r\n      setPosition({ \r\n        x: Math.max(20, rightPosition),\r\n        y: bottomPosition\r\n      });\r\n    }\r\n    \r\n    // Update recipient when prop changes\r\n    if (recipientEmail) {\r\n      setEmailTo(recipientEmail);\r\n    }\r\n  }, [open, fromContactDetails, recipientEmail, isMinimized]);\r\n  // We only need sendLaterAnchorEl for the Send Later popover\r\n  const [sendLaterAnchorEl, setSendLaterAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [sendLaterOption, setSendLaterOption] = useState('1hour');\r\n  const [customDate, setCustomDate] = useState(new Date().toISOString().split('T')[0]);\r\n  const [customTime, setCustomTime] = useState('16:30');\r\n  const windowRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Handle drag start\r\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (isMaximized) return;\r\n    \r\n    if (windowRef.current && e.target === e.currentTarget) {\r\n      setIsDragging(true);\r\n      const rect = windowRef.current.getBoundingClientRect();\r\n      setDragOffset({\r\n        x: e.clientX - rect.left,\r\n        y: e.clientY - rect.top\r\n      });\r\n    }\r\n  };\r\n\r\n  // Handle dragging\r\n  useEffect(() => {\r\n    const handleMouseMove = (e: MouseEvent) => {\r\n      if (isDragging && !isMaximized) {\r\n        setPosition({\r\n          x: e.clientX - dragOffset.x,\r\n          y: e.clientY - dragOffset.y\r\n        });\r\n      }\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      setIsDragging(false);\r\n    };\r\n\r\n    if (isDragging) {\r\n      document.addEventListener('mousemove', handleMouseMove);\r\n      document.addEventListener('mouseup', handleMouseUp);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n  }, [isDragging, dragOffset, isMaximized]);\r\n\r\n  // Handle maximize/restore window\r\n  const handleMaximize = () => {\r\n    setIsMaximized(!isMaximized);\r\n    setIsMinimized(false);\r\n  };\r\n  \r\n  // Function to handle temporary window detach (launch in new window)\r\n  const handleDetach = () => {\r\n    // Instead of creating a popup, navigate to a new route with the email data\r\n    // We'll simulate this by opening a new tab with a URL that would handle this\r\n    // In a real application, you would use React Router navigation\r\n    \r\n    // Create a URL with query parameters for the email data\r\n    const emailParams = new URLSearchParams({\r\n      to: emailTo,\r\n      subject: emailSubject,\r\n      body: emailBody\r\n    }).toString();\r\n    \r\n    // Open a new tab with the email compose route\r\n    window.open(`/email/compose?${emailParams}`, '_blank');\r\n    \r\n    // Close the current email window\r\n    onClose();\r\n  };\r\n\r\n  // Handle send actions with Gmail integration\r\n  const handleSendNow = () => {\r\n    if (!emailTo) {\r\n      alert(t('pages.contacts.emailWindow.messages.missingRecipient'));\r\n      return;\r\n    }\r\n    \r\n    // Logic to send email via Gmail\r\n    const mailtoLink = `mailto:${emailTo}?subject=${encodeURIComponent(emailSubject)}&body=${encodeURIComponent(emailBody)}`;\r\n    \r\n    // Open the default mail client\r\n    window.open(mailtoLink, '_blank');\r\n    \r\n    // Reset modal to minimized state after sending email\r\n    setIsMaximized(false);\r\n    setIsMinimized(true);\r\n    \r\n    console.log('Sending email now');\r\n    alert(t('pages.contacts.emailWindow.messages.openedClient'));\r\n    onClose();\r\n  };\r\n\r\n  // Send options and Send Later functionality\r\n  const handleSendOptionsClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setShowSendOptions(true);\r\n    setSendLaterAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleSendOptionsClose = () => {\r\n    setShowSendOptions(false);\r\n    setSendLaterAnchorEl(null);\r\n  };\r\n  \r\n  const handleSendLaterClick = () => {\r\n    setSendLaterSelected(true);\r\n    setShowSendOptions(false);\r\n  };\r\n\r\n  const handleSendLaterOptionsClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setSendLaterAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleSendLaterClose = () => {\r\n    setSendLaterAnchorEl(null);\r\n  };\r\n\r\n  const handleSendLaterOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSendLaterOption(event.target.value);\r\n  };\r\n\r\n  const handleScheduleSend = () => {\r\n    // Logic to schedule email\r\n    let scheduledTime = '';\r\n    \r\n    switch(sendLaterOption) {\r\n      case '1hour':\r\n        scheduledTime = 'in 1 hour';\r\n        break;\r\n      case '2hours':\r\n        scheduledTime = 'in 2 hours';\r\n        break;\r\n      case 'tomorrow_morning':\r\n        scheduledTime = 'tomorrow morning (8am)';\r\n        break;\r\n      case 'tomorrow_afternoon':\r\n        scheduledTime = 'tomorrow afternoon (1pm)';\r\n        break;\r\n      case 'custom':\r\n        scheduledTime = `on ${customDate} at ${customTime}`;\r\n        break;\r\n    }\r\n    \r\n    console.log(`Email scheduled to be sent ${sendLaterOption === 'custom' ? `on ${customDate} at ${customTime}` : `with option: ${sendLaterOption}`}`);\r\n    \r\n    // Reset modal to minimized state after scheduling email\r\n    setIsMaximized(false);\r\n    setIsMinimized(true);\r\n    \r\n    handleSendLaterClose();\r\n    // Don't close the modal completely, just minimize it\r\n    // onClose();\r\n  };\r\n\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* Overlay mờ chỉ khi modal được mở rộng (maximize) */}\r\n      {open && isMaximized && (\r\n        <Box\r\n          sx={{\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            zIndex: 1100,\r\n          }}\r\n        />\r\n      )}\r\n      <Paper\r\n      ref={windowRef}\r\n      sx={{\r\n        position: 'fixed',\r\n        // Khi mở rộng: căn giữa màn hình, khi thu nhỏ: nằm dưới cùng\r\n        top: isMaximized ? '50%' : 'auto',\r\n        left: isMaximized ? '50%' : position.x,\r\n        bottom: isMaximized ? 'auto' : '20px',\r\n        // Dịch chuyển ngược lại 50% kích thước của chính nó để căn giữa\r\n        transform: isMaximized ? 'translate(-50%, -50%)' : 'none',\r\n        // Điều chỉnh kích thước\r\n        width: isMaximized ? '900px' : '550px',\r\n        maxWidth: isMaximized ? '1200px' : '550px',\r\n        // Các style khác giữ nguyên\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        boxShadow: isMinimized ? 1 : 3,\r\n        zIndex: 1200,\r\n        visibility: open ? 'visible' : 'hidden',\r\n        opacity: open ? 1 : 0,\r\n        transition: 'all 0.3s ease',\r\n        overflow: 'hidden',\r\n        maxHeight: isMaximized ? '600px' : '450px',\r\n        height: isMinimized ? '48px' : 'auto',\r\n        borderTopLeftRadius: '8px',\r\n        borderTopRightRadius: '8px',\r\n        borderBottomLeftRadius: isMinimized ? '0px' : '8px',\r\n        borderBottomRightRadius: isMinimized ? '0px' : '8px',\r\n        // Responsive\r\n        '@media (min-width: 1800px)': {\r\n          width: isMaximized ? '1100px' : '550px',\r\n          maxWidth: isMaximized ? '1200px' : '550px',\r\n          maxHeight: isMaximized ? '650px' : '450px',\r\n        },\r\n        '@media (min-width: 1600px)': {\r\n          width: isMaximized ? '1000px' : '550px',\r\n          maxHeight: isMaximized ? '600px' : '450px',\r\n        },\r\n        '@media (max-width: 1400px)': {\r\n          width: isMaximized ? '800px' : '550px',\r\n        },\r\n        '@media (max-width: 1200px)': {\r\n          width: isMaximized ? '700px' : '500px',\r\n        },\r\n        '@media (max-width: 992px)': {\r\n          width: isMaximized ? '650px' : '450px',\r\n        }\r\n      }}\r\n    >\r\n      {/* Window header/title bar - Orange theme style */}\r\n      <Box\r\n        sx={{\r\n          bgcolor: '#ff7a59', // Orange HubSpot theme color\r\n          p: 1,\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          cursor: 'move',\r\n          userSelect: 'none',\r\n          color: 'white',\r\n          borderTopLeftRadius: '8px',\r\n          borderTopRightRadius: '8px',\r\n          '@media (min-width: 1600px)': {\r\n            width: '100%',\r\n          },\r\n          '@media (max-width: 1200px)': {\r\n            width: isMaximized ? 'calc(100% - 420px)' : '600px',\r\n          },\r\n          '@media (max-width: 900px)': {\r\n            width: isMaximized ? '100%' : '100%',\r\n            right: '0',\r\n            bottom: '0',\r\n            borderRadius: 0\r\n          }\r\n        }}\r\n        onMouseDown={handleMouseDown}\r\n      >\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <IconButton size=\"small\" sx={{ color: 'white', mr: 1 }} onClick={() => setIsMinimized(!isMinimized)}>\r\n            {isMinimized ? <ExpandMoreIcon fontSize=\"small\" /> : <MinimizeIcon fontSize=\"small\" />}\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\" fontWeight=\"medium\">\r\n            {t('pages.contacts.emailWindow.title')}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <IconButton size=\"small\" sx={{ color: 'white' }} onClick={handleDetach}>\r\n            <LaunchIcon fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton size=\"small\" sx={{ color: 'white' }} onClick={handleMaximize}>\r\n            {isMaximized ? <CloseFullscreenIcon fontSize=\"small\" /> : <OpenInFullIcon fontSize=\"small\" />}\r\n          </IconButton>\r\n          <IconButton size=\"small\" sx={{ color: 'white' }} onClick={onClose}>\r\n            <CloseIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Email content */}\r\n      {!isMinimized && (\r\n        <Box sx={{ p: 0, flexGrow: 1, display: 'flex', flexDirection: 'column', overflow: 'hidden' }}>\r\n          {/* Gmail/HubSpot style tabs - Orange theme */}\r\n          <Box sx={{ bgcolor: '#f5f5f5', borderBottom: '1px solid #ddd' }}>\r\n            <Box sx={{ display: 'flex', px: 2, py: 0.5 }}>\r\n              <Typography sx={{ mr: 2, fontWeight: 'bold', fontSize: '13px', color: '#ff7a59' }}>{t('pages.contacts.emailWindow.tabs.templates')}</Typography>\r\n              <Typography sx={{ mr: 2, fontSize: '13px', display: 'flex', alignItems: 'center' }}>\r\n                {t('pages.contacts.emailWindow.tabs.sequences')} <Box component=\"span\" sx={{ ml: 0.5, fontSize: '14px' }}>🔒</Box>\r\n              </Typography>\r\n              <Typography sx={{ mr: 2, fontSize: '13px' }}>{t('pages.contacts.emailWindow.tabs.documents')}</Typography>\r\n              <Typography sx={{ mr: 2, fontSize: '13px', display: 'flex', alignItems: 'center' }}>\r\n                {t('pages.contacts.emailWindow.tabs.meetings')} <ExpandMoreIcon fontSize=\"small\" />\r\n              </Typography>\r\n              <Typography sx={{ fontSize: '13px', display: 'flex', alignItems: 'center' }}>\r\n                {t('pages.contacts.emailWindow.tabs.quotes')} <ExpandMoreIcon fontSize=\"small\" />\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          {/* Email form fields - Simplified with underlines instead of boxes */}\r\n          <Box sx={{ p: 1.5 }}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\r\n              <Typography sx={{ width: 30, fontSize: '13px', mr: 2 }}>{t('pages.contacts.emailWindow.fields.to')}</Typography>\r\n              <TextField\r\n                fullWidth\r\n                value={emailTo}\r\n                onChange={(e) => setEmailTo(e.target.value)}\r\n                size=\"small\"\r\n                variant=\"standard\"\r\n                placeholder={t('pages.contacts.emailWindow.placeholders.to')}\r\n                sx={{ '& .MuiInputBase-input': { fontSize: '13px' } }}\r\n              />\r\n            </Box>\r\n            \r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\r\n              <Typography sx={{ width: 30, fontSize: '13px', mr: 2 }}>{t('pages.contacts.emailWindow.fields.from')}</Typography>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', flexGrow: 1 }}>\r\n                <Typography sx={{ fontSize: '13px' }}>\r\n                  Tô Thế Mẫn <Typography component=\"span\" sx={{ color: 'text.secondary', fontSize: '13px' }}>(totheman2@gmail.com)</Typography>\r\n                </Typography>\r\n              </Box>\r\n              <Typography sx={{ fontSize: '13px', color: '#ff7a59', ml: 2, cursor: 'pointer' }}>{t('pages.contacts.emailWindow.fields.cc')}</Typography>\r\n              <Typography sx={{ fontSize: '13px', color: '#ff7a59', ml: 2, cursor: 'pointer' }}>{t('pages.contacts.emailWindow.fields.bcc')}</Typography>\r\n            </Box>\r\n            \r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\r\n              <Typography sx={{ width: 30, fontSize: '13px', mr: 2}}>{t('pages.contacts.emailWindow.fields.subject')}</Typography>\r\n              <TextField\r\n                fullWidth\r\n                size=\"small\"\r\n                variant=\"standard\"\r\n                placeholder={t('pages.contacts.emailWindow.placeholders.subject')}\r\n                value={emailSubject}\r\n                onChange={(e) => setEmailSubject(e.target.value)}\r\n                sx={{ '& .MuiInputBase-input': { fontSize: '13px' } }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          {/* Message body - Only this area should scroll */}\r\n          <Box sx={{ p: 1.5, flexGrow: 1, display: 'flex', flexDirection: 'column', overflow: 'auto', maxHeight: isMaximized ? '400px' : '200px', '@media (min-width: 1600px)': { maxHeight: isMaximized ? '450px' : '200px' } }}>\r\n            <TextField\r\n              multiline\r\n              placeholder={t('pages.contacts.emailWindow.placeholders.body')}\r\n              minRows={3}\r\n              maxRows={isMaximized ? 15 : 8}\r\n              fullWidth\r\n              variant=\"standard\"\r\n              value={emailBody}\r\n              onChange={(e) => setEmailBody(e.target.value)}\r\n              InputProps={{\r\n                disableUnderline: true,\r\n                sx: { p: 0 }\r\n              }}\r\n              sx={{ \r\n                flexGrow: 1,\r\n                '& .MuiInputBase-root': {\r\n                  height: 'auto',\r\n                  alignItems: 'flex-start',\r\n                  fontSize: '13px'\r\n                },\r\n                '& .MuiInputBase-input': {\r\n                  overflow: 'auto',\r\n                  fontSize: '13px'\r\n                }\r\n              }}\r\n            />\r\n            \r\n            <Divider sx={{ my: 1 }} />\r\n\r\n            {/* Formatting toolbar - with functional buttons */}\r\n            <Box sx={{ display: 'flex', alignItems: 'center', borderTop: '1px solid #ddd', pt: 0.5, flexShrink: 0 }}>\r\n              <IconButton size=\"small\" onClick={() => {\r\n                const textarea = document.querySelector('textarea');\r\n                if (textarea) {\r\n                  const start = textarea.selectionStart;\r\n                  const end = textarea.selectionEnd;\r\n                  const selectedText = emailBody.substring(start, end);\r\n                  const newText = emailBody.substring(0, start) + `<b>${selectedText}</b>` + emailBody.substring(end);\r\n                  setEmailBody(newText);\r\n                } else {\r\n                  setEmailBody(prev => `<b>${prev}</b>`);\r\n                }\r\n              }}><FormatBoldIcon fontSize=\"small\" /></IconButton>\r\n              <IconButton size=\"small\" onClick={() => {\r\n                const textarea = document.querySelector('textarea');\r\n                if (textarea) {\r\n                  const start = textarea.selectionStart;\r\n                  const end = textarea.selectionEnd;\r\n                  const selectedText = emailBody.substring(start, end);\r\n                  const newText = emailBody.substring(0, start) + `<i>${selectedText}</i>` + emailBody.substring(end);\r\n                  setEmailBody(newText);\r\n                } else {\r\n                  setEmailBody(prev => `<i>${prev}</i>`);\r\n                }\r\n              }}><FormatItalicIcon fontSize=\"small\" /></IconButton>\r\n              <IconButton size=\"small\" onClick={() => {\r\n                const textarea = document.querySelector('textarea');\r\n                if (textarea) {\r\n                  const start = textarea.selectionStart;\r\n                  const end = textarea.selectionEnd;\r\n                  const selectedText = emailBody.substring(start, end);\r\n                  const newText = emailBody.substring(0, start) + `<u>${selectedText}</u>` + emailBody.substring(end);\r\n                  setEmailBody(newText);\r\n                } else {\r\n                  setEmailBody(prev => `<u>${prev}</u>`);\r\n                }\r\n              }}><FormatUnderlinedIcon fontSize=\"small\" /></IconButton>\r\n              <Typography sx={{ fontSize: '12px', color: '#ff7a59', mx: 1, cursor: 'pointer' }}>{t('pages.contacts.emailWindow.toolbar.more')}</Typography>\r\n              <IconButton size=\"small\" onClick={() => {\r\n                alert('Attach file functionality would be implemented here');\r\n              }}><AttachFileIcon fontSize=\"small\" /></IconButton>\r\n              <IconButton size=\"small\" onClick={() => {\r\n                alert('Insert image functionality would be implemented here');\r\n              }}><ImageIcon fontSize=\"small\" /></IconButton>\r\n              <Typography sx={{ fontSize: '12px', color: '#ff7a59', mx: 1, cursor: 'pointer' }}>{t('pages.contacts.emailWindow.toolbar.insert')}</Typography>\r\n              <IconButton size=\"small\" onClick={() => {\r\n                const url = prompt(t('pages.contacts.emailWindow.prompts.enterUrl'));\r\n                if (url) {\r\n                  const textarea = document.querySelector('textarea');\r\n                  if (textarea) {\r\n                    const start = textarea.selectionStart;\r\n                    const end = textarea.selectionEnd;\r\n                    const selectedText = emailBody.substring(start, end);\r\n                    const linkText = selectedText || url;\r\n                    const newText = emailBody.substring(0, start) + \r\n                      `<a href=\"${url}\">${linkText}</a>` + \r\n                      emailBody.substring(end);\r\n                    setEmailBody(newText);\r\n                  } else {\r\n                    setEmailBody(prev => `${prev} <a href=\"${url}\">${url}</a>`);\r\n                  }\r\n                }\r\n              }}><LinkIcon fontSize=\"small\" /></IconButton>\r\n              \r\n              <Box sx={{ flexGrow: 1 }} />\r\n              \r\n              <Typography sx={{ fontSize: '12px', color: '#ff7a59', display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\r\n                {t('pages.contacts.emailWindow.associated', { count: 1 })} <ExpandMoreIcon fontSize=\"small\" />\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          \r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', p: 1, borderTop: '1px solid #ddd' }}>\r\n            <ButtonGroup variant=\"contained\" sx={{ bgcolor: '#ff7a59', '& .MuiButton-contained': { bgcolor: '#ff7a59', '&:hover': { bgcolor: '#ff5c33' } } }}>\r\n              <Button\r\n                onClick={sendLaterSelected ? handleSendLaterOptionsClick : handleSendNow}\r\n                sx={{\r\n                  borderTopRightRadius: 0,\r\n                  borderBottomRightRadius: 0,\r\n                  bgcolor: '#ff7a59',\r\n                  '&:hover': {\r\n                    bgcolor: '#ff5c33',\r\n                  }\r\n                }}\r\n              >\r\n                {sendLaterSelected ? t('pages.contacts.emailWindow.actions.sendLater') : t('pages.contacts.emailWindow.actions.send')}\r\n              </Button>\r\n              <Button\r\n                onClick={handleSendOptionsClick}\r\n                sx={{\r\n                  borderTopLeftRadius: 0,\r\n                  borderBottomLeftRadius: 0,\r\n                  bgcolor: '#ff7a59',\r\n                  '&:hover': {\r\n                    bgcolor: '#ff5c33',\r\n                  },\r\n                  minWidth: '30px',\r\n                  width: '30px'\r\n                }}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </Button>\r\n            </ButtonGroup>\r\n            \r\n            {/* Send Options Popover */}\r\n            <Popover\r\n              open={Boolean(sendLaterAnchorEl) && showSendOptions}\r\n              anchorEl={sendLaterAnchorEl}\r\n              onClose={handleSendOptionsClose}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              PaperProps={{\r\n                sx: { width: 200, p: 1 }\r\n              }}\r\n            >\r\n              <MenuItem onClick={handleSendNow} sx={{ py: 1 }}>\r\n                {t('pages.contacts.emailWindow.actions.sendNow')}\r\n              </MenuItem>\r\n              <MenuItem onClick={handleSendLaterClick} sx={{ py: 1 }}>\r\n                {t('pages.contacts.emailWindow.actions.sendLater')}\r\n              </MenuItem>\r\n            </Popover>\r\n            \r\n            {/* Send Later Options Popover */}\r\n            <Popover\r\n              open={Boolean(sendLaterAnchorEl) && !showSendOptions && sendLaterSelected}\r\n              anchorEl={sendLaterAnchorEl}\r\n              onClose={handleSendLaterClose}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              PaperProps={{\r\n                sx: { width: 300, p: 2 }\r\n              }}\r\n            >\r\n              <Typography variant=\"subtitle1\" fontWeight=\"bold\" sx={{ mb: 2 }}>\r\n                {t('pages.contacts.emailWindow.sendLater.title')}\r\n              </Typography>\r\n              <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                  value={sendLaterOption}\r\n                  onChange={handleSendLaterOptionChange}\r\n                >\r\n                  <FormControlLabel value=\"1hour\" control={<Radio />} label={t('pages.contacts.emailWindow.sendLater.options.in1hour')} />\r\n                  <FormControlLabel value=\"2hours\" control={<Radio />} label={t('pages.contacts.emailWindow.sendLater.options.in2hours')} />\r\n                  <FormControlLabel value=\"tomorrow_morning\" control={<Radio />} label={t('pages.contacts.emailWindow.sendLater.options.tomorrowMorning')} />\r\n                  <FormControlLabel value=\"tomorrow_afternoon\" control={<Radio />} label={t('pages.contacts.emailWindow.sendLater.options.tomorrowAfternoon')} />\r\n                  <FormControlLabel value=\"custom\" control={<Radio />} label={t('pages.contacts.emailWindow.sendLater.options.custom')} />\r\n                </RadioGroup>\r\n              </FormControl>\r\n              \r\n              {sendLaterOption === 'custom' && (\r\n                <Box sx={{ display: 'flex', gap: 2, mt: 2, mb: 2 }}>\r\n                  <TextField\r\n                    type=\"date\"\r\n                    size=\"small\"\r\n                    value={customDate}\r\n                    onChange={(e) => setCustomDate(e.target.value)}\r\n                    InputProps={{\r\n                      startAdornment: <CalendarIcon fontSize=\"small\" sx={{ mr: 1, color: 'text.secondary' }} />\r\n                    }}\r\n                    sx={{ flex: 1 }}\r\n                  />\r\n                  <TextField\r\n                    type=\"time\"\r\n                    size=\"small\"\r\n                    value={customTime}\r\n                    onChange={(e) => setCustomTime(e.target.value)}\r\n                    sx={{ width: '120px' }}\r\n                  />\r\n                </Box>\r\n              )}\r\n              \r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  onClick={handleScheduleSend}\r\n                  sx={{\r\n                    bgcolor: '#ff7a59',\r\n                    '&:hover': {\r\n                      bgcolor: '#ff5c33',\r\n                    }\r\n                  }}\r\n                >\r\n                  {t('pages.contacts.emailWindow.sendLater.actions.schedule')}\r\n                </Button>\r\n                <Button variant=\"outlined\" onClick={handleSendLaterClose}>\r\n                  {t('pages.contacts.emailWindow.sendLater.actions.cancel')}\r\n                </Button>\r\n              </Box>\r\n            </Popover>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Paper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EmailWindow;\r\n","import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  Box,\r\n  IconButton\r\n} from '@mui/material';\r\nimport {\r\n  Close as CloseIcon\r\n} from '@mui/icons-material';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface NoteDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst NoteDialog: React.FC<NoteDialogProps> = ({ open, onClose }) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Dialog \r\n      open={open} \r\n      onClose={onClose}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {t('pages.contacts.note.title')}\r\n          <IconButton onClick={onClose} size=\"small\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"note\"\r\n          label={t('pages.contacts.note.fields.note')}\r\n          multiline\r\n          rows={4}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n        />\r\n        <Button\r\n          variant=\"outlined\"\r\n          component=\"label\"\r\n          sx={{ mt: 2 }}\r\n        >\r\n          {t('pages.contacts.note.actions.attachFile')}\r\n          <input\r\n            type=\"file\"\r\n            hidden\r\n          />\r\n        </Button>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose}>{t('pages.contacts.note.actions.cancel')}</Button>\r\n        <Button onClick={onClose} variant=\"contained\" color=\"primary\">\r\n          {t('pages.contacts.note.actions.save')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default NoteDialog;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  Drawer,\r\n  Typography\r\n} from '@mui/material';\r\nimport {\r\n  FileUpload as FileUploadIcon\r\n} from '@mui/icons-material';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// Import custom components\r\nimport ContactList from './components/ContactList';\r\nimport ContactDetails from './components/ContactDetails';\r\nimport CreateContactForm from './components/CreateContactForm';\r\nimport EmailWindow from './components/EmailWindow';\r\nimport NoteDialog from './components/NoteDialog';\r\n\r\n// Mock data for contacts\r\nconst mockContacts = [\r\n  {\r\n    id: 1,\r\n    firstName: 'Nguyễn',\r\n    lastName: 'Văn A',\r\n    email: 'nguyenvana@example.com',\r\n    phone: '0901234567',\r\n    owner: 'Admin User',\r\n    createDate: '2023-07-15',\r\n    leadStatus: 'New'\r\n  },\r\n  {\r\n    id: 2,\r\n    firstName: 'Trần',\r\n    lastName: 'Thị B',\r\n    email: 'tranthib@example.com',\r\n    phone: '0912345678',\r\n    owner: 'Sales Rep',\r\n    createDate: '2023-07-10',\r\n    leadStatus: 'Qualified'\r\n  },\r\n  {\r\n    id: 3,\r\n    firstName: 'Lê',\r\n    lastName: 'Văn C',\r\n    email: 'levanc@example.com',\r\n    phone: '0923456789',\r\n    owner: 'Admin User',\r\n    createDate: '2023-07-05',\r\n    leadStatus: 'Contacted'\r\n  },\r\n  {\r\n    id: 4,\r\n    firstName: 'Phạm',\r\n    lastName: 'Thị D',\r\n    email: 'phamthid@example.com',\r\n    phone: '0934567890',\r\n    owner: 'Sales Rep',\r\n    createDate: '2023-06-30',\r\n    leadStatus: 'New'\r\n  },\r\n  {\r\n    id: 5,\r\n    firstName: 'Hoàng',\r\n    lastName: 'Văn E',\r\n    email: 'hoangvane@example.com',\r\n    phone: '0945678901',\r\n    owner: 'Admin User',\r\n    createDate: '2023-06-25',\r\n    leadStatus: 'Qualified'\r\n  },\r\n];\r\n\r\n// Column definitions\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'email', label: 'Email', minWidth: 170 },\r\n  { id: 'phone', label: 'Phone Number', minWidth: 120 },\r\n  { id: 'owner', label: 'Contact Owner', minWidth: 120 },\r\n  { id: 'createDate', label: 'Create Date', minWidth: 100 },\r\n  { id: 'leadStatus', label: 'Lead Status', minWidth: 100 },\r\n  { id: 'actions', label: 'Actions', minWidth: 80 },\r\n];\r\n\r\nconst ContactManagement: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedContacts, setSelectedContacts] = useState<number[]>([]);\r\n  const [openCreateDialog, setOpenCreateDialog] = useState(false);\r\n  const [openContactDrawer, setOpenContactDrawer] = useState(false);\r\n  const [selectedContact, setSelectedContact] = useState<any>(null);\r\n  const [openNoteDialog, setOpenNoteDialog] = useState(false);\r\n  const [openEmailWindow, setOpenEmailWindow] = useState(false);\r\n  const [newContact, setNewContact] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    jobTitle: '',\r\n    leadStatus: 'New'\r\n  });\r\n\r\n  // Handle pagination\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // Handle search\r\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // Handle checkbox selection\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = filteredContacts.map((n) => n.id);\r\n      setSelectedContacts(newSelected);\r\n      return;\r\n    }\r\n    setSelectedContacts([]);\r\n  };\r\n\r\n  const handleCheckboxClick = (id: number) => {\r\n    const selectedIndex = selectedContacts.indexOf(id);\r\n    let newSelected: number[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selectedContacts, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selectedContacts.slice(1));\r\n    } else if (selectedIndex === selectedContacts.length - 1) {\r\n      newSelected = newSelected.concat(selectedContacts.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selectedContacts.slice(0, selectedIndex),\r\n        selectedContacts.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelectedContacts(newSelected);\r\n  };\r\n\r\n  const isSelected = (id: number) => selectedContacts.indexOf(id) !== -1;\r\n\r\n  // Handle create contact dialog\r\n  const handleOpenCreateDialog = () => {\r\n    setOpenCreateDialog(true);\r\n  };\r\n\r\n  const handleCloseCreateDialog = () => {\r\n    setOpenCreateDialog(false);\r\n    setNewContact({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      jobTitle: '',\r\n      leadStatus: 'New'\r\n    });\r\n  };\r\n\r\n  const handleCreateContactChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setNewContact({\r\n      ...newContact,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleLeadStatusChange = (event: any) => {\r\n    setNewContact({\r\n      ...newContact,\r\n      leadStatus: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleCreateContact = () => {\r\n    // In a real app, this would send data to an API\r\n    console.log('Creating contact:', newContact);\r\n    handleCloseCreateDialog();\r\n    // Show success notification (would use a proper notification system in a real app)\r\n    alert(t('pages.contacts.notifications.createSuccess'));\r\n  };\r\n\r\n  // Handle contact drawer\r\n  const handleOpenContactDrawer = (contact: any) => {\r\n    setSelectedContact(contact);\r\n    setOpenContactDrawer(true);\r\n  };\r\n\r\n  const handleCloseContactDrawer = () => {\r\n    setOpenContactDrawer(false);\r\n  };\r\n\r\n  // Handle note dialog\r\n  const handleOpenNoteDialog = () => {\r\n    setOpenNoteDialog(true);\r\n  };\r\n\r\n  const handleCloseNoteDialog = () => {\r\n    setOpenNoteDialog(false);\r\n  };\r\n\r\n  // Handle email window\r\n  const handleOpenEmailWindow = () => {\r\n    setOpenEmailWindow(true);\r\n  };\r\n\r\n  const handleCloseEmailWindow = () => {\r\n    setOpenEmailWindow(false);\r\n  };\r\n\r\n  // Filter contacts based on search term\r\n  const filteredContacts = mockContacts.filter((contact) => {\r\n    const fullName = `${contact.firstName} ${contact.lastName}`.toLowerCase();\r\n    return (\r\n      fullName.includes(searchTerm.toLowerCase()) ||\r\n      contact.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      contact.phone.includes(searchTerm)\r\n    );\r\n  });\r\n\r\n  // Get initials for avatar\r\n  const getInitials = (firstName: string, lastName: string) => {\r\n    return `${firstName.charAt(0)}${lastName.charAt(0)}`;\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      {/* Contact List */}\r\n      <ContactList\r\n        contacts={mockContacts}\r\n        searchTerm={searchTerm}\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        selectedContacts={selectedContacts}\r\n        onSearchChange={handleSearchChange}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        onSelectAllClick={handleSelectAllClick}\r\n        onCheckboxClick={handleCheckboxClick}\r\n        onOpenCreateDialog={handleOpenCreateDialog}\r\n        onOpenContactDrawer={handleOpenContactDrawer}\r\n        getInitials={getInitials}\r\n        isSelected={isSelected}\r\n      />\r\n\r\n      {/* Create Contact Dialog */}\r\n      <Dialog\r\n        open={openCreateDialog}\r\n        onClose={handleCloseCreateDialog}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n      >\r\n        <CreateContactForm\r\n          newContact={newContact}\r\n          onClose={handleCloseCreateDialog}\r\n          onChange={handleCreateContactChange}\r\n          onLeadStatusChange={handleLeadStatusChange}\r\n          onSubmit={handleCreateContact}\r\n        />\r\n      </Dialog>\r\n\r\n      {/* Contact Preview Drawer */}\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={openContactDrawer}\r\n        onClose={(_, reason) => {\r\n          // Only close when explicitly clicking the backdrop (not when interacting with email window)\r\n          if (reason === 'backdropClick') {\r\n            const emailWindow = document.querySelector('.email-window');\r\n            // If clicking on email window, don't close the drawer\r\n            if (emailWindow && emailWindow.contains(document.activeElement)) {\r\n              return;\r\n            }\r\n          }\r\n          handleCloseContactDrawer();\r\n        }}\r\n        ModalProps={{\r\n          BackdropProps: {\r\n            sx: { backgroundColor: 'transparent' }\r\n          }\r\n        }}\r\n        sx={{\r\n          '& .MuiDrawer-paper': { \r\n            width: { xs: '100%', sm: 500 },\r\n            p: 2\r\n          },\r\n        }}\r\n      >\r\n        {selectedContact && (\r\n          <ContactDetails\r\n            contact={selectedContact}\r\n            onClose={handleCloseContactDrawer}\r\n            onOpenEmailWindow={handleOpenEmailWindow}\r\n            onOpenNoteDialog={handleOpenNoteDialog}\r\n          />\r\n        )}\r\n      </Drawer>\r\n\r\n      {/* Note Dialog */}\r\n      <NoteDialog \r\n        open={openNoteDialog} \r\n        onClose={handleCloseNoteDialog}\r\n      />\r\n\r\n      {/* Email Window (Draggable) */}\r\n      <EmailWindow\r\n        open={openEmailWindow}\r\n        onClose={handleCloseEmailWindow}\r\n        recipientEmail={selectedContact?.email || ''}\r\n        fromContactDetails={true}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContactManagement;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  Divider,\r\n  Chip,\r\n  Card,\r\n  CardContent,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport {\r\n  Close as CloseIcon,\r\n  Email as EmailIcon,\r\n  Phone as PhoneIcon,\r\n  Note as NoteIcon,\r\n  Event as EventIcon,\r\n  Assignment as TaskIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n  Edit as EditIcon,\r\n  ContentCopy as ContentCopyIcon\r\n} from '@mui/icons-material';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface Contact {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone: string;\r\n  owner: string;\r\n  createDate: string;\r\n  leadStatus: string;\r\n}\r\n\r\ninterface ContactDetailsProps {\r\n  contact: Contact;\r\n  onClose: () => void;\r\n  onOpenEmailWindow: () => void;\r\n  onOpenNoteDialog: () => void;\r\n}\r\n\r\nconst ContactDetails: React.FC<ContactDetailsProps> = ({\r\n  contact,\r\n  onClose,\r\n  onOpenEmailWindow,\r\n  onOpenNoteDialog\r\n}) => {\r\n  const [hoverName, setHoverName] = useState(false);\r\n  const [hoverEmail, setHoverEmail] = useState(false);\r\n  const { t } = useTranslation();\r\n  \r\n  const handleCopyEmail = () => {\r\n    navigator.clipboard.writeText(contact.email);\r\n    alert(t('pages.contacts.details.messages.emailCopied'));\r\n  };\r\n  return (\r\n    <Box sx={{ fontSize: '0.9rem' }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={1.5}>\r\n        <Typography variant=\"h6\" sx={{ fontSize: '1.1rem' }}>{t('pages.contacts.details.title')}</Typography>\r\n        <IconButton onClick={onClose} size=\"small\">\r\n          <CloseIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <Box mb={2}>\r\n        <Box \r\n          sx={{ display: 'flex', alignItems: 'center' }}\r\n          onMouseEnter={() => setHoverName(true)}\r\n          onMouseLeave={() => setHoverName(false)}\r\n        >\r\n          <Typography variant=\"h5\" fontWeight=\"bold\" sx={{ fontSize: '1.1rem' }}>\r\n            {contact.firstName} {contact.lastName}\r\n          </Typography>\r\n          {hoverName && (\r\n            <IconButton size=\"small\" sx={{ ml: 1 }}>\r\n              <EditIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          )}\r\n        </Box>\r\n        <Box \r\n          sx={{ display: 'flex', alignItems: 'center' }}\r\n          onMouseEnter={() => setHoverEmail(true)}\r\n          onMouseLeave={() => setHoverEmail(false)}\r\n        >\r\n          <Typography color=\"text.secondary\" sx={{ mb: 0.5, fontSize: '0.85rem' }}>\r\n            {contact.email}\r\n          </Typography>\r\n          {hoverEmail && (\r\n            <IconButton size=\"small\" sx={{ ml: 1 }} onClick={handleCopyEmail}>\r\n              <ContentCopyIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          )}\r\n        </Box>\r\n        <Box display=\"flex\" gap={0.5} mt={1.5}>\r\n          <Tooltip title={t('pages.contacts.details.actions.addNote')}>\r\n            <IconButton color=\"primary\" onClick={onOpenNoteDialog} size=\"small\">\r\n              <NoteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title={t('pages.contacts.details.actions.sendEmail')}>\r\n            <IconButton color=\"primary\" onClick={onOpenEmailWindow} size=\"small\">\r\n              <EmailIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title={t('pages.contacts.details.actions.call')}>\r\n            <IconButton color=\"primary\" size=\"small\">\r\n              <PhoneIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title={t('pages.contacts.details.actions.schedule')}>\r\n            <IconButton color=\"primary\" size=\"small\">\r\n              <EventIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title={t('pages.contacts.details.actions.createTask')}>\r\n            <IconButton color=\"primary\" size=\"small\">\r\n              <TaskIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Divider sx={{ my: 1.5 }} />\r\n      \r\n      <Card variant=\"outlined\" sx={{ mb: 1.5 }}>\r\n        <CardContent sx={{ p: 1.5, '&:last-child': { pb: 1.5 } }}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Typography variant=\"subtitle1\" fontWeight=\"bold\" sx={{ fontSize: '0.9rem' }}>\r\n              {t('pages.contacts.details.sections.about')}\r\n            </Typography>\r\n            <ExpandMoreIcon fontSize=\"small\" />\r\n          </Box>\r\n          <Box mt={1.5} sx={{ display: 'flex', flexWrap: 'wrap', gap: 1.5 }}>\r\n            <Box sx={{ flex: '1 1 calc(50% - 8px)' }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.8rem' }}>\r\n                {t('pages.contacts.details.fields.phone')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontSize: '0.85rem' }}>\r\n                {contact.phone}\r\n              </Typography>\r\n            </Box>\r\n            <Box sx={{ flex: '1 1 calc(50% - 8px)' }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.8rem' }}>\r\n                {t('pages.contacts.details.fields.leadStatus')}\r\n              </Typography>\r\n              <Chip \r\n                label={contact.leadStatus} \r\n                color={\r\n                  contact.leadStatus === 'New' ? 'primary' : \r\n                  contact.leadStatus === 'Qualified' ? 'success' : \r\n                  'warning'\r\n                } \r\n                size=\"small\" \r\n                sx={{ height: '20px', '& .MuiChip-label': { fontSize: '0.75rem', px: 1 } }}\r\n              />\r\n            </Box>\r\n            <Box sx={{ flex: '1 1 calc(50% - 8px)' }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.8rem' }}>\r\n                {t('pages.contacts.details.fields.owner')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontSize: '0.85rem' }}>\r\n                {contact.owner}\r\n              </Typography>\r\n            </Box>\r\n            <Box sx={{ flex: '1 1 calc(50% - 8px)' }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.8rem' }}>\r\n                {t('pages.contacts.details.fields.created')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontSize: '0.85rem' }}>\r\n                {contact.createDate}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card variant=\"outlined\">\r\n        <CardContent sx={{ p: 1.5, '&:last-child': { pb: 1.5 } }}>\r\n          <Typography variant=\"subtitle1\" fontWeight=\"bold\" sx={{ fontSize: '0.9rem' }}>\r\n            {t('pages.contacts.details.timeline.title')}\r\n          </Typography>\r\n          <Box mt={1.5} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height={80}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '0.8rem' }}>\r\n              {t('pages.contacts.details.timeline.empty')}\r\n            </Typography>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContactDetails;\r\n"],"names":["columns","id","label","minWidth","_ref","contacts","searchTerm","page","rowsPerPage","selectedContacts","onSearchChange","onChangePage","onChangeRowsPerPage","onSelectAllClick","onCheckboxClick","onOpenCreateDialog","onOpenContactDrawer","getInitials","isSelected","t","useTranslation","filteredContacts","filter","contact","firstName","toLowerCase","includes","lastName","email","phone","translatedColumns","React","map","col","_objectSpread","_jsxs","Paper","sx","width","overflow","children","Box","p","display","justifyContent","alignItems","Typography","variant","component","color","ml","length","_jsx","gap","Button","startIcon","AddIcon","onClick","px","pb","TextField","placeholder","size","value","onChange","InputProps","startAdornment","InputAdornment","position","SearchIcon","IconButton","FilterListIcon","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","column","style","fontWeight","TableBody","slice","isItemSelected","hover","role","tabIndex","selected","cursor","Avatar","mr","bgcolor","owner","createDate","Chip","leadStatus","Tooltip","title","EditIcon","fontSize","DeleteIcon","MoreVertIcon","TablePagination","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","newContact","onClose","onLeadStatusChange","onSubmit","_Fragment","DialogTitle","CloseIcon","DialogContent","mt","flexWrap","flex","name","fullWidth","required","autoFocus","type","jobTitle","FormControl","InputLabel","Select","MenuItem","DialogActions","open","recipientEmail","fromContactDetails","defaultPosition","x","window","innerWidth","y","innerHeight","setPosition","useState","isDragging","setIsDragging","dragOffset","setDragOffset","isMinimized","setIsMinimized","isMaximized","setIsMaximized","showSendOptions","setShowSendOptions","sendLaterSelected","setSendLaterSelected","emailSubject","setEmailSubject","emailBody","setEmailBody","emailTo","setEmailTo","useEffect","rightOffset","bottomPosition","rightPosition","Math","max","sendLaterAnchorEl","setSendLaterAnchorEl","sendLaterOption","setSendLaterOption","customDate","setCustomDate","Date","toISOString","split","customTime","setCustomTime","windowRef","useRef","handleMouseMove","e","clientX","clientY","handleMouseUp","document","addEventListener","removeEventListener","handleSendNow","alert","mailtoLink","concat","encodeURIComponent","console","log","handleSendLaterClose","top","left","right","bottom","backgroundColor","zIndex","ref","transform","maxWidth","flexDirection","boxShadow","visibility","opacity","transition","height","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","userSelect","borderRadius","onMouseDown","current","target","currentTarget","rect","getBoundingClientRect","ExpandMoreIcon","MinimizeIcon","handleDetach","emailParams","URLSearchParams","to","subject","body","toString","LaunchIcon","handleMaximize","CloseFullscreenIcon","OpenInFullIcon","flexGrow","borderBottom","py","mb","Divider","multiline","minRows","maxRows","disableUnderline","my","borderTop","pt","flexShrink","textarea","querySelector","start","selectionStart","end","selectionEnd","selectedText","substring","newText","prev","FormatBoldIcon","FormatItalicIcon","FormatUnderlinedIcon","mx","AttachFileIcon","ImageIcon","url","prompt","linkText","LinkIcon","ButtonGroup","event","Popover","Boolean","anchorEl","handleSendOptionsClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","handleSendLaterClick","RadioGroup","FormControlLabel","control","Radio","CalendarIcon","handleScheduleSend","scheduledTime","Dialog","margin","rows","hidden","mockContacts","ContactManagement","setPage","setRowsPerPage","setSearchTerm","setSelectedContacts","openCreateDialog","setOpenCreateDialog","openContactDrawer","setOpenContactDrawer","selectedContact","setSelectedContact","openNoteDialog","setOpenNoteDialog","openEmailWindow","setOpenEmailWindow","setNewContact","handleCloseCreateDialog","handleCloseContactDrawer","ContactList","handleChangePage","newPage","newSelected","n","selectedIndex","indexOf","handleOpenCreateDialog","charAt","CreateContactForm","handleCreateContact","Drawer","anchor","_","reason","emailWindow","contains","activeElement","ModalProps","BackdropProps","xs","sm","ContactDetails","onOpenEmailWindow","handleOpenEmailWindow","onOpenNoteDialog","handleOpenNoteDialog","NoteDialog","handleCloseNoteDialog","EmailWindow","handleCloseEmailWindow","hoverName","setHoverName","hoverEmail","setHoverEmail","onMouseEnter","onMouseLeave","handleCopyEmail","navigator","clipboard","writeText","ContentCopyIcon","NoteIcon","EmailIcon","PhoneIcon","EventIcon","TaskIcon","Card","CardContent"],"sourceRoot":""}