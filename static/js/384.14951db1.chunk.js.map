{"version":3,"file":"static/js/384.14951db1.chunk.js","mappings":"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","sources":["pages/DealManagement/components/DealTypes.ts","pages/DealManagement/components/SmartFilter.tsx","pages/DealManagement/components/DealStageChip.tsx","pages/DealManagement/components/DealReminderBadge.tsx","pages/DealManagement/components/DealList.tsx","pages/DealManagement/components/DealFilters.tsx","pages/DealManagement/components/DealForm.tsx","pages/DealManagement/components/DealStats.tsx","pages/DealManagement/components/DealReminders.tsx","pages/DealManagement/index.tsx"],"sourcesContent":["// Định nghĩa các types cho module Deal Management\r\n\r\n// Enum cho các giai đoạn deal\r\nexport enum DealStage {\r\n  INITIAL_CONTACT = 'Liên hệ ban đầu',\r\n  REQUIREMENT_RECORDED = 'Đã ghi nhận yêu cầu',\r\n  QUOTE_SENT = 'Đã gửi báo giá',\r\n  CONTRACT_SENT = 'Gửi hợp đồng',\r\n  CLOSED_WON = 'Đã chốt',\r\n  CLOSED_LOST = 'Đã huỷ'\r\n}\r\n\r\n// Màu sắc cho từng giai đoạn\r\nexport const STAGE_COLORS: Record<DealStage, string> = {\r\n  [DealStage.INITIAL_CONTACT]: '#ff9800', // Cam nhạt\r\n  [DealStage.REQUIREMENT_RECORDED]: '#fbc02d', // Vàng đậm\r\n  [DealStage.QUOTE_SENT]: '#1976d2', // Xanh dương\r\n  [DealStage.CONTRACT_SENT]: '#7b1fa2', // Tím\r\n  [DealStage.CLOSED_WON]: '#4caf50', // Xanh lá\r\n  [DealStage.CLOSED_LOST]: '#e53935' // Đỏ\r\n};\r\n\r\n// Trọng số cho từng giai đoạn (để tính giá trị deal có trọng số)\r\nexport const STAGE_WEIGHTS: Record<DealStage, number> = {\r\n  [DealStage.INITIAL_CONTACT]: 0.1,\r\n  [DealStage.REQUIREMENT_RECORDED]: 0.3,\r\n  [DealStage.QUOTE_SENT]: 0.5,\r\n  [DealStage.CONTRACT_SENT]: 0.7,\r\n  [DealStage.CLOSED_WON]: 1.0,\r\n  [DealStage.CLOSED_LOST]: 0.0\r\n};\r\n\r\n// Interface cho Deal\r\nexport interface Deal {\r\n  id: number;\r\n  name: string;\r\n  customer: string;\r\n  stage: DealStage;\r\n  value: number;\r\n  deadline: string; // ISO date string\r\n  owner: string;\r\n  notes?: string;\r\n  createdAt: string; // ISO date string\r\n  hasReminder: boolean;\r\n  reminderNote?: string;\r\n  reminderDate?: string; // ISO date string\r\n  reminderRecipient?: string;\r\n}\r\n\r\n// Interface cho bộ lọc\r\nexport interface DealFilters {\r\n  searchTerm: string;\r\n  stage: DealStage | 'Tất cả';\r\n  owner: string | 'Tất cả';\r\n  dateRange: {\r\n    start: Date | null;\r\n    end: Date | null;\r\n  } | null;\r\n  hasReminder: boolean | null;\r\n  valueRange: {\r\n    min: number;\r\n    max: number;\r\n  };\r\n}\r\n\r\n// Interface cho các chỉ số tổng quan\r\nexport interface DealStats {\r\n  totalDealAmount: number;\r\n  weightedDealAmount: number;\r\n  openDealAmount: number;\r\n  closedDealAmount: number;\r\n  newDealsThisMonth: number;\r\n  averageDealAge: number; // Số ngày trung bình\r\n}\r\n\r\n// Interface cho form thêm/sửa deal\r\nexport interface DealFormData {\r\n  name: string;\r\n  customer: string;\r\n  stage: DealStage;\r\n  value: number;\r\n  deadline: string;\r\n  owner: string;\r\n  notes: string;\r\n  hasReminder: boolean;\r\n  reminderNote?: string;\r\n  reminderDate?: string;\r\n  reminderRecipient?: string;\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Chip,\r\n  Paper,\r\n  InputAdornment\r\n} from '@mui/material';\r\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\ninterface SmartFilterProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onApplyFilter: (query: string) => void;\r\n  currentFilter?: string;\r\n}\r\n\r\nconst exampleQueries = [\r\n  'Các deal chưa chốt trong tháng 7 của Phạm Thị D',\r\n  'Deal giá trị trên 100 triệu chưa gửi báo giá',\r\n  'Hiển thị deal đang ở giai đoạn đàm phán',\r\n  'Tìm deal của khách hàng ABC'\r\n];\r\n\r\nconst SmartFilter: React.FC<SmartFilterProps> = ({\r\n  open,\r\n  onClose,\r\n  onApplyFilter,\r\n  currentFilter\r\n}) => {\r\n  const [query, setQuery] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  const handleApply = () => {\r\n    if (query.trim()) {\r\n      setIsProcessing(true);\r\n      // Giả lập xử lý trong 500ms\r\n      setTimeout(() => {\r\n        onApplyFilter(query);\r\n        setIsProcessing(false);\r\n        onClose();\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  const handleExampleClick = (example: string) => {\r\n    setQuery(example);\r\n  };\r\n\r\n  return (\r\n    <Dialog \r\n      open={open} \r\n      onClose={onClose}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n      PaperProps={{\r\n        sx: {\r\n          borderRadius: 2,\r\n          minHeight: '400px',\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }\r\n      }}\r\n    >\r\n      <DialogTitle sx={{ \r\n        display: 'flex', \r\n        alignItems: 'center',\r\n        borderBottom: '1px solid',\r\n        borderColor: 'divider',\r\n        padding: 2\r\n      }}>\r\n        <SmartToyIcon color=\"primary\" sx={{ mr: 1 }} />\r\n        <Typography variant=\"h6\" component=\"span\">\r\n          Bộ lọc thông minh\r\n        </Typography>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      \r\n      <DialogContent sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n        <Box sx={{ mb: 2 }}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n            Nhập yêu cầu lọc của bạn bằng ngôn ngữ tự nhiên\r\n          </Typography>\r\n          \r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder=\"Ví dụ: Các deal chưa chốt trong tháng 7\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && handleApply()}\r\n            disabled={isProcessing}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={handleApply}\r\n                    disabled={!query.trim() || isProcessing}\r\n                    color=\"primary\"\r\n                  >\r\n                    <SendIcon />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Box>\r\n\r\n        <Box sx={{ mt: 2, mb: 2 }}>\r\n          <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n            Gợi ý tìm kiếm:\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n            {exampleQueries.map((example, index) => (\r\n              <Chip\r\n                key={index}\r\n                label={example}\r\n                onClick={() => handleExampleClick(example)}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                sx={{ cursor: 'pointer' }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n\r\n        {currentFilter && (\r\n          <Paper \r\n            variant=\"outlined\" \r\n            sx={{ \r\n              mt: 'auto', \r\n              p: 2, \r\n              bgcolor: 'action.hover',\r\n              borderRadius: 1\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Bộ lọc hiện tại:\r\n            </Typography>\r\n            <Typography variant=\"body1\">\r\n              {currentFilter}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n      </DialogContent>\r\n      \r\n      <DialogActions sx={{ p: 2, borderTop: '1px solid', borderColor: 'divider' }}>\r\n        <Button onClick={onClose} color=\"inherit\">\r\n          Hủy\r\n        </Button>\r\n        <Button \r\n          onClick={handleApply} \r\n          variant=\"contained\" \r\n          disabled={!query.trim() || isProcessing}\r\n          startIcon={<SendIcon />}\r\n        >\r\n          {isProcessing ? 'Đang xử lý...' : 'Áp dụng'}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SmartFilter;\r\n","import React from 'react';\r\nimport { Box, Tooltip } from '@mui/material';\r\nimport { DealStage, STAGE_COLORS } from './DealTypes';\r\n\r\ninterface DealStageChipProps {\r\n  stage: DealStage;\r\n  size?: 'small' | 'medium' | 'large';\r\n  showTooltip?: boolean;\r\n}\r\n\r\n/**\r\n * Component hiển thị giai đoạn deal với màu sắc tương ứng\r\n */\r\nconst DealStageChip: React.FC<DealStageChipProps> = ({ \r\n  stage, \r\n  size = 'medium',\r\n  showTooltip = false\r\n }) => {\r\n  // Xác định kích thước padding dựa trên size\r\n  const getPadding = () => {\r\n    switch(size) {\r\n      case 'small': return '2px 6px';\r\n      case 'large': return '6px 12px';\r\n      default: return '4px 8px';\r\n    }\r\n  };\r\n\r\n  // Xác định font size dựa trên size\r\n  const getFontSize = () => {\r\n    switch(size) {\r\n      case 'small': return '0.75rem';\r\n      case 'large': return '0.95rem';\r\n      default: return '0.875rem';\r\n    }\r\n  };\r\n\r\n  // Lấy màu sắc tương ứng với giai đoạn\r\n  const stageColor = STAGE_COLORS[stage];\r\n  \r\n  // Tạo màu nền nhạt hơn dựa trên màu chính\r\n  const getBgColor = () => {\r\n    // Chuyển hex sang rgba với alpha = 0.15\r\n    const hexToRgba = (hex: string, alpha: number) => {\r\n      const r = parseInt(hex.slice(1, 3), 16);\r\n      const g = parseInt(hex.slice(3, 5), 16);\r\n      const b = parseInt(hex.slice(5, 7), 16);\r\n      return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n    };\r\n    \r\n    return hexToRgba(stageColor, 0.15);\r\n  };\r\n\r\n  const chip = (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{\r\n        display: 'inline-block',\r\n        padding: getPadding(),\r\n        borderRadius: '16px',\r\n        backgroundColor: getBgColor(),\r\n        color: stageColor,\r\n        fontSize: getFontSize(),\r\n        fontWeight: 500,\r\n        lineHeight: 1.5,\r\n        textAlign: 'center',\r\n        whiteSpace: 'nowrap',\r\n        verticalAlign: 'baseline',\r\n        transition: 'all 0.2s ease-in-out',\r\n      }}\r\n    >\r\n      {stage}\r\n    </Box>\r\n  );\r\n\r\n  // Nếu có showTooltip, bao bọc bằng Tooltip\r\n  return showTooltip ? (\r\n    <Tooltip title={`Giai đoạn: ${stage}`} arrow>\r\n      {chip}\r\n    </Tooltip>\r\n  ) : chip;\r\n};\r\n\r\nexport default DealStageChip;\r\n","import React from 'react';\r\nimport { Badge, Tooltip, Box } from '@mui/material';\r\nimport { Notifications as NotificationsIcon } from '@mui/icons-material';\r\n\r\ninterface DealReminderBadgeProps {\r\n  deadline: string; // ISO date string\r\n  reminderNote?: string;\r\n  size?: 'small' | 'medium' | 'large';\r\n}\r\n\r\n/**\r\n * Component hiển thị biểu tượng nhắc việc cho các deal sắp đến hạn chốt\r\n * Hiển thị biểu tượng chuông đỏ nếu ngày hôm nay >= (Hạn chốt - 3 ngày)\r\n */\r\nconst DealReminderBadge: React.FC<DealReminderBadgeProps> = ({ \r\n  deadline,\r\n  reminderNote,\r\n  size = 'medium'\r\n }) => {\r\n  // Kiểm tra xem deal có sắp đến hạn không (còn 3 ngày nữa)\r\n  const isDeadlineApproaching = () => {\r\n    const deadlineDate = new Date(deadline);\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    const diffTime = deadlineDate.getTime() - today.getTime();\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    return diffDays >= 0 && diffDays <= 3;\r\n  };\r\n\r\n  // Tính số ngày còn lại đến hạn chốt\r\n  const getDaysRemaining = () => {\r\n    const deadlineDate = new Date(deadline);\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    const diffTime = deadlineDate.getTime() - today.getTime();\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    if (diffDays < 0) {\r\n      return 'Quá hạn';\r\n    } else if (diffDays === 0) {\r\n      return 'Đến hạn hôm nay';\r\n    } else {\r\n      return `Sắp đến hạn trong ${diffDays} ngày nữa`;\r\n    }\r\n  };\r\n\r\n  // Xác định kích thước icon dựa trên size\r\n  const getIconSize = () => {\r\n    switch(size) {\r\n      case 'small': return 'small';\r\n      case 'large': return 'large';\r\n      default: return 'medium';\r\n    }\r\n  };\r\n\r\n  // Nếu không sắp đến hạn, không hiển thị gì\r\n  if (!isDeadlineApproaching()) {\r\n    return null;\r\n  }\r\n\r\n  // Tạo tooltip message\r\n  const tooltipMessage = reminderNote \r\n    ? `${getDaysRemaining()}. ${reminderNote}` \r\n    : getDaysRemaining();\r\n\r\n  return (\r\n    <Tooltip title={tooltipMessage} arrow>\r\n      <Box component=\"span\" sx={{ ml: 1 }}>\r\n        <Badge color=\"error\" variant=\"dot\">\r\n          <NotificationsIcon \r\n            fontSize={getIconSize()} \r\n            color=\"error\" \r\n            sx={{ animation: 'pulse 1.5s infinite' }}\r\n          />\r\n        </Badge>\r\n      </Box>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default DealReminderBadge;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText\r\n} from '@mui/material';\r\nimport {\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  MoreVert as MoreVertIcon,\r\n  Visibility as VisibilityIcon,\r\n  ContentCopy as ContentCopyIcon\r\n} from '@mui/icons-material';\r\nimport { format } from 'date-fns';\r\nimport { vi } from 'date-fns/locale';\r\nimport { Deal } from './DealTypes';\r\nimport DealStageChip from './DealStageChip';\r\nimport DealReminderBadge from './DealReminderBadge';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface DealListProps {\r\n  deals: Deal[];\r\n  onEdit: (deal: Deal) => void;\r\n  onDelete: (dealId: number) => void;\r\n  onView: (deal: Deal) => void;\r\n  onDuplicate: (deal: Deal) => void;\r\n}\r\n\r\n/**\r\n * Component hiển thị danh sách deal dạng bảng\r\n */\r\nconst DealList: React.FC<DealListProps> = ({ deals, onEdit, onDelete, onView, onDuplicate }) => {\r\n  const { t } = useTranslation();\r\n  // State cho phân trang\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  // State cho menu thao tác\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [selectedDeal, setSelectedDeal] = useState<Deal | null>(null);\r\n\r\n  // Xử lý thay đổi trang\r\n  const handleChangePage = (_event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  // Xử lý thay đổi số hàng mỗi trang\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // Xử lý mở menu thao tác\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLElement>, deal: Deal) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedDeal(deal);\r\n  };\r\n\r\n  // Xử lý đóng menu thao tác\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n    setSelectedDeal(null);\r\n  };\r\n\r\n  // Định dạng số tiền\r\n  const formatCurrency = (value: number) => {\r\n    return new Intl.NumberFormat('vi-VN', {\r\n      style: 'currency',\r\n      currency: 'VND',\r\n      minimumFractionDigits: 0\r\n    }).format(value);\r\n  };\r\n\r\n  // Định dạng ngày tháng\r\n  const formatDate = (dateString: string) => {\r\n    try {\r\n      return format(new Date(dateString), 'dd/MM/yyyy', { locale: vi });\r\n    } catch (error) {\r\n      return t('common.unknown');\r\n    }\r\n  };\r\n\r\n  // Lấy deals hiển thị trên trang hiện tại\r\n  const visibleDeals = deals.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden', mb: 3 }}>\r\n      <TableContainer sx={{ maxHeight: 600 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{t('pages.deals.columns.dealName')}</TableCell>\r\n              <TableCell>{t('pages.deals.columns.customer')}</TableCell>\r\n              <TableCell>{t('pages.deals.columns.owner')}</TableCell>\r\n              <TableCell>{t('pages.deals.columns.amount')}</TableCell>\r\n              <TableCell>{t('pages.deals.columns.stage')}</TableCell>\r\n              <TableCell>{t('pages.deals.columns.createdAt')}</TableCell>\r\n              <TableCell>{t('pages.deals.columns.deadline')}</TableCell>\r\n              <TableCell align=\"center\">{t('pages.deals.columns.actions')}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {visibleDeals.length > 0 ? (\r\n              visibleDeals.map((deal) => (\r\n                <TableRow hover key={deal.id}>\r\n                  <TableCell>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                        {deal.name}\r\n                      </Typography>\r\n                      {deal.reminderDate && (\r\n                        <DealReminderBadge \r\n                          deadline={deal.reminderDate} \r\n                          reminderNote={deal.reminderNote} \r\n                          size=\"small\"\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                    {deal.notes && (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" noWrap sx={{ maxWidth: 250 }}>\r\n                        {deal.notes}\r\n                      </Typography>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>{deal.customer}</TableCell>\r\n                  <TableCell>{deal.owner || t('common.unknown')}</TableCell>\r\n                  <TableCell>{formatCurrency(deal.value)}</TableCell>\r\n                  <TableCell>\r\n                    <DealStageChip stage={deal.stage} size=\"small\" showTooltip />\r\n                  </TableCell>\r\n                  <TableCell>{formatDate(deal.createdAt)}</TableCell>\r\n                  <TableCell>\r\n                    {deal.deadline ? formatDate(deal.deadline) : '-'}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Box sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                      <Tooltip title={t('common.edit')}>\r\n                        <IconButton size=\"small\" onClick={() => onEdit(deal)}>\r\n                          <EditIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title={t('common.viewDetails')}>\r\n                        <IconButton size=\"small\" onClick={() => onView(deal)}>\r\n                          <VisibilityIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <IconButton size=\"small\" onClick={(e) => handleOpenMenu(e, deal)}>\r\n                        <MoreVertIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan={7} align=\"center\">\r\n                  <Typography variant=\"body1\" sx={{ py: 2 }}>\r\n                    {t('pages.deals.empty')}\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={deals.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n        labelRowsPerPage={t('pages.deals.pagination.rowsPerPage')}\r\n        labelDisplayedRows={({ from, to, count }) =>\r\n          t('pages.deals.pagination.displayedRows', { from, to, count })\r\n        }\r\n      />\r\n\r\n      {/* Menu thao tác */}\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <MenuItem onClick={() => {\r\n          if (selectedDeal) onDuplicate(selectedDeal);\r\n          handleCloseMenu();\r\n        }}>\r\n          <ListItemIcon>\r\n            <ContentCopyIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText>{t('pages.deals.ui.contextMenu.duplicate')}</ListItemText>\r\n        </MenuItem>\r\n        <MenuItem onClick={() => {\r\n          if (selectedDeal) onDelete(selectedDeal.id);\r\n          handleCloseMenu();\r\n        }}>\r\n          <ListItemIcon>\r\n            <DeleteIcon fontSize=\"small\" color=\"error\" />\r\n          </ListItemIcon>\r\n          <ListItemText sx={{ color: 'error.main' }}>{t('pages.deals.ui.contextMenu.delete')}</ListItemText>\r\n        </MenuItem>\r\n      </Menu>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DealList;\r\n","// Component chứa các bộ lọc tìm kiếm\r\n\r\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  SelectChangeEvent,\r\n  MenuItem,\r\n  Slider,\r\n  IconButton,\r\n  Collapse,\r\n  Paper,\r\n  InputAdornment\r\n} from '@mui/material';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\n// Vietnamese locale is automatically handled by AdapterDateFns\r\n// Localization is handled by AdapterDateFns\r\nimport {\r\n  Search as SearchIcon,\r\n  FilterList as FilterListIcon,\r\n  Clear as ClearIcon\r\n} from '@mui/icons-material';\r\nimport { DealFilters as DealFiltersType, DealStage } from './DealTypes';\r\n\r\ninterface DealFiltersProps {\r\n  onFilterChange: (filters: DealFiltersType) => void;\r\n  initialFilters?: Partial<DealFiltersType>;\r\n}\r\n\r\n/**\r\n * Component hiển thị bộ lọc tìm kiếm deal\r\n */\r\nconst DealFilters: React.FC<DealFiltersProps> = ({ onFilterChange, initialFilters }) => {\r\n  // Sử dụng useMemo để tránh tạo lại object defaultFilters mỗi lần render\r\n  const defaultFilters = useMemo<DealFiltersType>(() => ({\r\n    searchTerm: '',\r\n    stage: 'Tất cả',\r\n    owner: 'Tất cả',\r\n    dateRange: null,\r\n    hasReminder: null,\r\n    valueRange: {\r\n      min: 0,\r\n      max: 1000000000\r\n    }\r\n  }), []);\r\n\r\n  // State lưu trữ các bộ lọc\r\n  const [filters, setFilters] = useState<DealFiltersType>(() => ({\r\n    ...defaultFilters,\r\n    ...initialFilters,\r\n    dateRange: initialFilters?.dateRange ?? null,\r\n    valueRange: {\r\n      min: initialFilters?.valueRange?.min ?? defaultFilters.valueRange.min,\r\n      max: initialFilters?.valueRange?.max ?? defaultFilters.valueRange.max\r\n    },\r\n    hasReminder: initialFilters?.hasReminder ?? null\r\n  }));\r\n  \r\n  // Sử dụng ref để lưu trữ timer cho debounce\r\n  const debounceTimer = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\r\n  \r\n  // Hàm debounce để tránh gọi callback quá nhiều lần\r\n  const debounce = useCallback((callback: () => void, delay: number) => {\r\n    if (debounceTimer.current) {\r\n      clearTimeout(debounceTimer.current);\r\n    }\r\n    debounceTimer.current = setTimeout(callback, delay);\r\n  }, []);\r\n  \r\n  // State hiển thị/ẩn bộ lọc nâng cao\r\n  const [showAdvancedFilters, setShowAdvancedFilters] = useState(false);\r\n  \r\n  // State lưu trữ giá trị slider\r\n  const [valueRange, setValueRange] = useState<number[]>([\r\n    filters.valueRange.min,\r\n    filters.valueRange.max\r\n  ]);\r\n\r\n  // Cập nhật filters khi initialFilters thay đổi\r\n  useEffect(() => {\r\n    if (initialFilters) {\r\n      const newFilters: DealFiltersType = {\r\n        ...defaultFilters,\r\n        ...initialFilters,\r\n        dateRange: initialFilters.dateRange ?? null,\r\n        valueRange: {\r\n          min: initialFilters.valueRange?.min ?? defaultFilters.valueRange.min,\r\n          max: initialFilters.valueRange?.max ?? defaultFilters.valueRange.max\r\n        },\r\n        hasReminder: initialFilters.hasReminder ?? null\r\n      };\r\n      setFilters(newFilters);\r\n      setValueRange([\r\n        newFilters.valueRange.min,\r\n        newFilters.valueRange.max\r\n      ]);\r\n    }\r\n  }, [initialFilters, defaultFilters]);\r\n\r\n  // Xử lý thay đổi các trường input\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    const newFilters = {\r\n      ...filters,\r\n      [name]: value\r\n    };\r\n    \r\n    setFilters(newFilters);\r\n    \r\n    // Tự động áp dụng bộ lọc với debounce 500ms\r\n    debounce(() => {\r\n      onFilterChange(newFilters);\r\n    }, 500);\r\n  };\r\n\r\n  // Xử lý thay đổi trường select\r\n  const handleSelectChange = (e: SelectChangeEvent<string>) => {\r\n    const { name, value } = e.target;\r\n    const newFilters = {\r\n      ...filters,\r\n      [name]: value\r\n    };\r\n    \r\n    setFilters(newFilters);\r\n    \r\n    // Tự động áp dụng bộ lọc với debounce 300ms\r\n    debounce(() => {\r\n      onFilterChange(newFilters);\r\n    }, 300);\r\n  };\r\n\r\n  // Xử lý thay đổi ngày tháng\r\n  const handleDateChange = (field: 'start' | 'end', date: Date | null) => {\r\n    const currentDateRange = filters.dateRange || { start: null, end: null };\r\n    \r\n    // Nếu date là null và field là 'end' và start cũng là null, không làm gì cả\r\n    if (date === null && field === 'end' && currentDateRange.start === null) {\r\n      return;\r\n    }\r\n    \r\n    const newDateRange = {\r\n      ...currentDateRange,\r\n      [field]: date\r\n    };\r\n    \r\n    // Nếu cả hai giá trị start và end đều null, đặt dateRange thành null\r\n    const updatedDateRange = (newDateRange.start === null && newDateRange.end === null) \r\n      ? null \r\n      : newDateRange;\r\n    \r\n    const newFilters = {\r\n      ...filters,\r\n      dateRange: updatedDateRange\r\n    };\r\n    \r\n    setFilters(newFilters);\r\n    \r\n    // Tự động áp dụng bộ lọc với debounce 300ms\r\n    debounce(() => {\r\n      onFilterChange(newFilters);\r\n    }, 300);\r\n  };\r\n\r\n  // Xử lý thay đổi giá trị slider\r\n  const handleValueRangeChange = (_event: Event, newValue: number | number[]) => {\r\n    const values = newValue as number[];\r\n    setValueRange(values);\r\n    \r\n    // Cập nhật filters ngay lập tức để giữ đồng bộ\r\n    const newFilters = {\r\n      ...filters,\r\n      valueRange: {\r\n        min: values[0],\r\n        max: values[1]\r\n      }\r\n    };\r\n    \r\n    setFilters(newFilters);\r\n    \r\n    // Tự động áp dụng bộ lọc với debounce 500ms\r\n    debounce(() => {\r\n      onFilterChange(newFilters);\r\n    }, 500);\r\n  };\r\n\r\n  // Xử lý khi thả slider\r\n  const handleValueRangeChangeCommitted = () => {\r\n    // Đảm bảo gọi lại lần cuối cùng với giá trị mới nhất\r\n    debounce(() => {\r\n      onFilterChange({\r\n        ...filters,\r\n        valueRange: {\r\n          min: valueRange[0],\r\n          max: valueRange[1]\r\n        }\r\n      });\r\n    }, 0);\r\n  };\r\n\r\n  // Xử lý khi nhấn nút tìm kiếm (đã không còn sử dụng nhưng vẫn giữ lại để tránh lỗi)\r\n  const handleSearch = () => {\r\n    onFilterChange({\r\n      ...filters,\r\n      valueRange: {\r\n        min: valueRange[0],\r\n        max: valueRange[1]\r\n      }\r\n    });\r\n  };\r\n\r\n  // Xử lý khi nhấn nút xóa bộ lọc\r\n  const handleClearFilters = () => {\r\n    const resetFilters = {\r\n      ...defaultFilters,\r\n      dateRange: null,\r\n      hasReminder: null\r\n    };\r\n    \r\n    setFilters(resetFilters);\r\n    setValueRange([\r\n      defaultFilters.valueRange.min, \r\n      defaultFilters.valueRange.max\r\n    ]);\r\n    \r\n    // Xóa timer debounce hiện tại\r\n    if (debounceTimer.current) {\r\n      clearTimeout(debounceTimer.current);\r\n    }\r\n    \r\n    // Áp dụng bộ lọc mới ngay lập tức\r\n    onFilterChange(resetFilters);\r\n  };\r\n  \r\n  // Cleanup timer khi unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (debounceTimer.current) {\r\n        clearTimeout(debounceTimer.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Định dạng giá trị tiền\r\n  const formatCurrency = (value: number) => {\r\n    return new Intl.NumberFormat('vi-VN', {\r\n      style: 'currency',\r\n      currency: 'VND',\r\n      minimumFractionDigits: 0\r\n    }).format(value);\r\n  };\r\n\r\n  // Danh sách các giai đoạn deal\r\n  const stageOptions = [\r\n    { value: 'Tất cả', label: 'Tất cả giai đoạn' },\r\n    { value: DealStage.INITIAL_CONTACT, label: 'Liên hệ ban đầu' },\r\n    { value: DealStage.REQUIREMENT_RECORDED, label: 'Đã ghi nhận yêu cầu' },\r\n    { value: DealStage.QUOTE_SENT, label: 'Đã gửi báo giá' },\r\n    { value: DealStage.CONTRACT_SENT, label: 'Đã gửi hợp đồng' },\r\n    { value: DealStage.CLOSED_WON, label: 'Đã chốt' },\r\n    { value: DealStage.CLOSED_LOST, label: 'Đã hủy' }\r\n  ];\r\n\r\n  return (\r\n    <Paper sx={{ p: 2, mb: 3 }}>\r\n      <Box sx={{ mb: 2, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n        <Typography variant=\"h6\" component=\"div\">\r\n          Tìm kiếm Deal\r\n        </Typography>\r\n        <Button\r\n          startIcon={<FilterListIcon />}\r\n          onClick={() => setShowAdvancedFilters(!showAdvancedFilters)}\r\n          color=\"primary\"\r\n        >\r\n          {showAdvancedFilters ? 'Ẩn bộ lọc nâng cao' : 'Bộ lọc nâng cao'}\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Bộ lọc cơ bản */}\r\n      <Box sx={{\r\n        display: 'grid',\r\n        gridTemplateColumns: { xs: '1fr', md: 'repeat(2, 1fr)' },\r\n        gap: 2,\r\n        mb: 2\r\n      }}>\r\n        <Box>\r\n          <TextField\r\n            fullWidth\r\n            name=\"searchTerm\"\r\n            label=\"Tìm kiếm theo tên, mô tả...\"\r\n            value={filters.searchTerm}\r\n            onChange={handleInputChange}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n              endAdornment: filters.searchTerm ? (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    onClick={() => setFilters(prev => ({ ...prev, searchTerm: '' }))}\r\n                  >\r\n                    <ClearIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ) : null\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"stage-select-label\">Giai đoạn</InputLabel>\r\n            <Select\r\n              labelId=\"stage-select-label\"\r\n              name=\"stage\"\r\n              value={filters.stage}\r\n              label=\"Giai đoạn\"\r\n              onChange={handleSelectChange}\r\n            >\r\n              {stageOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Box sx={{ \r\n          display: 'flex', \r\n          alignItems: 'center',\r\n          gridColumn: { xs: '1 / -1', md: 'auto' }\r\n        }}>\r\n          {/* Đã xóa nút Tìm kiếm */}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Bộ lọc nâng cao */}\r\n      <Collapse in={showAdvancedFilters}>\r\n        <Box sx={{ mt: 3 }}>\r\n          <Box sx={{\r\n            display: 'grid',\r\n            gridTemplateColumns: { xs: '1fr', md: 'repeat(2, 1fr)' },\r\n            gap: 2\r\n          }}>\r\n            <Box sx={{ gridColumn: '1 / -1' }}>\r\n              <Typography gutterBottom>Giá trị Deal</Typography>\r\n              <Box sx={{ px: 2 }}>\r\n                <Slider\r\n                  value={valueRange}\r\n                  onChange={handleValueRangeChange}\r\n                  onChangeCommitted={handleValueRangeChangeCommitted}\r\n                  valueLabelDisplay=\"auto\"\r\n                  valueLabelFormat={(value) => formatCurrency(value)}\r\n                  min={0}\r\n                  max={1000000000}\r\n                  step={10000000}\r\n                />\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>\r\n                  <Typography variant=\"body2\">{formatCurrency(valueRange[0])}</Typography>\r\n                  <Typography variant=\"body2\">{formatCurrency(valueRange[1])}</Typography>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n            <Box>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DatePicker\r\n                  label=\"Từ ngày\"\r\n                  value={filters.dateRange?.start || null}\r\n                  onChange={(date) => handleDateChange('start', date)}\r\n                  slotProps={{ textField: { fullWidth: true } }}\r\n                />\r\n              </LocalizationProvider>\r\n            </Box>\r\n            <Box>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DatePicker\r\n                  label=\"Đến ngày\"\r\n                  value={filters.dateRange?.end || null}\r\n                  onChange={(date) => handleDateChange('end', date)}\r\n                  slotProps={{ textField: { fullWidth: true } }}\r\n                  minDate={filters.dateRange?.start || undefined}\r\n                  disabled={!filters.dateRange?.start}\r\n                />\r\n              </LocalizationProvider>\r\n            </Box>\r\n            <Box sx={{\r\n              gridColumn: '1 / -1',\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              mt: 2\r\n            }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={handleClearFilters}\r\n                startIcon={<ClearIcon />}\r\n                sx={{ mr: 1 }}\r\n              >\r\n                Xóa bộ lọc\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleSearch}\r\n                startIcon={<SearchIcon />}\r\n              >\r\n                Áp dụng\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Collapse>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DealFilters;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport {\r\n  Dialog, DialogActions, DialogContent, DialogTitle, Button, TextField, \r\n  FormControl, InputLabel, Select, MenuItem, Divider, Typography, \r\n  Box, Switch, FormControlLabel, InputAdornment, FormHelperText\r\n} from '@mui/material';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { Deal, DealFormData, DealStage } from './DealTypes';\r\n\r\ninterface DealFormProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (dealData: DealFormData) => void;\r\n  initialData?: Deal;\r\n  title?: string;\r\n}\r\n\r\n/**\r\n * Component form thêm/sửa deal\r\n */\r\nconst DealForm: React.FC<DealFormProps> = ({\r\n  open,\r\n  onClose,\r\n  onSubmit,\r\n  initialData,\r\n  title = 'Thêm Deal mới'\r\n}) => {\r\n  // Khởi tạo giá trị mặc định cho form sử dụng useMemo để tránh tạo mới mỗi lần render\r\n  const defaultFormData = useMemo<DealFormData>(() => ({\r\n    name: '',\r\n    customer: '',\r\n    value: 0,\r\n    stage: DealStage.INITIAL_CONTACT,\r\n    notes: '',\r\n    deadline: '',\r\n    owner: '',\r\n    hasReminder: false,\r\n    reminderDate: undefined,\r\n    reminderNote: ''\r\n  }), []);\r\n\r\n  // State lưu trữ dữ liệu form\r\n  const [formData, setFormData] = useState<DealFormData>(defaultFormData);\r\n  \r\n  // State lưu trữ lỗi validation\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n\r\n  // Cập nhật form data khi initialData thay đổi\r\n  useEffect(() => {\r\n    if (initialData) {\r\n      setFormData({\r\n        name: initialData.name,\r\n        customer: initialData.customer,\r\n        value: initialData.value,\r\n        stage: initialData.stage,\r\n        notes: initialData.notes || '',\r\n        deadline: initialData.deadline || '',\r\n        owner: initialData.owner || '',\r\n        hasReminder: !!initialData.reminderDate,\r\n        reminderDate: initialData.reminderDate,\r\n        reminderNote: initialData.reminderNote || ''\r\n      });\r\n    } else {\r\n      setFormData(defaultFormData);\r\n    }\r\n    setErrors({});\r\n  }, [initialData, defaultFormData]);\r\n\r\n  // Xử lý thay đổi các trường input\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    \r\n    // Xóa lỗi khi người dùng sửa trường\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Xử lý thay đổi select\r\n  const handleSelectChange = (event: { target: { name: string; value: DealStage } }) => {\r\n    const { name, value } = event.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Xử lý thay đổi ngày\r\n  const handleDateChange = (name: 'deadline' | 'reminderDate', date: Date | null) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: date?.toISOString() || ''\r\n    }));\r\n    \r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Xử lý bật/tắt nhắc việc\r\n  const handleReminderToggle = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const checked = e.target.checked;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      hasReminder: checked,\r\n      // Nếu tắt nhắc việc, xóa dữ liệu nhắc việc\r\n      reminderDate: checked ? prev.reminderDate : undefined,\r\n      reminderNote: checked ? prev.reminderNote : ''\r\n    }));\r\n  };\r\n\r\n  // Kiểm tra dữ liệu hợp lệ\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n    \r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Vui lòng nhập tên deal';\r\n    }\r\n    \r\n    if (!formData.customer.trim()) {\r\n      newErrors.customer = 'Vui lòng nhập tên khách hàng';\r\n    }\r\n    \r\n    if (formData.value <= 0) {\r\n      newErrors.value = 'Giá trị deal phải lớn hơn 0';\r\n    }\r\n    \r\n    // Kiểm tra ngày nhắc việc nếu bật nhắc việc\r\n    if (formData.hasReminder && !formData.reminderDate) {\r\n      newErrors.reminderDate = 'Vui lòng chọn ngày nhắc việc';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  // Xử lý gửi form\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (validateForm()) {\r\n      onSubmit(formData);\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  // Danh sách các giai đoạn deal\r\n  const stageOptions = [\r\n    { value: DealStage.INITIAL_CONTACT, label: 'Liên hệ ban đầu' },\r\n    { value: DealStage.REQUIREMENT_RECORDED, label: 'Đã ghi nhận yêu cầu' },\r\n    { value: DealStage.QUOTE_SENT, label: 'Đã gửi báo giá' },\r\n    { value: DealStage.CONTRACT_SENT, label: 'Gửi hợp đồng' },\r\n    { value: DealStage.CLOSED_WON, label: 'Đã chốt' },\r\n    { value: DealStage.CLOSED_LOST, label: 'Đã huỷ' }\r\n  ];\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\r\n      <DialogTitle>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Typography variant=\"h6\">{title}</Typography>\r\n        </Box>\r\n      </DialogTitle>\r\n      \r\n      <Divider />\r\n      \r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit}>\r\n          <Box sx={{\r\n            display: 'grid',\r\n            gridTemplateColumns: { xs: '1fr', md: 'repeat(2, 1fr)' },\r\n            gap: 2,\r\n            py: 2\r\n          }}>\r\n            {/* Thông tin cơ bản */}\r\n            <Box sx={{ gridColumn: '1 / -1' }}>\r\n              <Typography variant=\"subtitle1\" fontWeight=\"bold\" gutterBottom>\r\n                Thông tin cơ bản\r\n              </Typography>\r\n            </Box>\r\n            \r\n            <Box>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Tên Deal *\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                error={!!errors.name}\r\n                helperText={errors.name}\r\n              />\r\n            </Box>\r\n            \r\n            <Box>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Khách hàng *\"\r\n                name=\"customer\"\r\n                value={formData.customer}\r\n                onChange={handleInputChange}\r\n                error={!!errors.customer}\r\n                helperText={errors.customer}\r\n              />\r\n            </Box>\r\n            \r\n            <Box>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Giá trị Deal *\"\r\n                name=\"value\"\r\n                type=\"number\"\r\n                value={formData.value}\r\n                onChange={handleInputChange}\r\n                InputProps={{\r\n                  startAdornment: <InputAdornment position=\"start\">đ</InputAdornment>,\r\n                }}\r\n                error={!!errors.value}\r\n                helperText={errors.value}\r\n              />\r\n            </Box>\r\n            \r\n            <Box>\r\n              <FormControl fullWidth error={!!errors.stage}>\r\n                <InputLabel id=\"stage-select-label\">Giai đoạn *</InputLabel>\r\n                <Select\r\n                  labelId=\"stage-select-label\"\r\n                  name=\"stage\"\r\n                  value={formData.stage}\r\n                  label=\"Giai đoạn *\"\r\n                  onChange={handleSelectChange}\r\n                >\r\n                  {stageOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n                {errors.stage && <FormHelperText>{errors.stage}</FormHelperText>}\r\n              </FormControl>\r\n            </Box>\r\n            \r\n            <Box>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Chủ sở hữu *\"\r\n                name=\"owner\"\r\n                value={formData.owner}\r\n                onChange={handleInputChange}\r\n                error={!!errors.owner}\r\n                helperText={errors.owner}\r\n              />\r\n            </Box>\r\n            \r\n            <Box sx={{ gridColumn: '1 / -1' }}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Mô tả\"\r\n                name=\"notes\"\r\n                value={formData.notes}\r\n                onChange={handleInputChange}\r\n                multiline\r\n                rows={3}\r\n              />\r\n            </Box>\r\n            \r\n            <Box>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DatePicker\r\n                  label=\"Hạn chốt\"\r\n                  value={formData.deadline ? new Date(formData.deadline) : null}\r\n                  onChange={(date) => handleDateChange('deadline', date)}\r\n                  slotProps={{ textField: { fullWidth: true } }}\r\n                />\r\n              </LocalizationProvider>\r\n            </Box>\r\n            \r\n            {/* Phần nhắc việc */}\r\n            <Box sx={{ gridColumn: '1 / -1', mt: 2 }}>\r\n              <Divider />\r\n              <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\r\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                  Nhắc việc\r\n                </Typography>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={formData.hasReminder}\r\n                      onChange={handleReminderToggle}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label={formData.hasReminder ? 'Đã bật' : 'Tắt'}\r\n                  sx={{ ml: 2 }}\r\n                />\r\n              </Box>\r\n            </Box>\r\n            \r\n            {formData.hasReminder && (\r\n              <>\r\n                <Box>\r\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                    <DatePicker\r\n                      label=\"Ngày nhắc việc *\"\r\n                      value={formData.reminderDate ? new Date(formData.reminderDate) : null}\r\n                      onChange={(date) => handleDateChange('reminderDate', date)}\r\n                      slotProps={{\r\n                        textField: {\r\n                          fullWidth: true,\r\n                          error: !!errors.reminderDate,\r\n                          helperText: errors.reminderDate\r\n                        }\r\n                      }}\r\n                      minDate={new Date()}\r\n                    />\r\n                  </LocalizationProvider>\r\n                </Box>\r\n                \r\n                <Box sx={{ gridColumn: '1 / -1' }}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Ghi chú nhắc việc\"\r\n                    name=\"reminderNote\"\r\n                    value={formData.reminderNote}\r\n                    onChange={handleInputChange}\r\n                    multiline\r\n                    rows={3}\r\n                  />\r\n                </Box>\r\n              </>\r\n            )}\r\n          </Box>\r\n        </form>\r\n      </DialogContent>\r\n      \r\n      <Divider />\r\n      \r\n      <DialogActions sx={{ px: 3, py: 2 }}>\r\n        <Button onClick={onClose} variant=\"outlined\" color=\"inherit\">\r\n          Hủy\r\n        </Button>\r\n        <Button type=\"submit\" form=\"deal-form\" variant=\"contained\" color=\"primary\">\r\n          {initialData ? 'Cập nhật' : 'Thêm mới'}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DealForm;\r\n","import React from 'react';\r\nimport { Card, CardContent, Typography, Box } from '@mui/material';\r\nimport { \r\n  AttachMoney as AttachMoneyIcon,\r\n  Timeline as TimelineIcon,\r\n  Assignment as AssignmentIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  CalendarToday as CalendarTodayIcon,\r\n  AccessTime as AccessTimeIcon\r\n} from '@mui/icons-material';\r\nimport { Deal, DealStage, STAGE_WEIGHTS } from './DealTypes';\r\n\r\ninterface DealStatsProps {\r\n  deals: Deal[];\r\n}\r\n\r\n/**\r\n * Component hiển thị các chỉ số tổng quan của deal\r\n */\r\nconst DealStats: React.FC<DealStatsProps> = ({ deals }) => {\r\n  // Tính toán các chỉ số tổng quan\r\n  const calculateStats = () => {\r\n    const today = new Date();\r\n    const currentMonth = today.getMonth();\r\n    const currentYear = today.getFullYear();\r\n    \r\n    // Giá trị ban đầu\r\n    const stats = {\r\n      totalDealAmount: 0,\r\n      weightedDealAmount: 0,\r\n      openDealAmount: 0,\r\n      closedDealAmount: 0,\r\n      newDealsThisMonth: 0,\r\n      totalDealAgeInDays: 0,\r\n      dealCount: 0\r\n    };\r\n    \r\n    deals.forEach(deal => {\r\n      // Tổng giá trị deal\r\n      stats.totalDealAmount += deal.value;\r\n      \r\n      // Tổng giá trị deal có trọng số\r\n      const stage = deal.stage as DealStage;\r\n      stats.weightedDealAmount += deal.value * STAGE_WEIGHTS[stage];\r\n      \r\n      // Giá trị deal đang mở và đã chốt\r\n      if (stage === DealStage.CLOSED_WON) {\r\n        stats.closedDealAmount += deal.value;\r\n      } else if (stage !== DealStage.CLOSED_LOST) {\r\n        stats.openDealAmount += deal.value;\r\n      }\r\n      \r\n      // Số deal mới trong tháng\r\n      const createdDate = new Date(deal.createdAt);\r\n      if (createdDate.getMonth() === currentMonth && createdDate.getFullYear() === currentYear) {\r\n        stats.newDealsThisMonth++;\r\n      }\r\n      \r\n      // Tính tuổi trung bình deal\r\n      const createdTime = new Date(deal.createdAt).getTime();\r\n      const currentTime = today.getTime();\r\n      const ageInDays = Math.floor((currentTime - createdTime) / (1000 * 60 * 60 * 24));\r\n      stats.totalDealAgeInDays += ageInDays;\r\n      stats.dealCount++;\r\n    });\r\n    \r\n    // Tính tuổi trung bình deal\r\n    const averageDealAge = stats.dealCount > 0 ? Math.round(stats.totalDealAgeInDays / stats.dealCount) : 0;\r\n    \r\n    return {\r\n      totalDealAmount: stats.totalDealAmount,\r\n      weightedDealAmount: stats.weightedDealAmount,\r\n      openDealAmount: stats.openDealAmount,\r\n      closedDealAmount: stats.closedDealAmount,\r\n      newDealsThisMonth: stats.newDealsThisMonth,\r\n      averageDealAge\r\n    };\r\n  };\r\n  \r\n  const stats = calculateStats();\r\n  \r\n  // Định dạng số tiền\r\n  const formatCurrency = (value: number) => {\r\n    return new Intl.NumberFormat('vi-VN', {\r\n      style: 'currency',\r\n      currency: 'VND',\r\n      minimumFractionDigits: 0\r\n    }).format(value);\r\n  };\r\n  \r\n  // Danh sách các chỉ số hiển thị\r\n  const statItems = [\r\n    {\r\n      title: 'Tổng giá trị Deal',\r\n      value: formatCurrency(stats.totalDealAmount),\r\n      icon: <AttachMoneyIcon fontSize=\"large\" sx={{ color: '#1976d2' }} />\r\n    },\r\n    {\r\n      title: 'Tổng giá trị Deal có trọng số',\r\n      value: formatCurrency(stats.weightedDealAmount),\r\n      icon: <TimelineIcon fontSize=\"large\" sx={{ color: '#7b1fa2' }} />\r\n    },\r\n    {\r\n      title: 'Giá trị Deal đang mở',\r\n      value: formatCurrency(stats.openDealAmount),\r\n      icon: <AssignmentIcon fontSize=\"large\" sx={{ color: '#ff9800' }} />\r\n    },\r\n    {\r\n      title: 'Giá trị Deal đã chốt',\r\n      value: formatCurrency(stats.closedDealAmount),\r\n      icon: <CheckCircleIcon fontSize=\"large\" sx={{ color: '#4caf50' }} />\r\n    },\r\n    {\r\n      title: 'Số Deal mới trong tháng',\r\n      value: `${stats.newDealsThisMonth} deal`,\r\n      icon: <CalendarTodayIcon fontSize=\"large\" sx={{ color: '#f57c00' }} />\r\n    },\r\n    {\r\n      title: 'Tuổi trung bình Deal',\r\n      value: `${stats.averageDealAge} ngày`,\r\n      icon: <AccessTimeIcon fontSize=\"large\" sx={{ color: '#d32f2f' }} />\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ mb: 3 }}>\r\n      <Box sx={{ display: 'grid', gridTemplateColumns: {\r\n        xs: '1fr',\r\n        sm: '1fr 1fr',\r\n        md: '1fr 1fr 1fr',\r\n        lg: 'repeat(6, 1fr)'\r\n      }, gap: 2 }}>\r\n        {statItems.map((item, index) => (\r\n          <Card sx={{ height: '100%', boxShadow: 2 }} key={`stat-item-${index}`}>\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                {item.icon}\r\n                <Typography variant=\"h6\" component=\"div\" sx={{ ml: 1, fontWeight: 500 }}>\r\n                  {item.title}\r\n                </Typography>\r\n              </Box>\r\n              <Typography variant=\"h5\" component=\"div\" sx={{ fontWeight: 'bold', mt: 1 }}>\r\n                {item.value}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DealStats;\r\n","// Component hiển thị danh sách nhắc việc\r\n\r\nimport React, { useState, useMemo } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Tooltip,\r\n  Divider,\r\n  Badge,\r\n  Chip,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControlLabel,\r\n  Switch,\r\n  useTheme,\r\n  MenuItem,\r\n  Select,\r\n  SelectChangeEvent\r\n} from '@mui/material';\r\nimport {\r\n  Notifications as NotificationsIcon,\r\n  NotificationsActive as NotificationsActiveIcon,\r\n  Check as CheckIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  MoreVert as MoreVertIcon,\r\n  Close as CloseIcon\r\n} from '@mui/icons-material';\r\nimport { format, isToday, isTomorrow, differenceInDays } from 'date-fns';\r\nimport { vi } from 'date-fns/locale';\r\nimport { Deal, DealStage } from './DealTypes';\r\nimport DealStageChip from './DealStageChip';\r\n\r\ninterface DealReminderItem extends Deal {\r\n  daysUntilDeadline: number;\r\n}\r\n\r\ninterface DealRemindersProps {\r\n  deals: Deal[];\r\n  onViewDeal: (dealId: number) => void;\r\n  onEditDeal: (dealId: number) => void;\r\n  onMarkComplete: (dealId: number) => void;\r\n  onStageChange?: (dealId: number, newStage: DealStage) => void;\r\n  onRemindersCountChange?: (count: number) => void;\r\n}\r\n\r\n/**\r\n * Component hiển thị danh sách nhắc việc cho các deal sắp đến hạn\r\n */\r\nconst DealReminders: React.FC<DealRemindersProps> = ({\r\n  deals,\r\n  onViewDeal,\r\n  onEditDeal,\r\n  onMarkComplete,\r\n  onStageChange,\r\n  onRemindersCountChange\r\n}) => {\r\n  const theme = useTheme();\r\n  const [selectedReminder, setSelectedReminder] = useState<DealReminderItem | null>(null);\r\n  const [reminderDialogOpen, setReminderDialogOpen] = useState(false);\r\n  const [reminderNote, setReminderNote] = useState('');\r\n  const [reminderCompleted, setReminderCompleted] = useState(false);\r\n\r\n  // Lọc và sắp xếp các deal có nhắc việc hoặc đến hạn trong 7 ngày tới\r\n  const reminders = useMemo(() => {\r\n    const now = new Date();\r\n    const reminderItems: DealReminderItem[] = deals\r\n      .filter(deal => {\r\n        // Lọc các deal có nhắc việc hoặc đến hạn trong 7 ngày tới\r\n        if (!deal.deadline && !deal.reminderDate) return false;\r\n        \r\n        const deadlineDate = deal.deadline ? new Date(deal.deadline) : null;\r\n        const reminderDate = deal.reminderDate ? new Date(deal.reminderDate) : null;\r\n        \r\n        // Tính số ngày còn lại đến hạn chốt\r\n        const daysUntilDeadline = deadlineDate \r\n          ? differenceInDays(deadlineDate, now)\r\n          : Infinity;\r\n        \r\n        // Tính số ngày còn lại đến ngày nhắc việc\r\n        const daysUntilReminder = reminderDate\r\n          ? differenceInDays(reminderDate, now)\r\n          : Infinity;\r\n        \r\n        // Chỉ hiển thị các deal có hạn chốt hoặc nhắc việc trong 7 ngày tới\r\n        // Và không hiển thị các deal đã đóng\r\n        return (\r\n          (daysUntilDeadline >= 0 && daysUntilDeadline <= 7) || \r\n          (daysUntilReminder >= 0 && daysUntilReminder <= 7)\r\n        ) && \r\n        deal.stage !== DealStage.CLOSED_WON && \r\n        deal.stage !== DealStage.CLOSED_LOST;\r\n      })\r\n      .map(deal => {\r\n        const deadlineDate = deal.deadline ? new Date(deal.deadline) : null;\r\n        const daysUntilDeadline = deadlineDate \r\n          ? differenceInDays(deadlineDate, now)\r\n          : Infinity;\r\n        \r\n        return {\r\n          ...deal,\r\n          daysUntilDeadline\r\n        };\r\n      });\r\n    \r\n    // Sắp xếp theo thứ tự ưu tiên: các deal gần đến hạn nhất lên đầu\r\n    return reminderItems.sort((a, b) => a.daysUntilDeadline - b.daysUntilDeadline);\r\n  }, [deals]);\r\n\r\n  // Xử lý khi click vào một nhắc việc\r\n  const handleReminderClick = (reminder: DealReminderItem) => {\r\n    setSelectedReminder(reminder);\r\n    setReminderNote(reminder.reminderNote || '');\r\n    setReminderCompleted(false);\r\n    setReminderDialogOpen(true);\r\n  };\r\n\r\n  // Đóng dialog chi tiết nhắc việc\r\n  const handleCloseDialog = () => {\r\n    setReminderDialogOpen(false);\r\n    setSelectedReminder(null);\r\n  };\r\n\r\n  // Đánh dấu hoàn thành nhắc việc\r\n  const handleMarkComplete = () => {\r\n    if (selectedReminder) {\r\n      onMarkComplete(selectedReminder.id);\r\n      handleCloseDialog();\r\n    }\r\n  };\r\n\r\n  // Hiển thị ngày tháng theo định dạng phù hợp\r\n  const formatDate = (date: Date | null | string): string => {\r\n    if (!date) return '';\r\n    \r\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\r\n    \r\n    if (isToday(dateObj)) {\r\n      return 'Hôm nay';\r\n    } else if (isTomorrow(dateObj)) {\r\n      return 'Ngày mai';\r\n    } else {\r\n      return format(dateObj, 'dd/MM/yyyy', { locale: vi });\r\n    }\r\n  };\r\n\r\n  // Hiển thị thông báo khi không có nhắc việc nào\r\n  if (reminders.length === 0) {\r\n    return (\r\n      <Card variant=\"outlined\" sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n        <CardHeader\r\n          title={\r\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n              <NotificationsIcon sx={{ mr: 1, color: theme.palette.text.secondary }} />\r\n              <Typography variant=\"h6\">Nhắc việc</Typography>\r\n            </Box>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent sx={{ flexGrow: 1, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n          <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\r\n            Không có nhắc việc nào trong 7 ngày tới\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card variant=\"outlined\" sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n        <CardHeader\r\n          title={\r\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n              <Badge badgeContent={reminders.length} color=\"error\" sx={{ mr: 1 }}>\r\n                <NotificationsActiveIcon color=\"primary\" />\r\n              </Badge>\r\n              <Typography variant=\"h6\">Nhắc việc</Typography>\r\n            </Box>\r\n          }\r\n          action={\r\n            <Tooltip title=\"Xem tất cả nhắc việc\">\r\n              <IconButton size=\"small\">\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent sx={{ p: 0, flexGrow: 1, overflow: 'auto', maxHeight: 400 }}>\r\n          <List disablePadding>\r\n            {reminders.map((reminder, index) => {\r\n              const isUrgent = reminder.daysUntilDeadline <= 2;\r\n              \r\n              return (\r\n                <React.Fragment key={reminder.id}>\r\n                  {index > 0 && <Divider />}\r\n                  <ListItem\r\n                    component=\"div\"\r\n                    onClick={() => handleReminderClick(reminder)}\r\n                    sx={{\r\n                      py: 1.5,\r\n                      backgroundColor: isUrgent ? 'error.50' : 'inherit',\r\n                      cursor: 'pointer',\r\n                      '&:hover': {\r\n                        backgroundColor: isUrgent ? 'error.100' : 'action.hover',\r\n                      }\r\n                    }}\r\n                  >\r\n                    <ListItemIcon sx={{ minWidth: 40 }}>\r\n                      <NotificationsIcon \r\n                        color={isUrgent ? \"error\" : \"action\"} \r\n                        sx={{ animation: isUrgent ? 'pulse 1.5s infinite' : 'none' }}\r\n                      />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"body1\" noWrap>\r\n                          {reminder.name}\r\n                        </Typography>\r\n                      }\r\n                      secondary={\r\n                        <Box sx={{ display: 'flex', flexDirection: 'column', mt: 0.5 }}>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\r\n                            {reminder.customer}\r\n                          </Typography>\r\n                          <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5, flexWrap: 'wrap', gap: 0.5 }}>\r\n                            <Chip \r\n                              label={\r\n                                <Typography variant=\"caption\">\r\n                                  Hạn chốt: {formatDate(reminder.deadline)}\r\n                                </Typography>\r\n                              }\r\n                              size=\"small\"\r\n                              color={isUrgent ? \"error\" : \"default\"}\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Box>\r\n                        </Box>\r\n                      }\r\n                      primaryTypographyProps={{ variant: 'body1' }}\r\n                      secondaryTypographyProps={{ component: 'div' }}\r\n                    />\r\n                    <ListItemSecondaryAction sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                      <Select\r\n                        value={reminder.stage}\r\n                        onChange={(e: SelectChangeEvent<DealStage>) => {\r\n                          if (onStageChange) {\r\n                            onStageChange(reminder.id, e.target.value as DealStage);\r\n                          }\r\n                        }}\r\n                        size=\"small\"\r\n                        sx={{ \r\n                          minWidth: 150,\r\n                          '& .MuiSelect-select': { \r\n                            py: 0.5,\r\n                            display: 'flex',\r\n                            alignItems: 'center'\r\n                          }\r\n                        }}\r\n                        renderValue={(selected) => (\r\n                          <DealStageChip \r\n                            stage={selected as DealStage} \r\n                            size=\"small\" \r\n                            showTooltip={false} \r\n                          />\r\n                        )}\r\n                      >\r\n                        {Object.values(DealStage).map((stage) => (\r\n                          <MenuItem key={stage} value={stage}>\r\n                            <DealStageChip stage={stage} size=\"small\" showTooltip={false} />\r\n                            <Box component=\"span\" sx={{ ml: 1 }}>\r\n                              {stage}\r\n                            </Box>\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </List>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Dialog hiển thị chi tiết nhắc việc */}\r\n      <Dialog\r\n        open={reminderDialogOpen}\r\n        onClose={handleCloseDialog}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: { borderRadius: 2 }\r\n        }}\r\n      >\r\n        {selectedReminder && (\r\n          <>\r\n            <DialogTitle sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', pb: 1 }}>\r\n              <Typography variant=\"h6\">Chi tiết nhắc việc</Typography>\r\n              <IconButton onClick={handleCloseDialog} size=\"small\">\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </DialogTitle>\r\n            \r\n            <Divider />\r\n            \r\n            <DialogContent sx={{ py: 2 }}>\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                  {selectedReminder.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Khách hàng: {selectedReminder.customer}\r\n                </Typography>\r\n              </Box>\r\n              \r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\r\n                <DealStageChip stage={selectedReminder.stage} />\r\n                <Chip \r\n                  label={`Giá trị: ${selectedReminder.value.toLocaleString('vi-VN')} VND`}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Box>\r\n              \r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"body2\">\r\n                  <strong>Hạn chốt:</strong> {formatDate(selectedReminder.deadline)}\r\n                  {selectedReminder.daysUntilDeadline <= 3 && (\r\n                    <Chip \r\n                      label={`Còn ${selectedReminder.daysUntilDeadline} ngày`}\r\n                      color=\"error\"\r\n                      size=\"small\"\r\n                      sx={{ ml: 1 }}\r\n                    />\r\n                  )}\r\n                </Typography>\r\n              </Box>\r\n              \r\n              {selectedReminder.notes && (\r\n                <Box sx={{ mb: 2 }}>\r\n                  <Typography variant=\"body2\">\r\n                    <strong>Ghi chú:</strong>\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                    {selectedReminder.notes}\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n              \r\n              <Divider sx={{ my: 2 }} />\r\n              \r\n              <Box>\r\n                <Typography variant=\"subtitle2\" gutterBottom>\r\n                  Ghi chú nhắc việc:\r\n                </Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  multiline\r\n                  rows={3}\r\n                  value={reminderNote}\r\n                  onChange={(e) => setReminderNote(e.target.value)}\r\n                  placeholder=\"Thêm ghi chú cho nhắc việc này...\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </Box>\r\n              \r\n              <Box sx={{ mt: 2 }}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={reminderCompleted}\r\n                      onChange={(e) => setReminderCompleted(e.target.checked)}\r\n                    />\r\n                  }\r\n                  label=\"Đánh dấu đã hoàn thành\"\r\n                />\r\n              </Box>\r\n            </DialogContent>\r\n            \r\n            <Divider />\r\n            \r\n            <DialogActions sx={{ px: 3, py: 2 }}>\r\n              <Button\r\n                startIcon={<DeleteIcon />}\r\n                color=\"inherit\"\r\n                onClick={handleCloseDialog}\r\n              >\r\n                Đóng\r\n              </Button>\r\n              \r\n              <Button\r\n                startIcon={<EditIcon />}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  onEditDeal(selectedReminder.id);\r\n                  handleCloseDialog();\r\n                }}\r\n              >\r\n                Chỉnh sửa Deal\r\n              </Button>\r\n              \r\n              <Button\r\n                startIcon={<CheckIcon />}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleMarkComplete}\r\n                disabled={!reminderCompleted}\r\n              >\r\n                Hoàn thành\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DealReminders;\r\n","import React, { useState, useMemo, useCallback, useEffect } from 'react';\r\nimport { Box, Typography, Button, Paper, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab, Badge, Chip } from '@mui/material';\r\nimport { \r\n  Add as AddIcon, \r\n  FilterList as FilterListIcon, \r\n  Notifications as NotificationsIcon,\r\n  SmartToy as SmartToyIcon \r\n} from '@mui/icons-material';\r\nimport { Deal, DealStage, DealFilters as DealFiltersType } from './components/DealTypes';\r\nimport SmartFilter from './components/SmartFilter';\r\nimport DealList from './components/DealList';\r\nimport DealFilters from './components/DealFilters';\r\nimport DealForm from './components/DealForm';\r\nimport DealStats from './components/DealStats';\r\nimport DealReminders from './components/DealReminders';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// Tạo dữ liệu giả\r\nconst createFakeDeals = (count: number): Deal[] => {\r\n  const stages = Object.values(DealStage);\r\n  const owners = ['Nguyễn Văn A', 'Trần Thị B', 'Lê Văn C', 'Phạm Thị D'];\r\n  \r\n  return Array.from({ length: count }, (_, i) => ({\r\n    id: i + 1,\r\n    name: `Deal ${i + 1}`,\r\n    customer: `Công ty ${String.fromCharCode(65 + (i % 5))}`,\r\n    stage: stages[Math.floor(Math.random() * stages.length)],\r\n    value: Math.floor(Math.random() * 100000000) + 10000000, // 10M - 110M\r\n    deadline: new Date(Date.now() + Math.floor(Math.random() * 30) * 24 * 60 * 60 * 1000).toISOString(),\r\n    owner: owners[Math.floor(Math.random() * owners.length)],\r\n    notes: `Ghi chú cho deal ${i + 1}`,\r\n    createdAt: new Date().toISOString(),\r\n    hasReminder: Math.random() > 0.5,\r\n    reminderNote: Math.random() > 0.7 ? `Nhắc nhở cho deal ${i + 1}` : undefined,\r\n    reminderDate: Math.random() > 0.7 ? new Date(Date.now() + Math.random() * 30 * 24 * 60 * 60 * 1000).toISOString() : undefined,\r\n    reminderRecipient: Math.random() > 0.7 ? `email${i + 1}@example.com` : undefined\r\n  }));\r\n};\r\n\r\nconst DealManagement: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  // Khởi tạo dữ liệu giả\r\n  const [deals, setDeals] = useState<Deal[]>(() => createFakeDeals(20));\r\n  \r\n  // State cho bộ lọc\r\n  const [filters, setFilters] = useState<DealFiltersType>({\r\n    searchTerm: '',\r\n    stage: 'Tất cả',\r\n    owner: 'Tất cả',\r\n    dateRange: null,\r\n    hasReminder: null,\r\n    valueRange: { min: 0, max: 1000000000 }\r\n  });\r\n  \r\n  // Lọc deals dựa trên filters\r\n  const filteredDeals = useMemo(() => {\r\n    return deals.filter(deal => {\r\n      // Lọc theo searchTerm\r\n      const matchesSearch = !filters.searchTerm || \r\n        deal.name.toLowerCase().includes(filters.searchTerm.toLowerCase()) ||\r\n        deal.customer.toLowerCase().includes(filters.searchTerm.toLowerCase());\r\n      \r\n      // Lọc theo stage\r\n      const matchesStage = filters.stage === 'Tất cả' || deal.stage === filters.stage;\r\n      \r\n      // Lọc theo owner\r\n      const matchesOwner = filters.owner === 'Tất cả' || deal.owner === filters.owner;\r\n      \r\n      // Lọc theo khoảng giá trị\r\n      const matchesValue = deal.value >= (filters.valueRange?.min || 0) && \r\n                         deal.value <= (filters.valueRange?.max || Number.MAX_SAFE_INTEGER);\r\n      \r\n      // Lọc theo ngày\r\n      let matchesDate = true;\r\n      if (filters.dateRange?.start) {\r\n        const startDate = new Date(filters.dateRange.start);\r\n        startDate.setHours(0, 0, 0, 0);\r\n        const dealDate = new Date(deal.deadline);\r\n        dealDate.setHours(0, 0, 0, 0);\r\n        matchesDate = dealDate >= startDate;\r\n      }\r\n      \r\n      // Lọc theo nhắc nhở\r\n      const matchesReminder = filters.hasReminder === null || \r\n                            (filters.hasReminder ? deal.hasReminder : !deal.hasReminder);\r\n      \r\n      return matchesSearch && matchesStage && matchesOwner && matchesValue && matchesDate && matchesReminder;\r\n    });\r\n  }, [deals, filters]);\r\n  \r\n  // Xử lý thay đổi bộ lọc\r\n  const handleFilterChange = (newFilters: DealFiltersType) => {\r\n    setFilters(newFilters);\r\n  };\r\n  \r\n  // Xử lý đặt lại bộ lọc\r\n  const handleResetFilters = () => {\r\n    setFilters({\r\n      searchTerm: '',\r\n      stage: 'Tất cả',\r\n      owner: 'Tất cả',\r\n      dateRange: null,\r\n      hasReminder: null,\r\n      valueRange: { min: 0, max: 1000000000 }\r\n    });\r\n  };\r\n\r\n  // State cho form thêm/sửa deal\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const [editingDeal, setEditingDeal] = useState<Deal | null>(null);\r\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\r\n  const [dealToDelete, setDealToDelete] = useState<number | null>(null);\r\n  \r\n  // State cho tab hiện tại\r\n  const [currentTab, setCurrentTab] = useState(0);\r\n  const [remindersCount, setRemindersCount] = useState(0);\r\n  const [smartFilterOpen, setSmartFilterOpen] = useState(false);\r\n  const [currentFilter, setCurrentFilter] = useState('');\r\n  \r\n  // Xử lý chuyển tab\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setCurrentTab(newValue);\r\n  };\r\n  \r\n  // Tính toán số lượng nhắc việc\r\n  const calculateRemindersCount = useCallback((deals: Deal[]): number => {\r\n    const now = new Date();\r\n    return deals.filter(deal => {\r\n      if (!deal.deadline && !deal.reminderDate) return false;\r\n      \r\n      const deadlineDate = deal.deadline ? new Date(deal.deadline) : null;\r\n      const reminderDate = deal.reminderDate ? new Date(deal.reminderDate) : null;\r\n      \r\n      const daysUntilDeadline = deadlineDate ? Math.ceil((deadlineDate.getTime() - now.getTime()) / (1000 * 60 * 60 * 24)) : Infinity;\r\n      const daysUntilReminder = reminderDate ? Math.ceil((reminderDate.getTime() - now.getTime()) / (1000 * 60 * 60 * 24)) : Infinity;\r\n      \r\n      return (\r\n        ((daysUntilDeadline >= 0 && daysUntilDeadline <= 7) || \r\n         (daysUntilReminder >= 0 && daysUntilReminder <= 7)) && \r\n        deal.stage !== DealStage.CLOSED_WON && \r\n        deal.stage !== DealStage.CLOSED_LOST\r\n      );\r\n    }).length;\r\n  }, []);\r\n\r\n  // Cập nhật số lượng nhắc việc khi danh sách deals thay đổi\r\n  useEffect(() => {\r\n    const count = calculateRemindersCount(deals);\r\n    setRemindersCount(count);\r\n  }, [deals, calculateRemindersCount]);\r\n\r\n  // Xử lý mở form thêm mới\r\n  const handleAddNewDeal = () => {\r\n    setEditingDeal(null);\r\n    setIsFormOpen(true);\r\n  };\r\n\r\n  // Xử lý mở form chỉnh sửa\r\n  const handleEditDeal = (deal: Deal) => {\r\n    setEditingDeal(deal);\r\n    setIsFormOpen(true);\r\n  };\r\n\r\n  // Xử lý xác nhận xóa\r\n  const handleDeleteDeal = (dealId: number) => {\r\n    setDealToDelete(dealId);\r\n    setDeleteConfirmOpen(true);\r\n  };\r\n\r\n  // Xử lý xóa deal\r\n  const handleConfirmDelete = () => {\r\n    if (dealToDelete) {\r\n      setDeals((prevDeals: Deal[]) => prevDeals.filter((deal: Deal) => deal.id !== dealToDelete));\r\n      setDeleteConfirmOpen(false);\r\n      setDealToDelete(null);\r\n    }\r\n  };\r\n\r\n  // Xử lý thay đổi trạng thái deal\r\n  const handleStageChange = (dealId: number, newStage: DealStage) => {\r\n    setDeals(prevDeals => \r\n      prevDeals.map(deal => \r\n        deal.id === dealId\r\n          ? { ...deal, stage: newStage }\r\n          : deal\r\n      )\r\n    );\r\n  };\r\n\r\n  // Xử lý nhân bản deal\r\n  const handleDuplicateDeal = (deal: Deal) => {\r\n    const newDeal: Deal = {\r\n      ...deal,\r\n      id: Math.max(0, ...deals.map(d => d.id)) + 1,\r\n      name: `${deal.name} (Bản sao)`,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    setDeals((prevDeals: Deal[]) => [...prevDeals, newDeal]);\r\n  };\r\n\r\n  // Xử lý gửi form\r\n  const handleSubmitDeal = (formData: any) => {\r\n    if (editingDeal) {\r\n      // Cập nhật deal\r\n      setDeals((prevDeals: Deal[]) => \r\n        prevDeals.map((deal: Deal) => \r\n          deal.id === editingDeal.id \r\n            ? { ...deal, ...formData, id: editingDeal.id, createdAt: editingDeal.createdAt } as Deal\r\n            : deal\r\n        )\r\n      );\r\n    } else {\r\n      // Thêm deal mới\r\n      const newDeal: Deal = {\r\n        ...formData,\r\n        id: Math.max(0, ...deals.map(d => d.id)) + 1,\r\n        createdAt: new Date().toISOString(),\r\n        hasReminder: !!formData.reminderDate\r\n      } as Deal;\r\n      setDeals((prevDeals: Deal[]) => [...prevDeals, newDeal]);\r\n    }\r\n    setIsFormOpen(false);\r\n  };\r\n\r\n  // Xử lý đóng form\r\n  const handleCloseForm = () => {\r\n    setIsFormOpen(false);\r\n    setEditingDeal(null);\r\n  };\r\n\r\n  // Xử lý xem chi tiết deal\r\n  const handleViewDeal = (deal: Deal | number) => {\r\n    if (typeof deal === 'number') {\r\n      const foundDeal = deals.find(d => d.id === deal);\r\n      if (foundDeal) {\r\n        console.log('Xem chi tiết deal:', foundDeal);\r\n        // Có thể mở dialog chi tiết ở đây nếu cần\r\n      }\r\n    } else {\r\n      console.log('Xem chi tiết deal:', deal);\r\n      // Có thể mở dialog chi tiết ở đây nếu cần\r\n    }\r\n  };\r\n\r\n  // Xử lý mở/đóng bộ lọc thông minh\r\n  const handleSmartFilterOpen = () => setSmartFilterOpen(true);\r\n  const handleSmartFilterClose = () => setSmartFilterOpen(false);\r\n\r\n  // Xử lý áp dụng bộ lọc thông minh\r\n  const handleApplySmartFilter = (query: string) => {\r\n    setCurrentFilter(query);\r\n    // TODO: Thêm logic xử lý query và cập nhật filteredDeals\r\n    console.log('Áp dụng bộ lọc thông minh:', query);\r\n  };\r\n\r\n  // Xóa bộ lọc hiện tại\r\n  const handleClearFilter = () => {\r\n    setCurrentFilter('');\r\n    // TODO: Đặt lại bộ lọc về mặc định\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h4\" component=\"h1\">\r\n          {t('pages.deals.title')}\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAddNewDeal}\r\n        >\r\n          {t('pages.deals.ui.addDeal')}\r\n        </Button>\r\n      </Box>\r\n      \r\n      {/* Thống kê tổng quan */}\r\n      <Box sx={{ mb: 3 }}>\r\n        <DealStats deals={deals} />\r\n      </Box>\r\n\r\n      {/* Bộ lọc */}\r\n      <Paper sx={{ p: 2, mb: 3 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n          <Typography variant=\"h6\" component=\"div\">\r\n            <FilterListIcon sx={{ verticalAlign: 'middle', mr: 1 }} />\r\n            {t('pages.deals.ui.filters')}\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Button \r\n              variant=\"text\" \r\n              size=\"small\"\r\n              onClick={handleResetFilters}\r\n              startIcon={<FilterListIcon />}\r\n            >\r\n              {t('pages.deals.ui.resetFilters')}\r\n            </Button>\r\n            <Button \r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              startIcon={<SmartToyIcon />}\r\n              onClick={handleSmartFilterOpen}\r\n            >\r\n              {t('pages.deals.ui.smartFilter')}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        \r\n        <DealFilters \r\n          onFilterChange={handleFilterChange}\r\n          initialFilters={filters}\r\n        />\r\n      </Paper>\r\n      \r\n      {/* Tab điều hướng */}\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\r\n        <Tabs value={currentTab} onChange={handleTabChange} aria-label=\"deal tabs\">\r\n          <Tab label={t('pages.deals.ui.tabs.allDeals', { count: filteredDeals.length })} />\r\n          <Tab \r\n            label={\r\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                <Badge \r\n                  badgeContent={remindersCount} \r\n                  color=\"error\" \r\n                  overlap=\"circular\"\r\n                  sx={{ mr: 1 }}\r\n                >\r\n                  <NotificationsIcon />\r\n                </Badge>\r\n                <Box component=\"span\">{t('pages.deals.ui.tabs.reminders')}</Box>\r\n              </Box>\r\n            } \r\n          />\r\n        </Tabs>\r\n      </Box>\r\n      \r\n      {currentFilter && (\r\n        <Box sx={{ mb: 2, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {t('pages.deals.ui.filtering')}\r\n            </Typography>\r\n            <Chip \r\n              label={currentFilter} \r\n              onDelete={handleClearFilter}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{ ml: 1 }}\r\n            />\r\n          </Box>\r\n          <Button \r\n            size=\"small\" \r\n            onClick={handleClearFilter}\r\n            color=\"inherit\"\r\n          >\r\n            {t('pages.deals.ui.clearFilter')}\r\n          </Button>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Hiển thị DealReminders hoặc DealList dựa trên tab hiện tại */}\r\n      {currentTab === 0 ? (\r\n        <>\r\n          {/* Hiển thị số lượng kết quả */}\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n            {t('pages.deals.ui.foundMatching', { count: filteredDeals.length })}\r\n          </Typography>\r\n          \r\n          {/* Danh sách deal */}\r\n          <DealList \r\n            deals={filteredDeals}\r\n            onView={handleViewDeal}\r\n            onEdit={handleEditDeal}\r\n            onDelete={handleDeleteDeal}\r\n            onDuplicate={handleDuplicateDeal}\r\n          />\r\n        </>\r\n      ) : (\r\n        /* Tab nhắc việc */\r\n        <DealReminders\r\n          deals={deals}\r\n          onViewDeal={handleViewDeal}\r\n          onEditDeal={(dealId) => {\r\n            const deal = deals.find(d => d.id === dealId);\r\n            if (deal) {\r\n              handleEditDeal(deal);\r\n            }\r\n          }}\r\n          onMarkComplete={(dealId) => {\r\n            // Đánh dấu nhắc việc đã hoàn thành\r\n            setDeals(prevDeals => \r\n              prevDeals.map(deal => \r\n                deal.id === dealId \r\n                  ? { ...deal, reminderCompleted: true } \r\n                  : deal\r\n              )\r\n            );\r\n          }}\r\n          onStageChange={handleStageChange}\r\n        />\r\n      )}\r\n\r\n      {/* Form thêm/sửa deal */}\r\n      <DealForm\r\n        open={isFormOpen}\r\n        onClose={handleCloseForm}\r\n        onSubmit={handleSubmitDeal}\r\n        initialData={editingDeal || undefined}\r\n        title={editingDeal ? t('pages.deals.ui.form.editTitle') : t('pages.deals.ui.form.createTitle')}\r\n      />\r\n\r\n      {/* Dialog bộ lọc thông minh */}\r\n      <SmartFilter\r\n        open={smartFilterOpen}\r\n        onClose={handleSmartFilterClose}\r\n        onApplyFilter={handleApplySmartFilter}\r\n        currentFilter={currentFilter}\r\n      />\r\n\r\n      {/* Dialog xác nhận xóa */}\r\n      <Dialog\r\n        open={deleteConfirmOpen}\r\n        onClose={() => setDeleteConfirmOpen(false)}\r\n      >\r\n        <DialogTitle>{t('pages.deals.ui.dialogs.deleteConfirmTitle')}</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>{t('pages.deals.ui.dialogs.deleteConfirmText')}</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setDeleteConfirmOpen(false)}>{t('common.cancel')}</Button>\r\n          <Button \r\n            onClick={handleConfirmDelete} \r\n            color=\"error\"\r\n            variant=\"contained\"\r\n          >\r\n            {t('common.delete')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DealManagement;\r\n"],"names":["DealStage","STAGE_COLORS","INITIAL_CONTACT","REQUIREMENT_RECORDED","QUOTE_SENT","CONTRACT_SENT","CLOSED_WON","CLOSED_LOST","STAGE_WEIGHTS","exampleQueries","_ref","open","onClose","onApplyFilter","currentFilter","query","setQuery","useState","isProcessing","setIsProcessing","handleApply","trim","setTimeout","_jsxs","Dialog","maxWidth","fullWidth","PaperProps","sx","borderRadius","minHeight","display","flexDirection","children","DialogTitle","alignItems","borderBottom","borderColor","padding","_jsx","SmartToyIcon","color","mr","Typography","variant","component","IconButton","onClick","position","right","top","theme","palette","grey","CloseIcon","DialogContent","flex","Box","mb","gutterBottom","TextField","placeholder","value","onChange","e","target","onKeyPress","key","disabled","InputProps","endAdornment","InputAdornment","SendIcon","mt","flexWrap","gap","map","example","index","Chip","label","handleExampleClick","size","cursor","Paper","p","bgcolor","DialogActions","borderTop","Button","startIcon","stage","showTooltip","stageColor","chip","getPadding","backgroundColor","hexToRgba","hex","alpha","r","parseInt","slice","g","b","concat","fontSize","getFontSize","fontWeight","lineHeight","textAlign","whiteSpace","verticalAlign","transition","Tooltip","title","arrow","deadline","reminderNote","getDaysRemaining","deadlineDate","Date","today","setHours","diffTime","getTime","diffDays","Math","ceil","isDeadlineApproaching","tooltipMessage","ml","Badge","NotificationsIcon","getIconSize","animation","deals","onEdit","onDelete","onView","onDuplicate","t","useTranslation","page","setPage","rowsPerPage","setRowsPerPage","anchorEl","setAnchorEl","selectedDeal","setSelectedDeal","handleCloseMenu","formatDate","dateString","format","locale","vi","error","visibleDeals","width","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","length","deal","hover","name","reminderDate","DealReminderBadge","notes","noWrap","customer","owner","Intl","NumberFormat","style","currency","minimumFractionDigits","DealStageChip","createdAt","justifyContent","EditIcon","VisibilityIcon","handleOpenMenu","event","currentTarget","MoreVertIcon","id","colSpan","py","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","_event","newPage","onRowsPerPageChange","labelRowsPerPage","labelDisplayedRows","_ref2","from","to","Menu","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","ListItemIcon","ContentCopyIcon","ListItemText","DeleteIcon","_filters$dateRange","_filters$dateRange2","_filters$dateRange3","_filters$dateRange4","onFilterChange","initialFilters","defaultFilters","useMemo","searchTerm","dateRange","hasReminder","valueRange","min","max","filters","setFilters","_initialFilters$dateR","_initialFilters$value","_initialFilters$value2","_initialFilters$value3","_initialFilters$value4","_initialFilters$hasRe","_objectSpread","debounceTimer","useRef","undefined","debounce","useCallback","callback","delay","current","clearTimeout","showAdvancedFilters","setShowAdvancedFilters","setValueRange","useEffect","_initialFilters$dateR2","_initialFilters$value5","_initialFilters$value6","_initialFilters$value7","_initialFilters$value8","_initialFilters$hasRe2","newFilters","handleDateChange","field","date","currentDateRange","start","end","newDateRange","updatedDateRange","formatCurrency","stageOptions","FilterListIcon","gridTemplateColumns","xs","md","startAdornment","SearchIcon","prev","ClearIcon","FormControl","InputLabel","Select","labelId","option","gridColumn","Collapse","in","px","Slider","handleValueRangeChange","newValue","values","onChangeCommitted","handleValueRangeChangeCommitted","valueLabelDisplay","valueLabelFormat","step","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","slotProps","textField","minDate","handleClearFilters","resetFilters","handleSearch","onSubmit","initialData","defaultFormData","formData","setFormData","errors","setErrors","handleInputChange","toISOString","Divider","preventDefault","validateForm","newErrors","Object","keys","helperText","type","FormHelperText","multiline","rows","FormControlLabel","control","Switch","checked","_Fragment","form","stats","calculateStats","currentMonth","getMonth","currentYear","getFullYear","totalDealAmount","weightedDealAmount","openDealAmount","closedDealAmount","newDealsThisMonth","totalDealAgeInDays","dealCount","forEach","createdDate","createdTime","currentTime","ageInDays","floor","averageDealAge","round","statItems","icon","AttachMoneyIcon","TimelineIcon","AssignmentIcon","CheckCircleIcon","CalendarTodayIcon","AccessTimeIcon","sm","lg","item","Card","height","boxShadow","CardContent","onViewDeal","onEditDeal","onMarkComplete","onStageChange","onRemindersCountChange","useTheme","selectedReminder","setSelectedReminder","reminderDialogOpen","setReminderDialogOpen","setReminderNote","reminderCompleted","setReminderCompleted","reminders","now","filter","daysUntilDeadline","differenceInDays","Infinity","daysUntilReminder","sort","a","handleCloseDialog","dateObj","isToday","isTomorrow","CardHeader","text","secondary","flexGrow","badgeContent","NotificationsActiveIcon","action","List","disablePadding","reminder","isUrgent","React","ListItem","handleReminderClick","minWidth","primary","primaryTypographyProps","secondaryTypographyProps","ListItemSecondaryAction","renderValue","selected","pb","toLocaleString","my","CheckIcon","handleMarkComplete","DealManagement","setDeals","stages","owners","Array","_","i","String","fromCharCode","random","reminderRecipient","createFakeDeals","filteredDeals","_filters$valueRange","_filters$valueRange2","matchesSearch","toLowerCase","includes","matchesStage","matchesOwner","matchesValue","Number","MAX_SAFE_INTEGER","matchesDate","startDate","dealDate","matchesReminder","isFormOpen","setIsFormOpen","editingDeal","setEditingDeal","deleteConfirmOpen","setDeleteConfirmOpen","dealToDelete","setDealToDelete","currentTab","setCurrentTab","remindersCount","setRemindersCount","smartFilterOpen","setSmartFilterOpen","setCurrentFilter","calculateRemindersCount","handleEditDeal","handleViewDeal","foundDeal","find","d","console","log","handleClearFilter","AddIcon","handleAddNewDeal","DealStats","handleResetFilters","handleSmartFilterOpen","DealFilters","Tabs","handleTabChange","Tab","overlap","DealList","dealId","newDeal","prevDeals","DealReminders","handleStageChange","newStage","DealForm","handleCloseForm","SmartFilter","handleSmartFilterClose","handleConfirmDelete"],"sourceRoot":""}