{"version":3,"file":"static/js/854.01517586.chunk.js","mappings":"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","sources":["components/CrmAssistantPanel/index.tsx","pages/Dashboard/components/DynamicKPIStats.tsx","pages/Dashboard/components/TrendingInsightsPredictions.tsx","pages/Dashboard/components/DynamicCharts.tsx","pages/Dashboard/components/SavedReports.tsx","services/globalAISearch/index.ts","pages/Dashboard/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  TextField,\r\n  InputAdornment,\r\n  Paper,\r\n  Chip,\r\n  Button,\r\n  Avatar,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Skeleton,\r\n  Alert,\r\n  Snackbar,\r\n  useTheme,\r\n  alpha,\r\n  Fade,\r\n  Slide\r\n} from '@mui/material';\r\nimport {\r\n  Close as CloseIcon,\r\n  Minimize as MinimizeIcon,\r\n  Fullscreen as ExpandIcon,\r\n  Send as SendIcon,\r\n  AttachFile as AttachIcon,\r\n  SmartToy as AIIcon,\r\n  Person as PersonIcon,\r\n  Business as BusinessIcon,\r\n  TrendingUp as TrendingIcon,\r\n  Email as EmailIcon,\r\n  Add as AddIcon,\r\n  Task as TaskIcon,\r\n  OpenInNew as OpenIcon\r\n} from '@mui/icons-material';\r\n\r\n// Types\r\nexport interface ChatMessage {\r\n  id: string;\r\n  type: 'user' | 'assistant';\r\n  content: string;\r\n  timestamp: Date;\r\n  isCard?: boolean;\r\n  cardData?: AssistantCardData;\r\n}\r\n\r\nexport interface ContactData {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  owner: string;\r\n  leadStatus: string;\r\n  statusColor: string;\r\n}\r\n\r\nexport interface DealData {\r\n  id: string;\r\n  name: string;\r\n  customer: string;\r\n  amount: number;\r\n  stage: string;\r\n  stageColor: string;\r\n  deadline: string;\r\n}\r\n\r\nexport interface AssistantCardData {\r\n  query: string;\r\n  summary: string[];\r\n  contacts: ContactData[];\r\n  deals: DealData[];\r\n  showContacts: boolean;\r\n  showDeals: boolean;\r\n}\r\n\r\nexport interface CrmAssistantPanelProps {\r\n  open: boolean;\r\n  initialQuery?: string;\r\n  onClose: () => void;\r\n  onMinimize: () => void;\r\n}\r\n\r\n// Mock data\r\nconst mockContacts: ContactData[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Nguyễn Văn An',\r\n    email: 'an.nguyen@company.com',\r\n    phone: '0901234567',\r\n    owner: 'Trần Thị B',\r\n    leadStatus: 'Hot Lead',\r\n    statusColor: '#f44336'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Lê Thị Cẩm',\r\n    email: 'cam.le@business.com',\r\n    phone: '0987654321',\r\n    owner: 'Phạm Văn C',\r\n    leadStatus: 'Qualified',\r\n    statusColor: '#4caf50'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Hoàng Minh Đức',\r\n    email: 'duc.hoang@tech.vn',\r\n    phone: '0912345678',\r\n    owner: 'Nguyễn Thị D',\r\n    leadStatus: 'New Lead',\r\n    statusColor: '#2196f3'\r\n  }\r\n];\r\n\r\nconst mockDeals: DealData[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Hệ thống CRM cho ABC Corp',\r\n    customer: 'ABC Corporation',\r\n    amount: 250000000,\r\n    stage: 'Đã gửi báo giá',\r\n    stageColor: '#ff9800',\r\n    deadline: '2024-02-15'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Giải pháp ERP XYZ',\r\n    customer: 'XYZ Trading',\r\n    amount: 180000000,\r\n    stage: 'Đang đàm phán',\r\n    stageColor: '#9c27b0',\r\n    deadline: '2024-02-28'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Tư vấn Marketing Digital',\r\n    customer: 'Innovation Startup',\r\n    amount: 75000000,\r\n    stage: 'Liên hệ ban đầu',\r\n    stageColor: '#607d8b',\r\n    deadline: '2024-03-10'\r\n  }\r\n];\r\n\r\n// Helper functions\r\nconst formatAmount = (amount: number): string => {\r\n  if (amount >= 1000000000) {\r\n    return `${(amount / 1000000000).toFixed(1)}B₫`;\r\n  } else if (amount >= 1000000) {\r\n    return `${(amount / 1000000).toFixed(1)}M₫`;\r\n  } else if (amount >= 1000) {\r\n    return `${(amount / 1000).toFixed(1)}K₫`;\r\n  }\r\n  return `${amount}₫`;\r\n};\r\n\r\nconst generateConversationTitle = (query: string): string => {\r\n  const words = query.split(' ').slice(0, 6);\r\n  return words.join(' ');\r\n};\r\n\r\nconst generateMockSummary = (query: string): string[] => {\r\n  return [\r\n    `Tìm thấy ${mockContacts.length} liên hệ phù hợp với truy vấn`,\r\n    `${mockDeals.length} cơ hội mở với tổng giá trị ~${formatAmount(mockDeals.reduce((sum, deal) => sum + deal.amount, 0))}`,\r\n    `Nhiều deal đang ở giai đoạn \"Đã gửi báo giá\" cần theo dõi`,\r\n    `Tỷ lệ chuyển đổi lead hiện tại: 65%`\r\n  ];\r\n};\r\n\r\n// Mini Table Component\r\nconst MiniTable: React.FC<{\r\n  type: 'contacts' | 'deals';\r\n  data: ContactData[] | DealData[];\r\n  onAction: (action: string, id: string) => void;\r\n}> = ({ type, data, onAction }) => {\r\n  const theme = useTheme();\r\n\r\n  if (type === 'contacts') {\r\n    const contacts = data as ContactData[];\r\n    return (\r\n      <TableContainer component={Paper} sx={{ maxHeight: 200, border: `1px solid ${alpha(theme.palette.divider, 0.3)}` }}>\r\n        <Table size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>Name</TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>Contact</TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>Owner</TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>Status</TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {contacts.map((contact) => (\r\n              <TableRow key={contact.id} hover>\r\n                <TableCell sx={{ fontSize: '0.8rem', fontWeight: 'medium' }}>{contact.name}</TableCell>\r\n                <TableCell sx={{ fontSize: '0.75rem' }}>{contact.email}</TableCell>\r\n                <TableCell sx={{ fontSize: '0.75rem' }}>{contact.owner}</TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    label={contact.leadStatus}\r\n                    size=\"small\"\r\n                    sx={{\r\n                      backgroundColor: alpha(contact.statusColor, 0.1),\r\n                      color: contact.statusColor,\r\n                      border: `1px solid ${alpha(contact.statusColor, 0.3)}`,\r\n                      fontSize: '0.65rem',\r\n                      height: 20\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Button\r\n                    size=\"small\"\r\n                    startIcon={<OpenIcon fontSize=\"small\" />}\r\n                    onClick={() => onAction('open', contact.id)}\r\n                    sx={{ fontSize: '0.7rem', minWidth: 'auto', px: 1 }}\r\n                  >\r\n                    Open\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n  const deals = data as DealData[];\r\n  return (\r\n    <TableContainer component={Paper} sx={{ maxHeight: 200, border: `1px solid ${alpha(theme.palette.divider, 0.3)}` }}>\r\n      <Table size=\"small\" stickyHeader>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>Deal</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>Customer</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>Value</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>Stage</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>Deadline</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {deals.map((deal) => (\r\n            <TableRow key={deal.id} hover>\r\n              <TableCell sx={{ fontSize: '0.8rem', fontWeight: 'medium' }}>{deal.name}</TableCell>\r\n              <TableCell sx={{ fontSize: '0.75rem' }}>{deal.customer}</TableCell>\r\n              <TableCell sx={{ fontSize: '0.8rem', fontWeight: 'bold', color: 'success.main' }}>\r\n                {formatAmount(deal.amount)}\r\n              </TableCell>\r\n              <TableCell>\r\n                <Chip\r\n                  label={deal.stage}\r\n                  size=\"small\"\r\n                  sx={{\r\n                    backgroundColor: alpha(deal.stageColor, 0.1),\r\n                    color: deal.stageColor,\r\n                    border: `1px solid ${alpha(deal.stageColor, 0.3)}`,\r\n                    fontSize: '0.65rem',\r\n                    height: 20\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell sx={{ fontSize: '0.75rem' }}>{deal.deadline}</TableCell>\r\n              <TableCell>\r\n                <Box sx={{ display: 'flex', gap: 0.5 }}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    startIcon={<OpenIcon fontSize=\"small\" />}\r\n                    onClick={() => onAction('open', deal.id)}\r\n                    sx={{ fontSize: '0.7rem', minWidth: 'auto', px: 1 }}\r\n                  >\r\n                    Open\r\n                  </Button>\r\n                  <Button\r\n                    size=\"small\"\r\n                    startIcon={<TaskIcon fontSize=\"small\" />}\r\n                    onClick={() => onAction('task', deal.id)}\r\n                    sx={{ fontSize: '0.7rem', minWidth: 'auto', px: 1 }}\r\n                  >\r\n                    Task\r\n                  </Button>\r\n                </Box>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\n// Assistant Card Component\r\nconst AssistantCard: React.FC<{\r\n  data: AssistantCardData;\r\n  loading?: boolean;\r\n  onToggleSection: (section: 'contacts' | 'deals') => void;\r\n  onAction: (action: string, id?: string) => void;\r\n}> = ({ data, loading, onToggleSection, onAction }) => {\r\n  const theme = useTheme();\r\n\r\n  if (loading) {\r\n    return (\r\n      <Paper sx={{ p: 3, mb: 2, borderRadius: 3, border: `1px solid ${alpha(theme.palette.primary.main, 0.2)}` }}>\r\n        <Skeleton variant=\"text\" width=\"60%\" height={32} sx={{ mb: 2 }} />\r\n        <Box sx={{ mb: 2 }}>\r\n          {[1, 2, 3].map((i) => (\r\n            <Skeleton key={i} variant=\"text\" width=\"80%\" height={24} sx={{ mb: 0.5 }} />\r\n          ))}\r\n        </Box>\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={120} sx={{ mb: 2, borderRadius: 1 }} />\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={120} sx={{ borderRadius: 1 }} />\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper sx={{ \r\n      p: 3, \r\n      mb: 2, \r\n      borderRadius: 3, \r\n      border: `1px solid ${alpha(theme.palette.primary.main, 0.2)}`,\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.02)\r\n    }}>\r\n      <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mb: 2, color: 'primary.main' }}>\r\n        Kết quả cho: \"{data.query}\"\r\n      </Typography>\r\n\r\n      {/* Summary */}\r\n      <Box sx={{ mb: 3 }}>\r\n        {data.summary.map((item, index) => (\r\n          <Typography key={index} variant=\"body2\" sx={{ mb: 0.5, display: 'flex', alignItems: 'center' }}>\r\n            <Box sx={{ width: 4, height: 4, borderRadius: '50%', backgroundColor: 'primary.main', mr: 1 }} />\r\n            {item}\r\n          </Typography>\r\n        ))}\r\n      </Box>\r\n\r\n      {/* Filter Chips */}\r\n      <Box sx={{ display: 'flex', gap: 1, mb: 3 }}>\r\n        <Chip\r\n          icon={<PersonIcon fontSize=\"small\" />}\r\n          label=\"Contacts\"\r\n          variant={data.showContacts ? 'filled' : 'outlined'}\r\n          color={data.showContacts ? 'primary' : 'default'}\r\n          onClick={() => onToggleSection('contacts')}\r\n          sx={{ cursor: 'pointer' }}\r\n        />\r\n        <Chip\r\n          icon={<BusinessIcon fontSize=\"small\" />}\r\n          label=\"Deals\"\r\n          variant={data.showDeals ? 'filled' : 'outlined'}\r\n          color={data.showDeals ? 'primary' : 'default'}\r\n          onClick={() => onToggleSection('deals')}\r\n          sx={{ cursor: 'pointer' }}\r\n        />\r\n      </Box>\r\n\r\n      {/* Top Contacts */}\r\n      {data.showContacts && (\r\n        <Box sx={{ mb: 3 }}>\r\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold', mb: 1.5 }}>\r\n            Top Contacts\r\n          </Typography>\r\n          <MiniTable type=\"contacts\" data={data.contacts} onAction={onAction} />\r\n        </Box>\r\n      )}\r\n\r\n      {/* Open Deals */}\r\n      {data.showDeals && (\r\n        <Box sx={{ mb: 3 }}>\r\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold', mb: 1.5 }}>\r\n            Open Deals\r\n          </Typography>\r\n          <MiniTable type=\"deals\" data={data.deals} onAction={onAction} />\r\n        </Box>\r\n      )}\r\n\r\n      {/* Suggested Actions */}\r\n      <Box>\r\n        <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold', mb: 1.5 }}>\r\n          Gợi ý tiếp theo\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<AddIcon fontSize=\"small\" />}\r\n            variant=\"outlined\"\r\n            onClick={() => onAction('create-contact')}\r\n          >\r\n            Tạo liên hệ\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<TrendingIcon fontSize=\"small\" />}\r\n            variant=\"outlined\"\r\n            onClick={() => onAction('create-deal')}\r\n          >\r\n            Tạo cơ hội\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<EmailIcon fontSize=\"small\" />}\r\n            variant=\"outlined\"\r\n            onClick={() => onAction('send-email')}\r\n          >\r\n            Gửi email nháp\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// Chat Message Component\r\nconst ChatMessage: React.FC<{\r\n  message: ChatMessage;\r\n  onToggleSection?: (section: 'contacts' | 'deals') => void;\r\n  onAction?: (action: string, id?: string) => void;\r\n}> = ({ message, onToggleSection, onAction }) => {\r\n  const theme = useTheme();\r\n  const isUser = message.type === 'user';\r\n\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      justifyContent: isUser ? 'flex-end' : 'flex-start',\r\n      mb: 2\r\n    }}>\r\n      <Box sx={{ maxWidth: '80%', width: message.isCard ? '100%' : 'auto' }}>\r\n        {message.isCard && message.cardData ? (\r\n          <AssistantCard\r\n            data={message.cardData}\r\n            onToggleSection={onToggleSection!}\r\n            onAction={onAction!}\r\n          />\r\n        ) : (\r\n          <Paper sx={{\r\n            p: 2,\r\n            backgroundColor: isUser ? 'primary.main' : 'grey.100',\r\n            color: isUser ? 'primary.contrastText' : 'text.primary',\r\n            borderRadius: isUser ? '18px 18px 4px 18px' : '18px 18px 18px 4px',\r\n            maxWidth: 'fit-content'\r\n          }}>\r\n            <Typography variant=\"body2\">\r\n              {message.content}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Main CRM Assistant Panel Component\r\nconst CrmAssistantPanel: React.FC<CrmAssistantPanelProps> = ({\r\n  open,\r\n  initialQuery = '',\r\n  onClose,\r\n  onMinimize\r\n}) => {\r\n  const theme = useTheme();\r\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [conversationTitle, setConversationTitle] = useState('');\r\n  const [cardData, setCardData] = useState<AssistantCardData | null>(null);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '' });\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Initialize with initial query\r\n  useEffect(() => {\r\n    if (open && initialQuery && messages.length === 0) {\r\n      setConversationTitle(generateConversationTitle(initialQuery));\r\n      handleSendMessage(initialQuery, true);\r\n    }\r\n  }, [open, initialQuery]);\r\n\r\n  // Auto scroll to bottom\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async (message: string, isInitial = false) => {\r\n    if (!message.trim()) return;\r\n\r\n    // Add user message\r\n    const userMessage: ChatMessage = {\r\n      id: Date.now().toString(),\r\n      type: 'user',\r\n      content: message,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setIsTyping(true);\r\n\r\n    // Simulate typing delay\r\n    setTimeout(() => {\r\n      setIsTyping(false);\r\n      \r\n      if (isInitial) {\r\n        // Create card response for initial query\r\n        const newCardData: AssistantCardData = {\r\n          query: message,\r\n          summary: generateMockSummary(message),\r\n          contacts: mockContacts,\r\n          deals: mockDeals,\r\n          showContacts: true,\r\n          showDeals: true\r\n        };\r\n\r\n        const assistantMessage: ChatMessage = {\r\n          id: (Date.now() + 1).toString(),\r\n          type: 'assistant',\r\n          content: '',\r\n          timestamp: new Date(),\r\n          isCard: true,\r\n          cardData: newCardData\r\n        };\r\n\r\n        setCardData(newCardData);\r\n        setMessages(prev => [...prev, assistantMessage]);\r\n      } else {\r\n        // Regular text response\r\n        const responses = [\r\n          'Tôi đã phân tích dữ liệu và tìm thấy một số thông tin hữu ích. Bạn có muốn tôi tạo báo cáo chi tiết không?',\r\n          'Dựa trên dữ liệu hiện tại, tôi khuyên bạn nên tập trung vào các lead đang ở giai đoạn \"Đã gửi báo giá\".',\r\n          'Có vẻ như bạn có nhiều cơ hội tiềm năng. Tôi có thể giúp bạn ưu tiên theo giá trị deal.',\r\n          'Tôi nhận thấy một số xu hướng thú vị trong dữ liệu của bạn. Bạn muốn xem phân tích chi tiết không?'\r\n        ];\r\n\r\n        const assistantMessage: ChatMessage = {\r\n          id: (Date.now() + 1).toString(),\r\n          type: 'assistant',\r\n          content: responses[Math.floor(Math.random() * responses.length)],\r\n          timestamp: new Date()\r\n        };\r\n\r\n        setMessages(prev => [...prev, assistantMessage]);\r\n      }\r\n    }, 1500);\r\n  };\r\n\r\n  const handleToggleSection = (section: 'contacts' | 'deals') => {\r\n    if (!cardData) return;\r\n\r\n    const updatedCardData = {\r\n      ...cardData,\r\n      [section === 'contacts' ? 'showContacts' : 'showDeals']: \r\n        !cardData[section === 'contacts' ? 'showContacts' : 'showDeals']\r\n    };\r\n\r\n    setCardData(updatedCardData);\r\n    \r\n    // Update the card message\r\n    setMessages(prev => prev.map(msg => \r\n      msg.isCard ? { ...msg, cardData: updatedCardData } : msg\r\n    ));\r\n  };\r\n\r\n  const handleAction = (action: string, id?: string) => {\r\n    const actionMessages: { [key: string]: string } = {\r\n      'open': '(mock) Đã mở chi tiết',\r\n      'task': '(mock) Đã tạo task',\r\n      'create-contact': '(mock) Đã tạo liên hệ mới',\r\n      'create-deal': '(mock) Đã tạo cơ hội mới',\r\n      'send-email': '(mock) Đã gửi email nháp'\r\n    };\r\n\r\n    setSnackbar({\r\n      open: true,\r\n      message: actionMessages[action] || '(mock) Đã thực hiện'\r\n    });\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage(inputValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        onClose={onClose}\r\n        maxWidth={false}\r\n        PaperProps={{\r\n          sx: {\r\n            width: '960px',\r\n            height: '75vh',\r\n            maxWidth: '90vw',\r\n            maxHeight: '90vh',\r\n            borderRadius: 3,\r\n            overflow: 'hidden'\r\n          }\r\n        }}\r\n        BackdropProps={{\r\n          sx: {\r\n            backgroundColor: alpha(theme.palette.common.black, 0.5),\r\n            backdropFilter: 'blur(4px)'\r\n          }\r\n        }}\r\n      >\r\n        {/* Header */}\r\n        <Box sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          p: 2,\r\n          borderBottom: `1px solid ${theme.palette.divider}`,\r\n          backgroundColor: theme.palette.background.paper,\r\n          position: 'sticky',\r\n          top: 0,\r\n          zIndex: 1\r\n        }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n            <AIIcon color=\"primary\" />\r\n            <Box>\r\n              <Typography variant=\"h6\" sx={{ fontWeight: 'bold', lineHeight: 1 }}>\r\n                CRM Assistant\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                {conversationTitle || 'Start new chat'}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          \r\n          <Box sx={{ display: 'flex', gap: 0.5 }}>\r\n            <IconButton size=\"small\" onClick={onMinimize}>\r\n              <MinimizeIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton size=\"small\">\r\n              <ExpandIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton size=\"small\" onClick={onClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Chat Body */}\r\n        <DialogContent sx={{ \r\n          flex: 1, \r\n          p: 0, \r\n          display: 'flex', \r\n          flexDirection: 'column',\r\n          overflow: 'hidden'\r\n        }}>\r\n          <Box sx={{ \r\n            flex: 1, \r\n            overflow: 'auto', \r\n            p: 2,\r\n            '&::-webkit-scrollbar': {\r\n              width: '6px',\r\n            },\r\n            '&::-webkit-scrollbar-track': {\r\n              backgroundColor: alpha(theme.palette.grey[300], 0.2),\r\n            },\r\n            '&::-webkit-scrollbar-thumb': {\r\n              backgroundColor: alpha(theme.palette.primary.main, 0.3),\r\n              borderRadius: '3px',\r\n              '&:hover': {\r\n                backgroundColor: alpha(theme.palette.primary.main, 0.5),\r\n              }\r\n            }\r\n          }}>\r\n            {messages.length === 0 ? (\r\n              <Box sx={{ \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                height: '100%',\r\n                flexDirection: 'column',\r\n                color: 'text.secondary'\r\n              }}>\r\n                <AIIcon sx={{ fontSize: 48, mb: 2, opacity: 0.5 }} />\r\n                <Typography variant=\"body1\">\r\n                  Chưa có câu hỏi. Hãy nhập gì đó...\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <>\r\n                {messages.map((message) => (\r\n                  <ChatMessage\r\n                    key={message.id}\r\n                    message={message}\r\n                    onToggleSection={handleToggleSection}\r\n                    onAction={handleAction}\r\n                  />\r\n                ))}\r\n                \r\n                {isTyping && (\r\n                  <Box sx={{ display: 'flex', justifyContent: 'flex-start', mb: 2 }}>\r\n                    <Paper sx={{\r\n                      p: 2,\r\n                      backgroundColor: 'grey.100',\r\n                      borderRadius: '18px 18px 18px 4px',\r\n                      maxWidth: 'fit-content'\r\n                    }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Đang gõ...\r\n                      </Typography>\r\n                    </Paper>\r\n                  </Box>\r\n                )}\r\n                \r\n                <div ref={messagesEndRef} />\r\n              </>\r\n            )}\r\n          </Box>\r\n\r\n          {/* Composer */}\r\n          <Box sx={{\r\n            p: 2,\r\n            borderTop: `1px solid ${theme.palette.divider}`,\r\n            backgroundColor: theme.palette.background.paper,\r\n            position: 'sticky',\r\n            bottom: 0\r\n          }}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              maxRows={3}\r\n              placeholder=\"Nhập câu hỏi...\"\r\n              value={inputValue}\r\n              onChange={(e) => setInputValue(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton size=\"small\" sx={{ mr: 0.5 }}>\r\n                      <AttachIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      onClick={() => handleSendMessage(inputValue)}\r\n                      disabled={!inputValue.trim()}\r\n                    >\r\n                      <SendIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n                sx: {\r\n                  borderRadius: 3,\r\n                  '& .MuiOutlinedInput-notchedOutline': {\r\n                    borderColor: alpha(theme.palette.primary.main, 0.3),\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 0.5, display: 'block' }}>\r\n              Câu trả lời chỉ là mô phỏng cho mockup.\r\n            </Typography>\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Snackbar for actions */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={3000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n        message={snackbar.message}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrmAssistantPanel;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Chip,\r\n  LinearProgress,\r\n  useTheme,\r\n  alpha,\r\n  Skeleton,\r\n  IconButton,\r\n  Tooltip,\r\n  Fade,\r\n  Grid,\r\n  Stack\r\n} from '@mui/material';\r\nimport {\r\n  TrendingUp as TrendingUpIcon,\r\n  TrendingDown as TrendingDownIcon,\r\n  People as PeopleIcon,\r\n  AttachMoney as MoneyIcon,\r\n  Assignment as DealsIcon,\r\n  Timeline as TimelineIcon,\r\n  Refresh as RefreshIcon,\r\n  Star as StarIcon,\r\n  ViewModule as ViewModuleIcon,\r\n  ViewCarousel as ViewCarouselIcon\r\n} from '@mui/icons-material';\r\nimport { aiOrchestrator, AIRequest } from '../../../services/aiOrchestration';\r\n\r\ninterface KPIData {\r\n  id: string;\r\n  title: string;\r\n  value: string | number;\r\n  change: number;\r\n  changeLabel: string;\r\n  icon: React.ReactNode;\r\n  color: string;\r\n  description: string;\r\n  isLoading?: boolean;\r\n  lastUpdated?: Date;\r\n}\r\n\r\ninterface DynamicUpdate {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  timestamp: Date;\r\n  type: 'new_customer' | 'deal_closed' | 'revenue_milestone' | 'market_trend';\r\n  value?: string;\r\n  isNew?: boolean;\r\n}\r\n\r\nconst DynamicKPIStats: React.FC = () => {\r\n  const theme = useTheme();\r\n  const [kpiData, setKpiData] = useState<KPIData[]>([]);\r\n  const [dynamicUpdates, setDynamicUpdates] = useState<DynamicUpdate[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [lastRefresh, setLastRefresh] = useState<Date>(new Date());\r\n  const [activeKpiIndex, setActiveKpiIndex] = useState<number>(0);\r\n  const [showAllKpis, setShowAllKpis] = useState<boolean>(false);\r\n\r\n  // Initialize KPI data\r\n  useEffect(() => {\r\n    loadKPIData();\r\n    loadDynamicUpdates();\r\n    \r\n    // Set up real-time updates\r\n    const interval = setInterval(() => {\r\n      updateKPIData();\r\n      addRandomUpdate();\r\n    }, 30000); // Update every 30 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Rotate through KPI cards with animation\r\n  useEffect(() => {\r\n    if (kpiData.length === 0 || showAllKpis) return;\r\n    \r\n    const rotationInterval = setInterval(() => {\r\n      setActiveKpiIndex(prevIndex => (prevIndex + 1) % kpiData.length);\r\n    }, 5000); // Rotate every 5 seconds\r\n    \r\n    return () => clearInterval(rotationInterval);\r\n  }, [kpiData.length, showAllKpis]);\r\n\r\n  const loadKPIData = async () => {\r\n    setIsLoading(true);\r\n    \r\n    // Simulate API call to get real-time data\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    const currentDate = new Date();\r\n    const kpis: KPIData[] = [\r\n      {\r\n        id: 'new_customers',\r\n        title: 'Khách hàng mới',\r\n        value: Math.floor(Math.random() * 20) + 15, // 15-35\r\n        change: Math.random() * 30 - 10, // -10% to +20%\r\n        changeLabel: 'so với tuần trước',\r\n        icon: <PeopleIcon />,\r\n        color: theme.palette.primary.main,\r\n        description: 'Khách hàng mới đăng ký trong tuần',\r\n        lastUpdated: currentDate\r\n      },\r\n      {\r\n        id: 'total_deals',\r\n        title: 'Tổng Deal',\r\n        value: Math.floor(Math.random() * 50) + 120, // 120-170\r\n        change: Math.random() * 25 - 5, // -5% to +20%\r\n        changeLabel: 'so với tháng trước',\r\n        icon: <DealsIcon />,\r\n        color: theme.palette.success.main,\r\n        description: 'Tổng số deal đang theo dõi',\r\n        lastUpdated: currentDate\r\n      },\r\n      {\r\n        id: 'revenue',\r\n        title: 'Doanh thu thực tế',\r\n        value: `${(Math.random() * 500 + 1500).toFixed(0)}K`,\r\n        change: Math.random() * 40 - 10, // -10% to +30%\r\n        changeLabel: 'so với tháng trước',\r\n        icon: <MoneyIcon />,\r\n        color: theme.palette.warning.main,\r\n        description: 'Doanh thu đã thực hiện trong tháng',\r\n        lastUpdated: currentDate\r\n      },\r\n      {\r\n        id: 'deal_pipeline',\r\n        title: 'Deal theo giai đoạn',\r\n        value: `${Math.floor(Math.random() * 10) + 25}`,\r\n        change: Math.random() * 20 - 5, // -5% to +15%\r\n        changeLabel: 'deal đang closing',\r\n        icon: <TimelineIcon />,\r\n        color: theme.palette.info.main,\r\n        description: 'Deal đang ở giai đoạn cuối',\r\n        lastUpdated: currentDate\r\n      },\r\n      {\r\n        id: 'top_performer',\r\n        title: 'Nhân viên top deal',\r\n        value: 'Nguyễn Văn A',\r\n        change: 8, // Number of deals\r\n        changeLabel: 'deal trong tháng',\r\n        icon: <StarIcon />,\r\n        color: theme.palette.secondary.main,\r\n        description: 'Nhân viên có hiệu suất cao nhất',\r\n        lastUpdated: currentDate\r\n      }\r\n    ];\r\n\r\n    setKpiData(kpis);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const loadDynamicUpdates = async () => {\r\n    // Simulate loading dynamic updates similar to Crunchbase\r\n    const updates: DynamicUpdate[] = [\r\n      {\r\n        id: 'update_1',\r\n        title: 'Deal mới được tạo',\r\n        description: 'Hệ thống ERP cho Công ty ABC - Giá trị: 250K',\r\n        timestamp: new Date(Date.now() - 5 * 60 * 1000), // 5 minutes ago\r\n        type: 'deal_closed',\r\n        value: '250K',\r\n        isNew: true\r\n      },\r\n      {\r\n        id: 'update_2',\r\n        title: 'Khách hàng mới đăng ký',\r\n        description: 'XYZ Corporation đã đăng ký dịch vụ',\r\n        timestamp: new Date(Date.now() - 15 * 60 * 1000), // 15 minutes ago\r\n        type: 'new_customer',\r\n        isNew: true\r\n      },\r\n      {\r\n        id: 'update_3',\r\n        title: 'Xu hướng thị trường',\r\n        description: 'AI/ML solutions tăng trưởng 35% trong quý',\r\n        timestamp: new Date(Date.now() - 30 * 60 * 1000), // 30 minutes ago\r\n        type: 'market_trend'\r\n      }\r\n    ];\r\n\r\n    setDynamicUpdates(updates);\r\n  };\r\n\r\n  const updateKPIData = async () => {\r\n    // Simulate real-time KPI updates\r\n    setKpiData(prev => prev.map(kpi => ({\r\n      ...kpi,\r\n      value: kpi.id === 'new_customers' \r\n        ? Math.floor(Math.random() * 20) + 15\r\n        : kpi.id === 'total_deals'\r\n        ? Math.floor(Math.random() * 50) + 120\r\n        : kpi.id === 'revenue'\r\n        ? `${(Math.random() * 500 + 1500).toFixed(0)}K`\r\n        : kpi.value,\r\n      change: Math.random() * 30 - 10,\r\n      lastUpdated: new Date()\r\n    })));\r\n    \r\n    setLastRefresh(new Date());\r\n  };\r\n\r\n  const addRandomUpdate = () => {\r\n    const newUpdates = [\r\n      {\r\n        title: 'Deal được cập nhật',\r\n        description: 'Deal CRM System chuyển sang giai đoạn Negotiation',\r\n        type: 'deal_closed' as const\r\n      },\r\n      {\r\n        title: 'Khách hàng mới',\r\n        description: 'Tech Startup DEF đã quan tâm đến dịch vụ',\r\n        type: 'new_customer' as const\r\n      },\r\n      {\r\n        title: 'Cột mốc doanh thu',\r\n        description: 'Đạt 2M doanh thu trong tháng này',\r\n        type: 'revenue_milestone' as const,\r\n        value: '2M'\r\n      }\r\n    ];\r\n\r\n    const randomUpdate = newUpdates[Math.floor(Math.random() * newUpdates.length)];\r\n    \r\n    const update: DynamicUpdate = {\r\n      id: `update_${Date.now()}`,\r\n      title: randomUpdate.title,\r\n      description: randomUpdate.description,\r\n      timestamp: new Date(),\r\n      type: randomUpdate.type,\r\n      value: randomUpdate.value,\r\n      isNew: true\r\n    };\r\n\r\n    setDynamicUpdates(prev => [update, ...prev.slice(0, 9)]); // Keep only 10 latest\r\n    \r\n    // Remove \"new\" flag after 10 seconds\r\n    setTimeout(() => {\r\n      setDynamicUpdates(prev => \r\n        prev.map(u => u.id === update.id ? { ...u, isNew: false } : u)\r\n      );\r\n    }, 10000);\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    await updateKPIData();\r\n    addRandomUpdate();\r\n  };\r\n\r\n  const getChangeColor = (change: number) => {\r\n    if (change > 0) return theme.palette.success.main;\r\n    if (change < 0) return theme.palette.error.main;\r\n    return theme.palette.text.secondary;\r\n  };\r\n\r\n  const getChangeIcon = (change: number) => {\r\n    if (change > 0) return <TrendingUpIcon sx={{ fontSize: 16 }} />;\r\n    if (change < 0) return <TrendingDownIcon sx={{ fontSize: 16 }} />;\r\n    return null;\r\n  };\r\n\r\n  const formatTimeAgo = (date: Date) => {\r\n    const now = new Date();\r\n    const diffMs = now.getTime() - date.getTime();\r\n    const diffMins = Math.floor(diffMs / 60000);\r\n    const diffHours = Math.floor(diffMs / 3600000);\r\n    \r\n    if (diffMins < 1) return 'vừa xong';\r\n    if (diffMins < 60) return `${diffMins} phút trước`;\r\n    if (diffHours < 24) return `${diffHours} giờ trước`;\r\n    return date.toLocaleDateString('vi-VN');\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mb: 4 }}>\r\n      {/* Header similar to Crunchbase */}\r\n      <Box sx={{ \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-between',\r\n        mb: 3 \r\n      }}>\r\n        <Box>\r\n          <Typography variant=\"h5\" sx={{ fontWeight: 'bold', color: 'text.primary' }}>\r\n            THÁNG NÀY TRÊN CRM\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mt: 1 }}>\r\n            <Chip \r\n              label={`${dynamicUpdates.length} cập nhật mới`}\r\n              size=\"small\"\r\n              sx={{ \r\n                backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 'bold'\r\n              }}\r\n            />\r\n            <Typography variant=\"caption\" color=\"text.secondary\">\r\n              Cập nhật lần cuối: {formatTimeAgo(lastRefresh)}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <Tooltip title={showAllKpis ? \"Hiển thị luân phiên\" : \"Hiển thị tất cả\"}>\r\n            <IconButton \r\n              size=\"small\" \r\n              onClick={() => setShowAllKpis(!showAllKpis)}\r\n            >\r\n              {showAllKpis ? <ViewCarouselIcon /> : <ViewModuleIcon />}\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Làm mới dữ liệu\">\r\n            <IconButton onClick={handleRefresh} color=\"primary\">\r\n              <RefreshIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* KPI Stats Grid */}\r\n      <Box sx={{ position: 'relative', minHeight: 180, mb: 4 }}>\r\n        <Box sx={{ \r\n          display: showAllKpis ? 'grid' : 'block',\r\n          gridTemplateColumns: {\r\n            xs: '1fr',\r\n            sm: 'repeat(2, 1fr)',\r\n            md: 'repeat(5, 1fr)'\r\n          },\r\n          gap: 3,\r\n          position: 'relative',\r\n          minHeight: 150\r\n        }}>\r\n          {kpiData.map((kpi, index) => (\r\n            <Fade \r\n              key={kpi.id}\r\n              in={showAllKpis || activeKpiIndex === index} \r\n              timeout={{ enter: 500, exit: 300 }}\r\n              style={{\r\n                display: (!showAllKpis && activeKpiIndex !== index) ? 'none' : 'block',\r\n                transitionDelay: showAllKpis ? `${index * 100}ms` : '0ms'\r\n              }}\r\n            >\r\n              <Paper\r\n                elevation={2}\r\n                sx={{\r\n                  p: 2.5,\r\n                  height: '100%',\r\n                  borderRadius: 2,\r\n                  background: `linear-gradient(135deg, ${alpha(kpi.color, 0.05)} 0%, ${alpha(kpi.color, 0.02)} 100%)`,\r\n                  border: `1px solid ${alpha(kpi.color, 0.1)}`,\r\n                  transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                  position: !showAllKpis ? 'absolute' : 'relative',\r\n                  top: 0,\r\n                  left: 0,\r\n                  width: !showAllKpis ? '100%' : 'auto',\r\n                  zIndex: !showAllKpis && activeKpiIndex === index ? 2 : 1,\r\n                  '&:hover': {\r\n                    transform: 'translateY(-2px)',\r\n                    boxShadow: `0 8px 25px ${alpha(kpi.color, 0.15)}`\r\n                  }\r\n                }}\r\n              >\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                  <Box \r\n                    sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      p: 1, \r\n                      borderRadius: 1,\r\n                      backgroundColor: alpha(kpi.color, 0.1)\r\n                    }}\r\n                  >\r\n                    <Box sx={{ color: kpi.color }}>\r\n                      {kpi.icon}\r\n                    </Box>\r\n                  </Box>\r\n                  <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', color: kpi.color }}>\r\n                    {kpi.title}\r\n                  </Typography>\r\n                </Box>\r\n                \r\n                {isLoading ? (\r\n                  <Skeleton variant=\"rectangular\" width=\"100%\" height={40} />\r\n                ) : (\r\n                  <Typography variant=\"h4\" sx={{ fontWeight: 'bold', mb: 1, color: 'text.primary' }}>\r\n                    {kpi.value}\r\n                  </Typography>\r\n                )}\r\n\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                  {getChangeIcon(kpi.change)}\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    sx={{\r\n                      color: getChangeColor(kpi.change),\r\n                      fontWeight: 'medium'\r\n                    }}\r\n                  >\r\n                    {kpi.change > 0 ? '+' : ''}{kpi.change.toFixed(1)}%\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                    {kpi.changeLabel}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, display: 'block' }}>\r\n                  {kpi.description}\r\n                </Typography>\r\n              </Paper>\r\n            </Fade>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Dynamic Updates Section - Similar to Crunchbase activity feed */}\r\n      <Paper\r\n        elevation={1}\r\n        sx={{\r\n          borderRadius: 2,\r\n          overflow: 'hidden',\r\n          border: `1px solid ${theme.palette.divider}`\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            p: 2,\r\n            backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n            borderBottom: `1px solid ${theme.palette.divider}`\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n            🔥 Hoạt động gần đây\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            Cập nhật theo thời gian thực từ hệ thống\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box sx={{ maxHeight: 300, overflow: 'auto' }}>\r\n          {dynamicUpdates.map((update, index) => (\r\n            <Box\r\n              key={update.id}\r\n              sx={{\r\n                p: 2,\r\n                borderBottom: index < dynamicUpdates.length - 1 ? `1px solid ${theme.palette.divider}` : 'none',\r\n                backgroundColor: update.isNew ? alpha(theme.palette.success.main, 0.05) : 'transparent',\r\n                transition: 'all 0.3s ease',\r\n                '&:hover': {\r\n                  backgroundColor: alpha(theme.palette.action.hover, 0.5)\r\n                }\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\r\n                <Box sx={{ flex: 1 }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 0.5 }}>\r\n                    <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold' }}>\r\n                      {update.title}\r\n                    </Typography>\r\n                    {update.isNew && (\r\n                      <Chip\r\n                        label=\"MỚI\"\r\n                        size=\"small\"\r\n                        sx={{\r\n                          height: 18,\r\n                          fontSize: '0.7rem',\r\n                          backgroundColor: theme.palette.success.main,\r\n                          color: 'white'\r\n                        }}\r\n                      />\r\n                    )}\r\n                    {update.value && (\r\n                      <Chip\r\n                        label={update.value}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        sx={{ height: 18, fontSize: '0.7rem' }}\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {update.description}\r\n                  </Typography>\r\n                </Box>\r\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 2 }}>\r\n                  {formatTimeAgo(update.timestamp)}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DynamicKPIStats;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Chip,\r\n  Card,\r\n  CardContent,\r\n  LinearProgress,\r\n  useTheme,\r\n  alpha,\r\n  Tab,\r\n  Tabs,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport {\r\n  TrendingUp as TrendingUpIcon,\r\n  Psychology as PsychologyIcon,\r\n  Timeline as TimelineIcon,\r\n  Lightbulb as LightbulbIcon,\r\n  ShowChart as ShowChartIcon,\r\n  AttachMoney as MoneyIcon,\r\n  People as PeopleIcon,\r\n  Business as BusinessIcon,\r\n  Refresh as RefreshIcon,\r\n  Star as StarIcon,\r\n  ArrowUpward as ArrowUpIcon,\r\n  ArrowDownward as ArrowDownIcon\r\n} from '@mui/icons-material';\r\nimport { aiOrchestrator, AIRequest } from '../../../services/aiOrchestration';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\ninterface TrendingItem {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  growth: string;\r\n  confidence: number;\r\n  category: 'market' | 'technology' | 'industry';\r\n  icon: React.ReactNode;\r\n  color: string;\r\n}\r\n\r\ninterface InsightItem {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  impact: 'high' | 'medium' | 'low';\r\n  actionable: boolean;\r\n  source: string;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface PredictionItem {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  probability: number;\r\n  timeframe: string;\r\n  value?: string;\r\n  type: 'deal' | 'market' | 'customer' | 'revenue';\r\n  riskLevel: 'low' | 'medium' | 'high';\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ pt: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TrendingInsightsPredictions: React.FC = () => {\r\n  const theme = useTheme();\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [trendingData, setTrendingData] = useState<TrendingItem[]>([]);\r\n  const [insightsData, setInsightsData] = useState<InsightItem[]>([]);\r\n  const [predictionsData, setPredictionsData] = useState<PredictionItem[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadAllData();\r\n    \r\n    // Auto refresh every 2 minutes\r\n    const interval = setInterval(loadAllData, 120000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const loadAllData = async () => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Load trending data\r\n      const trendingRequest: AIRequest = {\r\n        id: `trending_${Date.now()}`,\r\n        type: 'market_analysis',\r\n        data: { type: 'trending' },\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      const trendingResponse = await aiOrchestrator.processRequest(trendingRequest);\r\n      setTrendingData(generateTrendingData(trendingResponse.result));\r\n\r\n      // Load insights data\r\n      const insightsRequest: AIRequest = {\r\n        id: `insights_${Date.now()}`,\r\n        type: 'market_analysis',\r\n        data: { type: 'insights' },\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      const insightsResponse = await aiOrchestrator.processRequest(insightsRequest);\r\n      setInsightsData(generateInsightsData(insightsResponse.result));\r\n\r\n      // Load predictions data\r\n      const predictionsRequest: AIRequest = {\r\n        id: `predictions_${Date.now()}`,\r\n        type: 'deal_prediction',\r\n        data: { type: 'predictions' },\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      const predictionsResponse = await aiOrchestrator.processRequest(predictionsRequest);\r\n      setPredictionsData(generatePredictionsData(predictionsResponse.result));\r\n      \r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateTrendingData = (aiResult: any): TrendingItem[] => {\r\n    const trends = aiResult?.trends || [];\r\n    \r\n    const defaultTrends: TrendingItem[] = [\r\n      {\r\n        id: 'cloud-computing',\r\n        title: 'Cloud Computing',\r\n        description: 'Doanh nghiệp SME đang chuyển đổi sang cloud với tốc độ kỷ lục',\r\n        growth: '+25%',\r\n        confidence: 0.92,\r\n        category: 'technology',\r\n        icon: <ShowChartIcon />,\r\n        color: theme.palette.primary.main\r\n      },\r\n      {\r\n        id: 'ai-solutions',\r\n        title: 'AI/ML Solutions',\r\n        description: 'Nhu cầu về giải pháp AI tăng vượt bậc trong các doanh nghiệp',\r\n        growth: '+35%',\r\n        confidence: 0.88,\r\n        category: 'technology',\r\n        icon: <PsychologyIcon />,\r\n        color: theme.palette.secondary.main\r\n      },\r\n      {\r\n        id: 'cybersecurity',\r\n        title: 'Cybersecurity',\r\n        description: 'An ninh mạng trở thành ưu tiên hàng đầu sau các vụ tấn công',\r\n        growth: '+18%',\r\n        confidence: 0.85,\r\n        category: 'technology',\r\n        icon: <BusinessIcon />,\r\n        color: theme.palette.warning.main\r\n      },\r\n      {\r\n        id: 'digital-transformation',\r\n        title: 'Digital Transformation',\r\n        description: 'Chuyển đổi số được đẩy mạnh trong mọi ngành nghề',\r\n        growth: '+22%',\r\n        confidence: 0.90,\r\n        category: 'industry',\r\n        icon: <TrendingUpIcon />,\r\n        color: theme.palette.success.main\r\n      }\r\n    ];\r\n\r\n    // Merge AI data with default data\r\n    return trends.length > 0 ? trends.map((trend: any, index: number) => ({\r\n      ...defaultTrends[index % defaultTrends.length],\r\n      title: trend.name || defaultTrends[index % defaultTrends.length].title,\r\n      growth: trend.growth || defaultTrends[index % defaultTrends.length].growth,\r\n      confidence: trend.confidence || defaultTrends[index % defaultTrends.length].confidence\r\n    })) : defaultTrends;\r\n  };\r\n\r\n  const generateInsightsData = (aiResult: any): InsightItem[] => {\r\n    const insights = aiResult?.insights || [];\r\n    \r\n    const defaultInsights: InsightItem[] = [\r\n      {\r\n        id: 'market-growth',\r\n        title: 'Thị trường công nghệ Q4 tăng trưởng mạnh',\r\n        description: 'Doanh thu từ các dự án công nghệ tăng 28% so với Q3, chủ yếu từ segment AI và Cloud',\r\n        impact: 'high',\r\n        actionable: true,\r\n        source: 'Market Analysis AI',\r\n        timestamp: new Date()\r\n      },\r\n      {\r\n        id: 'customer-behavior',\r\n        title: 'Hành vi khách hàng thay đổi',\r\n        description: 'Khách hàng SME có xu hướng đầu tư vào giải pháp tích hợp thay vì từng sản phẩm riêng lẻ',\r\n        impact: 'medium',\r\n        actionable: true,\r\n        source: 'Customer Analytics',\r\n        timestamp: new Date(Date.now() - 30 * 60 * 1000)\r\n      },\r\n      {\r\n        id: 'competitive-landscape',\r\n        title: 'Cảnh quan cạnh tranh thay đổi',\r\n        description: 'Các đối thủ đang tập trung vào pricing strategy, cần điều chỉnh chiến lược giá',\r\n        impact: 'high',\r\n        actionable: true,\r\n        source: 'Competitive Intelligence',\r\n        timestamp: new Date(Date.now() - 60 * 60 * 1000)\r\n      },\r\n      {\r\n        id: 'technology-adoption',\r\n        title: 'Tốc độ áp dụng công nghệ tăng',\r\n        description: 'Thời gian từ demo đến quyết định mua giảm 40%, khách hàng quyết định nhanh hơn',\r\n        impact: 'medium',\r\n        actionable: false,\r\n        source: 'Sales Analytics',\r\n        timestamp: new Date(Date.now() - 90 * 60 * 1000)\r\n      }\r\n    ];\r\n\r\n    return insights.length > 0 ? insights.map((insight: string, index: number) => ({\r\n      ...defaultInsights[index % defaultInsights.length],\r\n      description: insight\r\n    })) : defaultInsights;\r\n  };\r\n\r\n  const generatePredictionsData = (aiResult: any): PredictionItem[] => {\r\n    const predictions = aiResult?.topDeals || [];\r\n    \r\n    const defaultPredictions: PredictionItem[] = [\r\n      {\r\n        id: 'deal-abc-corp',\r\n        title: 'Deal ABC Corp - ERP System',\r\n        description: 'Dự án triển khai hệ thống ERP cho ABC Corp có xác suất thành công cao',\r\n        probability: 0.85,\r\n        timeframe: '2 tuần',\r\n        value: '250K',\r\n        type: 'deal',\r\n        riskLevel: 'low'\r\n      },\r\n      {\r\n        id: 'market-ai-growth',\r\n        title: 'Thị trường AI sẽ bùng nổ',\r\n        description: 'Dự đoán thị trường AI/ML sẽ tăng trưởng 40% trong 6 tháng tới',\r\n        probability: 0.78,\r\n        timeframe: '6 tháng',\r\n        type: 'market',\r\n        riskLevel: 'medium'\r\n      },\r\n      {\r\n        id: 'customer-xyz-expansion',\r\n        title: 'Khách hàng XYZ mở rộng',\r\n        description: 'XYZ Ltd có khả năng cao sẽ mua thêm module CRM trong Q1 năm sau',\r\n        probability: 0.72,\r\n        timeframe: '3 tháng',\r\n        value: '180K',\r\n        type: 'customer',\r\n        riskLevel: 'low'\r\n      },\r\n      {\r\n        id: 'revenue-milestone',\r\n        title: 'Đạt mốc doanh thu 3M',\r\n        description: 'Dự đoán sẽ đạt mốc doanh thu 3M trong Q1 năm sau dựa trên pipeline hiện tại',\r\n        probability: 0.68,\r\n        timeframe: '4 tháng',\r\n        value: '3M',\r\n        type: 'revenue',\r\n        riskLevel: 'medium'\r\n      }\r\n    ];\r\n\r\n    return predictions.length > 0 ? predictions.map((prediction: any, index: number) => ({\r\n      ...defaultPredictions[index % defaultPredictions.length],\r\n      title: prediction.name || defaultPredictions[index % defaultPredictions.length].title,\r\n      probability: prediction.probability || defaultPredictions[index % defaultPredictions.length].probability,\r\n      value: prediction.value ? `${prediction.value}` : defaultPredictions[index % defaultPredictions.length].value\r\n    })) : defaultPredictions;\r\n  };\r\n\r\n  const getImpactColor = (impact: string) => {\r\n    switch (impact) {\r\n      case 'high': return theme.palette.error.main;\r\n      case 'medium': return theme.palette.warning.main;\r\n      case 'low': return theme.palette.success.main;\r\n      default: return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const getRiskColor = (risk: string) => {\r\n    switch (risk) {\r\n      case 'high': return theme.palette.error.main;\r\n      case 'medium': return theme.palette.warning.main;\r\n      case 'low': return theme.palette.success.main;\r\n      default: return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const getTypeIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'deal': return <MoneyIcon />;\r\n      case 'market': return <ShowChartIcon />;\r\n      case 'customer': return <PeopleIcon />;\r\n      case 'revenue': return <TrendingUpIcon />;\r\n      default: return <StarIcon />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={2} sx={{ borderRadius: 2, overflow: 'hidden' }}>\r\n      {/* Header */}\r\n      <Box sx={{ \r\n        p: 3, \r\n        backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n        borderBottom: `1px solid ${theme.palette.divider}`\r\n      }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <Box>\r\n            <Typography variant=\"h5\" sx={{ fontWeight: 'bold', mb: 1 }}>\r\n              📊 Phân tích thông minh\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Trending • Insights • Predictions được hỗ trợ bởi AI\r\n            </Typography>\r\n          </Box>\r\n          <Tooltip title=\"Làm mới dữ liệu\">\r\n            <IconButton onClick={loadAllData} color=\"primary\">\r\n              <RefreshIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Tabs */}\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs \r\n          value={tabValue} \r\n          onChange={(e, newValue) => setTabValue(newValue)}\r\n          sx={{ px: 3 }}\r\n        >\r\n          <Tab \r\n            icon={<TrendingUpIcon />} \r\n            label=\"Trending\" \r\n            iconPosition=\"start\"\r\n            sx={{ minHeight: 'auto', py: 2 }}\r\n          />\r\n          <Tab \r\n            icon={<LightbulbIcon />} \r\n            label=\"Insights\" \r\n            iconPosition=\"start\"\r\n            sx={{ minHeight: 'auto', py: 2 }}\r\n          />\r\n          <Tab \r\n            icon={<TimelineIcon />} \r\n            label=\"Predictions\" \r\n            iconPosition=\"start\"\r\n            sx={{ minHeight: 'auto', py: 2 }}\r\n          />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      {/* Tab Panels */}\r\n      <Box sx={{ p: 3 }}>\r\n        {/* Trending Panel */}\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box \r\n            sx={{ \r\n              display: 'grid',\r\n              gridTemplateColumns: {\r\n                xs: '1fr',\r\n                sm: 'repeat(2, 1fr)'\r\n              },\r\n              gap: 2\r\n            }}\r\n          >\r\n            {trendingData.map((trend) => (\r\n              <Card \r\n                key={trend.id}\r\n                elevation={1}\r\n                sx={{ \r\n                  height: '100%',\r\n                  border: `1px solid ${alpha(trend.color, 0.2)}`,\r\n                  '&:hover': {\r\n                    transform: 'translateY(-2px)',\r\n                    boxShadow: `0 4px 20px ${alpha(trend.color, 0.15)}`\r\n                  },\r\n                  transition: 'all 0.3s ease'\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <Avatar\r\n                      sx={{\r\n                        backgroundColor: alpha(trend.color, 0.1),\r\n                        color: trend.color,\r\n                        mr: 2\r\n                      }}\r\n                    >\r\n                      {trend.icon}\r\n                    </Avatar>\r\n                    <Box sx={{ flex: 1 }}>\r\n                      <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n                        {trend.title}\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                        <Chip\r\n                          label={trend.growth}\r\n                          size=\"small\"\r\n                          icon={<ArrowUpIcon sx={{ fontSize: 14 }} />}\r\n                          sx={{\r\n                            backgroundColor: alpha(theme.palette.success.main, 0.1),\r\n                            color: theme.palette.success.main,\r\n                            fontWeight: 'bold'\r\n                          }}\r\n                        />\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          Độ tin cậy: {Math.round(trend.confidence * 100)}%\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {trend.description}\r\n                  </Typography>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    value={trend.confidence * 100}\r\n                    sx={{\r\n                      mt: 2,\r\n                      height: 6,\r\n                      borderRadius: 3,\r\n                      backgroundColor: alpha(trend.color, 0.1),\r\n                      '& .MuiLinearProgress-bar': {\r\n                        backgroundColor: trend.color,\r\n                        borderRadius: 3\r\n                      }\r\n                    }}\r\n                  />\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n        </TabPanel>\r\n\r\n        {/* Insights Panel */}\r\n        <TabPanel value={tabValue} index={1}>\r\n          <List>\r\n            {insightsData.map((insight, index) => (\r\n              <React.Fragment key={insight.id}>\r\n                <ListItem alignItems=\"flex-start\" sx={{ px: 0 }}>\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      sx={{\r\n                        backgroundColor: alpha(getImpactColor(insight.impact), 0.1),\r\n                        color: getImpactColor(insight.impact)\r\n                      }}\r\n                    >\r\n                      <LightbulbIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\r\n                        <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\r\n                          {insight.title}\r\n                        </Typography>\r\n                        <Chip\r\n                          label={insight.impact.toUpperCase()}\r\n                          size=\"small\"\r\n                          sx={{\r\n                            backgroundColor: alpha(getImpactColor(insight.impact), 0.1),\r\n                            color: getImpactColor(insight.impact),\r\n                            fontWeight: 'bold',\r\n                            fontSize: '0.7rem'\r\n                          }}\r\n                        />\r\n                        {insight.actionable && (\r\n                          <Chip\r\n                            label=\"ACTIONABLE\"\r\n                            size=\"small\"\r\n                            sx={{\r\n                              backgroundColor: alpha(theme.palette.info.main, 0.1),\r\n                              color: theme.palette.info.main,\r\n                              fontSize: '0.7rem'\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </Box>\r\n                    }\r\n                    secondary={\r\n                      <Box>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                          {insight.description}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          Nguồn: {insight.source} • {insight.timestamp.toLocaleTimeString('vi-VN')}\r\n                        </Typography>\r\n                      </Box>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                {index < insightsData.length - 1 && <Divider variant=\"inset\" component=\"li\" />}\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n        </TabPanel>\r\n\r\n        {/* Predictions Panel */}\r\n        <TabPanel value={tabValue} index={2}>\r\n          <Box \r\n            sx={{ \r\n              display: 'grid',\r\n              gridTemplateColumns: {\r\n                xs: '1fr',\r\n                sm: 'repeat(2, 1fr)'\r\n              },\r\n              gap: 2\r\n            }}\r\n          >\r\n            {predictionsData.map((prediction) => (\r\n              <Card \r\n                key={prediction.id}\r\n                elevation={1}\r\n                sx={{ \r\n                  height: '100%',\r\n                  border: `1px solid ${alpha(getRiskColor(prediction.riskLevel), 0.2)}`,\r\n                  '&:hover': {\r\n                    transform: 'translateY(-2px)',\r\n                    boxShadow: `0 4px 20px ${alpha(getRiskColor(prediction.riskLevel), 0.15)}`\r\n                  },\r\n                  transition: 'all 0.3s ease'\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <Avatar\r\n                      sx={{\r\n                        backgroundColor: alpha(getRiskColor(prediction.riskLevel), 0.1),\r\n                        color: getRiskColor(prediction.riskLevel),\r\n                        mr: 2\r\n                      }}\r\n                    >\r\n                      {getTypeIcon(prediction.type)}\r\n                    </Avatar>\r\n                    <Box sx={{ flex: 1 }}>\r\n                      <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', mb: 0.5 }}>\r\n                        {prediction.title}\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flexWrap: 'wrap' }}>\r\n                        <Chip\r\n                          label={`${Math.round(prediction.probability * 100)}% xác suất`}\r\n                          size=\"small\"\r\n                          sx={{\r\n                            backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                            color: theme.palette.primary.main,\r\n                            fontWeight: 'bold'\r\n                          }}\r\n                        />\r\n                        {prediction.value && (\r\n                          <Chip\r\n                            label={prediction.value}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                          />\r\n                        )}\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {prediction.timeframe}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n                    {prediction.description}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <Chip\r\n                      label={`Risk: ${prediction.riskLevel}`}\r\n                      size=\"small\"\r\n                      sx={{\r\n                        backgroundColor: alpha(getRiskColor(prediction.riskLevel), 0.1),\r\n                        color: getRiskColor(prediction.riskLevel),\r\n                        textTransform: 'capitalize'\r\n                      }}\r\n                    />\r\n                    <LinearProgress\r\n                      variant=\"determinate\"\r\n                      value={prediction.probability * 100}\r\n                      sx={{\r\n                        width: '60%',\r\n                        height: 6,\r\n                        borderRadius: 3,\r\n                        backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                        '& .MuiLinearProgress-bar': {\r\n                          backgroundColor: theme.palette.primary.main,\r\n                          borderRadius: 3\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n        </TabPanel>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TrendingInsightsPredictions;\r\n","import React, { useState } from 'react';\r\nimport { \r\n  Box, \r\n  Paper, \r\n  Typography, \r\n  ToggleButtonGroup, \r\n  ToggleButton,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  SelectChangeEvent\r\n} from '@mui/material';\r\nimport {\r\n  BarChart as BarChartIcon,\r\n  PieChart as PieChartIcon,\r\n  ShowChart as LineChartIcon,\r\n  TableChart as TableChartIcon\r\n} from '@mui/icons-material';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  LineChart,\r\n  Line\r\n} from 'recharts';\r\n\r\n// Dữ liệu mẫu cho biểu đồ doanh thu theo nhân viên\r\nconst REVENUE_DATA = [\r\n  { name: 'Nguyễn Văn A', value: 1200 },\r\n  { name: 'Trần Thị B', value: 950 },\r\n  { name: 'Lê Văn C', value: 850 },\r\n  { name: 'Phạm Thị D', value: 700 },\r\n  { name: 'Hoàng Văn E', value: 500 },\r\n];\r\n\r\n// Dữ liệu mẫu cho biểu đồ trạng thái deal\r\nconst DEAL_STATUS_DATA = [\r\n  { name: 'Lead', value: 45, color: '#f87171' },\r\n  { name: 'Báo giá', value: 32, color: '#fbbf24' },\r\n  { name: 'Đàm phán', value: 18, color: '#60a5fa' },\r\n  { name: 'Win', value: 38, color: '#34d399' },\r\n  { name: 'Lose', value: 23, color: '#9ca3af' },\r\n];\r\n\r\n// Dữ liệu mẫu cho khách hàng mới\r\nconst NEW_CUSTOMERS_DATA = [\r\n  { name: 'Hôm nay', value: 12 },\r\n  { name: 'Hôm qua', value: 10 },\r\n  { name: '2 ngày trước', value: 8 },\r\n  { name: '3 ngày trước', value: 15 },\r\n  { name: '4 ngày trước', value: 7 },\r\n];\r\n\r\n// Dữ liệu mẫu cho doanh thu theo tháng\r\nconst REVENUE_BY_MONTH_DATA = [\r\n  { name: 'T1', value: 800 },\r\n  { name: 'T2', value: 950 },\r\n  { name: 'T3', value: 1100 },\r\n  { name: 'T4', value: 1250 },\r\n  { name: 'T5', value: 1400 },\r\n  { name: 'T6', value: 1600 },\r\n];\r\n\r\n// Dữ liệu mẫu cho tỉ lệ chuyển đổi\r\nconst CONVERSION_RATE_DATA = [\r\n  { name: 'Chuyển đổi', value: 65, color: '#34d399' },\r\n  { name: 'Không chuyển đổi', value: 35, color: '#f87171' },\r\n];\r\n\r\n// Dữ liệu mẫu cho biểu đồ doanh thu theo tháng\r\nconst MONTHLY_REVENUE_DATA = [\r\n  { name: 'T1', value: 1200 },\r\n  { name: 'T2', value: 1900 },\r\n  { name: 'T3', value: 1500 },\r\n  { name: 'T4', value: 2200 },\r\n  { name: 'T5', value: 1800 },\r\n  { name: 'T6', value: 2400 },\r\n  { name: 'T7', value: 2100 },\r\n];\r\n\r\n// Màu sắc cho biểu đồ\r\nconst COLORS = ['#3b82f6', '#10b981', '#f59e0b', '#8b5cf6', '#ef4444'];\r\n\r\n// Loại biểu đồ\r\ntype ChartType = 'bar' | 'pie' | 'line' | 'table';\r\n\r\n// Loại thời gian\r\ntype TimeRange = 'today' | 'week' | 'month' | 'quarter' | 'year';\r\n\r\ninterface DynamicChartsProps {\r\n  query: string;\r\n}\r\n\r\nconst DynamicCharts: React.FC<DynamicChartsProps> = ({ query }) => {\r\n  const [chartType, setChartType] = useState<ChartType>('bar');\r\n  const [timeRange, setTimeRange] = useState<TimeRange>('month');\r\n\r\n  const handleChartTypeChange = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newChartType: ChartType | null,\r\n  ) => {\r\n    if (newChartType !== null) {\r\n      setChartType(newChartType);\r\n    }\r\n  };\r\n\r\n  const handleTimeRangeChange = (event: SelectChangeEvent) => {\r\n    setTimeRange(event.target.value as TimeRange);\r\n  };\r\n\r\n  // Xác định loại biểu đồ và dữ liệu dựa trên query\r\n  const getChartTypeFromQuery = (query: string): { type: string; chartType: ChartType } => {\r\n    const lowercaseQuery = query.toLowerCase();\r\n    \r\n    // Khách hàng mới\r\n    if (lowercaseQuery.includes('khách hàng mới') || \r\n        (lowercaseQuery.includes('khách hàng') && lowercaseQuery.includes('mới'))) {\r\n      return { type: 'newCustomers', chartType: 'bar' };\r\n    }\r\n    \r\n    // Doanh thu theo nhân viên\r\n    else if (lowercaseQuery.includes('doanh thu') && lowercaseQuery.includes('nhân viên')) {\r\n      return { type: 'revenueByEmployee', chartType: 'bar' };\r\n    }\r\n    \r\n    // Trạng thái deal\r\n    else if ((lowercaseQuery.includes('deal') || lowercaseQuery.includes('giao dịch')) && \r\n             (lowercaseQuery.includes('trạng thái') || lowercaseQuery.includes('giai đoạn'))) {\r\n      return { type: 'dealStatus', chartType: 'pie' };\r\n    }\r\n    \r\n    // Doanh thu theo tháng\r\n    else if (lowercaseQuery.includes('doanh thu') && \r\n             (lowercaseQuery.includes('tháng') || lowercaseQuery.includes('thời gian'))) {\r\n      return { type: 'revenueByMonth', chartType: 'line' };\r\n    }\r\n    \r\n    // Tỉ lệ chuyển đổi\r\n    else if (lowercaseQuery.includes('tỉ lệ') || lowercaseQuery.includes('chuyển đổi')) {\r\n      return { type: 'conversionRate', chartType: 'pie' };\r\n    }\r\n    \r\n    // Mặc định hiển thị biểu đồ doanh thu theo nhân viên\r\n    return { type: 'revenueByEmployee', chartType: 'bar' };\r\n  };\r\n\r\n  const { type: chartDataType } = getChartTypeFromQuery(query || '');\r\n  \r\n  // Tự động cập nhật loại biểu đồ dựa trên câu hỏi nếu có query mới\r\n  React.useEffect(() => {\r\n    if (query) {\r\n      const { chartType: newChartType } = getChartTypeFromQuery(query);\r\n      setChartType(newChartType);\r\n    }\r\n  }, [query]);\r\n  \r\n  // Lấy dữ liệu phù hợp với loại biểu đồ\r\n  const getChartData = () => {\r\n    switch (chartDataType) {\r\n      case 'newCustomers':\r\n        return NEW_CUSTOMERS_DATA;\r\n      case 'dealStatus':\r\n        return DEAL_STATUS_DATA;\r\n      case 'revenueByMonth':\r\n        return REVENUE_BY_MONTH_DATA;\r\n      case 'conversionRate':\r\n        return CONVERSION_RATE_DATA;\r\n      case 'revenueByEmployee':\r\n      default:\r\n        return REVENUE_DATA;\r\n    }\r\n  };\r\n  \r\n  const chartData = getChartData();\r\n\r\n  // Format giá trị tiền tệ\r\n  const formatValue = (value: number) => {\r\n    return `${value} triệu`;\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={2} sx={{ p: 3, borderRadius: 2, mb: 4 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n          📈 {query ? `Kết quả cho: \"${query}\"` : 'Phân tích dữ liệu kinh doanh'}\r\n        </Typography>\r\n        \r\n        <Box sx={{ display: 'flex', gap: 2 }}>\r\n          <ToggleButtonGroup\r\n            size=\"small\"\r\n            value={chartType}\r\n            exclusive\r\n            onChange={handleChartTypeChange}\r\n            aria-label=\"chart type\"\r\n          >\r\n            <ToggleButton value=\"bar\" aria-label=\"bar chart\">\r\n              <BarChartIcon fontSize=\"small\" />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"pie\" aria-label=\"pie chart\">\r\n              <PieChartIcon fontSize=\"small\" />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"line\" aria-label=\"line chart\">\r\n              <LineChartIcon fontSize=\"small\" />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"table\" aria-label=\"table\">\r\n              <TableChartIcon fontSize=\"small\" />\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n          \r\n          <FormControl size=\"small\" sx={{ minWidth: 120 }}>\r\n            <InputLabel id=\"time-range-label\">Thời gian</InputLabel>\r\n            <Select\r\n              labelId=\"time-range-label\"\r\n              id=\"time-range\"\r\n              value={timeRange}\r\n              label=\"Thời gian\"\r\n              onChange={handleTimeRangeChange}\r\n            >\r\n              <MenuItem value=\"today\">Hôm nay</MenuItem>\r\n              <MenuItem value=\"week\">Tuần này</MenuItem>\r\n              <MenuItem value=\"month\">Tháng này</MenuItem>\r\n              <MenuItem value=\"quarter\">Quý này</MenuItem>\r\n              <MenuItem value=\"year\">Năm nay</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box sx={{ height: 400, width: '100%' }}>\r\n        {chartType === 'bar' && (\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart\r\n              data={chartDataType === 'revenueByMonth' ? MONTHLY_REVENUE_DATA : REVENUE_DATA}\r\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis />\r\n              <Tooltip formatter={(value) => formatValue(value as number)} />\r\n              <Legend />\r\n              <Bar \r\n                dataKey=\"value\" \r\n                name={chartDataType === 'revenueByMonth' ? 'Doanh thu theo tháng' : 'Doanh thu theo nhân viên'} \r\n                fill=\"#3b82f6\" \r\n              />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n\r\n        {chartType === 'pie' && (\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <PieChart>\r\n              <Pie\r\n                data={chartDataType === 'dealStatus' ? DEAL_STATUS_DATA : REVENUE_DATA}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                labelLine={false}\r\n                outerRadius={150}\r\n                fill=\"#8884d8\"\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                label={({ name, percent }) => `${name}: ${percent ? (percent * 100).toFixed(0) : 0}%`}\r\n              >\r\n                {chartData.map((entry, index) => (\r\n                  <Cell \r\n                    key={`cell-${index}`} \r\n                    fill={(entry as any).color || COLORS[index % COLORS.length]} \r\n                  />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip formatter={(value) => formatValue(value as number)} />\r\n              <Legend />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n\r\n        {chartType === 'line' && (\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <LineChart\r\n              data={MONTHLY_REVENUE_DATA}\r\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis />\r\n              <Tooltip formatter={(value) => formatValue(value as number)} />\r\n              <Legend />\r\n              <Line \r\n                type=\"monotone\" \r\n                dataKey=\"value\" \r\n                name=\"Doanh thu theo tháng\" \r\n                stroke=\"#3b82f6\" \r\n                activeDot={{ r: 8 }} \r\n              />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n\r\n        {chartType === 'table' && (\r\n          <Box sx={{ height: '100%', overflow: 'auto' }}>\r\n            <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n              <thead>\r\n                <tr style={{ borderBottom: '2px solid #e2e8f0' }}>\r\n                  <th style={{ padding: '12px 16px', textAlign: 'left' }}>Tên</th>\r\n                  <th style={{ padding: '12px 16px', textAlign: 'right' }}>Giá trị</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {(chartDataType === 'dealStatus' ? DEAL_STATUS_DATA : \r\n                  chartDataType === 'revenueByMonth' ? MONTHLY_REVENUE_DATA : REVENUE_DATA)\r\n                  .map((item, index) => (\r\n                    <tr \r\n                      key={index} \r\n                      style={{ \r\n                        borderBottom: '1px solid #e2e8f0',\r\n                        backgroundColor: index % 2 === 0 ? '#f8fafc' : 'white'\r\n                      }}\r\n                    >\r\n                      <td style={{ padding: '12px 16px' }}>{item.name}</td>\r\n                      <td style={{ padding: '12px 16px', textAlign: 'right' }}>\r\n                        {formatValue(item.value)}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DynamicCharts;","import React, { useState } from 'react';\r\nimport { \r\n  Box, \r\n  Paper, \r\n  Typography, \r\n  List, \r\n  ListItem, \r\n  ListItemText, \r\n  ListItemSecondaryAction, \r\n  IconButton, \r\n  Divider,\r\n  Menu,\r\n  MenuItem,\r\n  Chip,\r\n  TextField,\r\n  InputAdornment\r\n} from '@mui/material';\r\nimport {\r\n  MoreVert as MoreVertIcon,\r\n  Download as DownloadIcon,\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  Search as SearchIcon,\r\n  Share as ShareIcon,\r\n  Favorite as FavoriteIcon,\r\n  FavoriteBorder as FavoriteBorderIcon\r\n} from '@mui/icons-material';\r\n\r\n// Dữ liệu mẫu cho các báo cáo đã lưu\r\nconst SAVED_REPORTS = [\r\n  {\r\n    id: 1,\r\n    title: 'Báo cáo doanh thu theo nhân viên Q2/2025',\r\n    createdAt: '2025-06-30',\r\n    type: 'bar',\r\n    favorite: true,\r\n    tags: ['doanh thu', 'nhân viên', 'quý 2']\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Phân tích tỉ lệ chuyển đổi lead sang khách hàng',\r\n    createdAt: '2025-06-25',\r\n    type: 'pie',\r\n    favorite: false,\r\n    tags: ['lead', 'chuyển đổi', 'phễu bán hàng']\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Báo cáo doanh thu theo tháng năm 2025',\r\n    createdAt: '2025-06-20',\r\n    type: 'line',\r\n    favorite: true,\r\n    tags: ['doanh thu', 'tháng', '2025']\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Top 10 khách hàng tiềm năng tháng 6',\r\n    createdAt: '2025-06-15',\r\n    type: 'table',\r\n    favorite: false,\r\n    tags: ['khách hàng tiềm năng', 'top 10']\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Phân tích hiệu quả chiến dịch marketing Q2',\r\n    createdAt: '2025-06-10',\r\n    type: 'bar',\r\n    favorite: false,\r\n    tags: ['marketing', 'chiến dịch', 'quý 2']\r\n  }\r\n];\r\n\r\nconst SavedReports: React.FC = () => {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [selectedReportId, setSelectedReportId] = useState<number | null>(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [favorites, setFavorites] = useState<Record<number, boolean>>(\r\n    SAVED_REPORTS.reduce((acc, report) => ({\r\n      ...acc,\r\n      [report.id]: report.favorite\r\n    }), {})\r\n  );\r\n\r\n  const handleMenuOpen = (event: React.MouseEvent<HTMLElement>, id: number) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedReportId(id);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setSelectedReportId(null);\r\n  };\r\n\r\n  const handleToggleFavorite = (id: number) => {\r\n    setFavorites(prev => ({\r\n      ...prev,\r\n      [id]: !prev[id]\r\n    }));\r\n  };\r\n\r\n  const getChartIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'bar':\r\n        return '📊';\r\n      case 'pie':\r\n        return '🥧';\r\n      case 'line':\r\n        return '📈';\r\n      case 'table':\r\n        return '📋';\r\n      default:\r\n        return '📄';\r\n    }\r\n  };\r\n\r\n  const filteredReports = SAVED_REPORTS.filter(report => \r\n    report.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    report.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))\r\n  );\r\n\r\n  return (\r\n    <Paper elevation={2} sx={{ borderRadius: 2 }}>\r\n      <Box sx={{ p: 2, borderBottom: '1px solid #e2e8f0' }}>\r\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mb: 2 }}>\r\n          📑 Báo cáo đã lưu\r\n        </Typography>\r\n        \r\n        <TextField\r\n          fullWidth\r\n          size=\"small\"\r\n          placeholder=\"Tìm kiếm báo cáo...\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon fontSize=\"small\" />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          sx={{ mb: 1 }}\r\n        />\r\n      </Box>\r\n\r\n      <List sx={{ maxHeight: '400px', overflow: 'auto' }}>\r\n        {filteredReports.length === 0 ? (\r\n          <ListItem>\r\n            <ListItemText \r\n              primary=\"Không tìm thấy báo cáo nào\" \r\n              secondary=\"Hãy thử tìm kiếm với từ khóa khác\" \r\n            />\r\n          </ListItem>\r\n        ) : (\r\n          filteredReports.map((report) => (\r\n            <React.Fragment key={report.id}>\r\n              <ListItem \r\n                sx={{ \r\n                  cursor: 'pointer',\r\n                  '&:hover': { \r\n                    backgroundColor: '#f8fafc' \r\n                  }\r\n                }}\r\n              >\r\n                <Box sx={{ mr: 1, fontSize: '1.5rem' }}>\r\n                  {getChartIcon(report.type)}\r\n                </Box>\r\n                <ListItemText\r\n                  primary={\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <Typography variant=\"body1\" sx={{ fontWeight: 'medium' }}>\r\n                        {report.title}\r\n                      </Typography>\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleToggleFavorite(report.id);\r\n                        }}\r\n                        sx={{ ml: 1, color: favorites[report.id] ? '#f43f5e' : 'inherit' }}\r\n                      >\r\n                        {favorites[report.id] ? <FavoriteIcon fontSize=\"small\" /> : <FavoriteBorderIcon fontSize=\"small\" />}\r\n                      </IconButton>\r\n                    </Box>\r\n                  }\r\n                  secondary={\r\n                    <Box sx={{ mt: 0.5 }}>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\r\n                        Tạo ngày: {report.createdAt}\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mt: 0.5 }}>\r\n                        {report.tags.map((tag, idx) => (\r\n                          <Chip \r\n                            key={idx} \r\n                            label={tag} \r\n                            size=\"small\" \r\n                            sx={{ \r\n                              height: 20, \r\n                              fontSize: '0.65rem',\r\n                              backgroundColor: '#f1f5f9'\r\n                            }} \r\n                          />\r\n                        ))}\r\n                      </Box>\r\n                    </Box>\r\n                  }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton \r\n                    edge=\"end\" \r\n                    onClick={(e) => handleMenuOpen(e, report.id)}\r\n                  >\r\n                    <MoreVertIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </React.Fragment>\r\n          ))\r\n        )}\r\n      </List>\r\n\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleMenuClose}\r\n        id={`report-menu-${selectedReportId}`}\r\n      >\r\n        <MenuItem onClick={handleMenuClose}>\r\n          <DownloadIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n          Tải xuống\r\n        </MenuItem>\r\n        <MenuItem onClick={handleMenuClose}>\r\n          <EditIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n          Chỉnh sửa\r\n        </MenuItem>\r\n        <MenuItem onClick={handleMenuClose}>\r\n          <ShareIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n          Chia sẻ\r\n        </MenuItem>\r\n        <Divider />\r\n        <MenuItem onClick={handleMenuClose} sx={{ color: 'error.main' }}>\r\n          <DeleteIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n          Xóa\r\n        </MenuItem>\r\n      </Menu>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SavedReports;","// Global AI Search Service\r\n// Thay thế tất cả bộ lọc search truyền thống bằng AI search thông minh\r\n\r\nimport { aiOrchestrator, AIRequest } from '../aiOrchestration';\r\n\r\nexport interface SearchResult {\r\n  id: string;\r\n  type: 'customer' | 'deal' | 'contact' | 'contract' | 'invoice' | 'requirement' | 'quotation';\r\n  title: string;\r\n  description: string;\r\n  relevanceScore: number;\r\n  metadata: Record<string, any>;\r\n  url: string;\r\n  timestamp: Date;\r\n}\r\n\r\nexport interface SearchContext {\r\n  currentPage: string;\r\n  userRole: string;\r\n  recentActivity: string[];\r\n  preferences: Record<string, any>;\r\n  // Additional context properties\r\n  contextual?: boolean;\r\n  quickSearch?: boolean;\r\n  maxResults?: number;\r\n}\r\n\r\nexport interface SearchFilters {\r\n  types?: string[];\r\n  dateRange?: {\r\n    start: Date;\r\n    end: Date;\r\n  };\r\n  status?: string[];\r\n  priority?: string[];\r\n  assignedTo?: string[];\r\n}\r\n\r\nexport class GlobalAISearchService {\r\n  private searchHistory: string[] = [];\r\n  private searchCache: Map<string, SearchResult[]> = new Map();\r\n  private contextData: SearchContext | null = null;\r\n\r\n  constructor() {\r\n    this.loadSearchHistory();\r\n  }\r\n\r\n  // Thiết lập context cho search\r\n  public setContext(context: SearchContext) {\r\n    this.contextData = context;\r\n  }\r\n\r\n  // Thực hiện AI search thông minh\r\n  public async search(\r\n    query: string, \r\n    filters?: SearchFilters,\r\n    context?: Partial<SearchContext>\r\n  ): Promise<SearchResult[]> {\r\n    // Kiểm tra cache trước\r\n    const cacheKey = this.generateCacheKey(query, filters);\r\n    if (this.searchCache.has(cacheKey)) {\r\n      return this.searchCache.get(cacheKey)!;\r\n    }\r\n\r\n    try {\r\n      // Chuẩn bị request cho AI Orchestrator\r\n      const searchRequest: AIRequest = {\r\n        id: `search_${Date.now()}`,\r\n        type: 'search',\r\n        data: {\r\n          query,\r\n          filters,\r\n          context: { ...this.contextData, ...context },\r\n          searchHistory: this.searchHistory.slice(-5) // 5 tìm kiếm gần nhất\r\n        },\r\n        timestamp: new Date()\r\n      };\r\n\r\n      // Gửi request tới AI Orchestrator\r\n      const response = await aiOrchestrator.processRequest(searchRequest);\r\n      \r\n      // Xử lý kết quả\r\n      const results = this.processSearchResults(response.result, query);\r\n      \r\n      // Lưu vào cache\r\n      this.searchCache.set(cacheKey, results);\r\n      \r\n      // Cập nhật lịch sử tìm kiếm\r\n      this.addToSearchHistory(query);\r\n      \r\n      return results;\r\n    } catch (error) {\r\n      console.error('Error in AI search:', error);\r\n      return this.getFallbackResults(query, filters);\r\n    }\r\n  }\r\n\r\n  // Tìm kiếm nhanh với gợi ý\r\n  public async quickSearch(query: string): Promise<SearchResult[]> {\r\n    if (query.length < 2) return [];\r\n    \r\n    return this.search(query, undefined, { \r\n      quickSearch: true,\r\n      maxResults: 5 \r\n    });\r\n  }\r\n\r\n  // Lấy gợi ý tìm kiếm thông minh\r\n  public async getSearchSuggestions(\r\n    partialQuery: string,\r\n    currentPage?: string\r\n  ): Promise<string[]> {\r\n    if (partialQuery.length < 2) {\r\n      return this.getPopularSearches(currentPage);\r\n    }\r\n\r\n    try {\r\n      const suggestionRequest: AIRequest = {\r\n        id: `suggestions_${Date.now()}`,\r\n        type: 'search',\r\n        data: {\r\n          type: 'suggestions',\r\n          partialQuery,\r\n          currentPage,\r\n          searchHistory: this.searchHistory\r\n        },\r\n        timestamp: new Date()\r\n      };\r\n\r\n      const response = await aiOrchestrator.processRequest(suggestionRequest);\r\n      return response.result.suggestions || [];\r\n    } catch (error) {\r\n      console.error('Error getting search suggestions:', error);\r\n      return this.getPopularSearches(currentPage);\r\n    }\r\n  }\r\n\r\n  // Tìm kiếm theo ngữ cảnh trang hiện tại\r\n  public async contextualSearch(query: string): Promise<SearchResult[]> {\r\n    const context = this.contextData?.currentPage || '';\r\n    \r\n    // Điều chỉnh search dựa trên trang hiện tại\r\n    const contextualFilters: SearchFilters = {};\r\n    \r\n    switch (context) {\r\n      case '/customers':\r\n        contextualFilters.types = ['customer', 'contact'];\r\n        break;\r\n      case '/deals':\r\n        contextualFilters.types = ['deal', 'quotation'];\r\n        break;\r\n      case '/contracts':\r\n        contextualFilters.types = ['contract', 'invoice'];\r\n        break;\r\n      default:\r\n        // Không giới hạn type cho trang khác\r\n        break;\r\n    }\r\n\r\n    return this.search(query, contextualFilters, { contextual: true });\r\n  }\r\n\r\n  // Tìm kiếm semantic (tìm theo ý nghĩa)\r\n  public async semanticSearch(query: string): Promise<SearchResult[]> {\r\n    const semanticRequest: AIRequest = {\r\n      id: `semantic_${Date.now()}`,\r\n      type: 'search',\r\n      data: {\r\n        type: 'semantic',\r\n        query,\r\n        context: this.contextData\r\n      },\r\n      timestamp: new Date()\r\n    };\r\n\r\n    try {\r\n      const response = await aiOrchestrator.processRequest(semanticRequest);\r\n      return this.processSearchResults(response.result, query);\r\n    } catch (error) {\r\n      console.error('Error in semantic search:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Xử lý kết quả search từ AI\r\n  private processSearchResults(aiResult: any, originalQuery: string): SearchResult[] {\r\n    const results = aiResult.results || [];\r\n    \r\n    return results.map((result: any, index: number) => ({\r\n      id: result.id || `result_${index}`,\r\n      type: result.type || 'customer',\r\n      title: result.title || result.name || 'Untitled',\r\n      description: result.description || result.summary || '',\r\n      relevanceScore: result.relevance || (1 - index * 0.1),\r\n      metadata: result.metadata || {},\r\n      url: this.generateResultUrl(result.type, result.id),\r\n      timestamp: new Date()\r\n    }));\r\n  }\r\n\r\n  // Tạo URL cho kết quả\r\n  private generateResultUrl(type: string, id: string): string {\r\n    const baseUrls: Record<string, string> = {\r\n      customer: '/customers',\r\n      deal: '/deals',\r\n      contact: '/contacts',\r\n      contract: '/contracts',\r\n      invoice: '/invoices',\r\n      requirement: '/requirements',\r\n      quotation: '/quotations'\r\n    };\r\n\r\n    return `${baseUrls[type] || '/'}/${id}`;\r\n  }\r\n\r\n  // Tạo cache key\r\n  private generateCacheKey(query: string, filters?: SearchFilters): string {\r\n    return `${query}_${JSON.stringify(filters || {})}`;\r\n  }\r\n\r\n  // Lấy kết quả fallback khi AI không hoạt động\r\n  private getFallbackResults(query: string, filters?: SearchFilters): SearchResult[] {\r\n    // Mô phỏng kết quả tìm kiếm cơ bản\r\n    const mockResults: SearchResult[] = [\r\n      {\r\n        id: '1',\r\n        type: 'customer',\r\n        title: `Khách hàng liên quan đến \"${query}\"`,\r\n        description: 'Kết quả tìm kiếm cơ bản',\r\n        relevanceScore: 0.8,\r\n        metadata: {},\r\n        url: '/customers/1',\r\n        timestamp: new Date()\r\n      }\r\n    ];\r\n\r\n    return mockResults;\r\n  }\r\n\r\n  // Lấy các tìm kiếm phổ biến\r\n  private getPopularSearches(currentPage?: string): string[] {\r\n    const popularSearches: Record<string, string[]> = {\r\n      '/dashboard': [\r\n        'Doanh thu tháng này',\r\n        'Deal đang pending',\r\n        'Khách hàng mới',\r\n        'Top performer'\r\n      ],\r\n      '/customers': [\r\n        'Khách hàng VIP',\r\n        'Khách hàng mới',\r\n        'Khách hàng chưa liên hệ',\r\n        'Khách hàng có deal lớn'\r\n      ],\r\n      '/deals': [\r\n        'Deal closing',\r\n        'Deal high value',\r\n        'Deal pending',\r\n        'Deal won this month'\r\n      ],\r\n      default: [\r\n        'Tìm kiếm nhanh',\r\n        'Báo cáo',\r\n        'Thống kê',\r\n        'Phân tích'\r\n      ]\r\n    };\r\n\r\n    return popularSearches[currentPage || 'default'] || popularSearches.default;\r\n  }\r\n\r\n  // Quản lý lịch sử tìm kiếm\r\n  private addToSearchHistory(query: string) {\r\n    if (!this.searchHistory.includes(query)) {\r\n      this.searchHistory.unshift(query);\r\n      this.searchHistory = this.searchHistory.slice(0, 20); // Giữ 20 tìm kiếm gần nhất\r\n      this.saveSearchHistory();\r\n    }\r\n  }\r\n\r\n  private loadSearchHistory() {\r\n    try {\r\n      const saved = localStorage.getItem('ai_search_history');\r\n      if (saved) {\r\n        this.searchHistory = JSON.parse(saved);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading search history:', error);\r\n    }\r\n  }\r\n\r\n  private saveSearchHistory() {\r\n    try {\r\n      localStorage.setItem('ai_search_history', JSON.stringify(this.searchHistory));\r\n    } catch (error) {\r\n      console.error('Error saving search history:', error);\r\n    }\r\n  }\r\n\r\n  // Xóa cache\r\n  public clearCache() {\r\n    this.searchCache.clear();\r\n  }\r\n\r\n  // Lấy thống kê search\r\n  public getSearchStats() {\r\n    return {\r\n      historyCount: this.searchHistory.length,\r\n      cacheSize: this.searchCache.size,\r\n      recentSearches: this.searchHistory.slice(0, 5)\r\n    };\r\n  }\r\n\r\n  // Xuất dữ liệu search để phân tích\r\n  public exportSearchData() {\r\n    return {\r\n      history: this.searchHistory,\r\n      context: this.contextData,\r\n      timestamp: new Date()\r\n    };\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const globalAISearch = new GlobalAISearchService();\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { \r\n  Box, \r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  TextField,\r\n  InputAdornment,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemButton,\r\n  Avatar,\r\n  Chip,\r\n  useTheme,\r\n  alpha,\r\n  Popper,\r\n  Divider,\r\n  Zoom,\r\n  Slide,\r\n  CircularProgress,\r\n  Tabs,\r\n  Tab,\r\n  Fade,\r\n  ClickAwayListener\r\n} from '@mui/material';\r\nimport CrmAssistantPanel from '../../components/CrmAssistantPanel';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { \r\n  Search as SearchIcon, \r\n  SmartToy as AIIcon,\r\n  Mic as MicIcon,\r\n  KeyboardArrowUp as ScrollUpIcon,\r\n  AutoAwesome as SparkleIcon,\r\n  Close as CloseIcon,\r\n  KeyboardArrowUp as KeyboardArrowUpIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  People as PeopleIcon,\r\n  Handshake as HandshakeIcon\r\n} from '@mui/icons-material';\r\n\r\n// Import các component mới\r\nimport DynamicKPIStats from './components/DynamicKPIStats';\r\nimport TrendingInsightsPredictions from './components/TrendingInsightsPredictions';\r\nimport DynamicCharts from './components/DynamicCharts';\r\nimport SavedReports from './components/SavedReports';\r\nimport { globalAISearch } from '../../services/globalAISearch';\r\n\r\n// Mock data for search results\r\nconst mockContacts = [\r\n  {\r\n    id: 1,\r\n    name: 'Nguyễn Văn An',\r\n    email: 'an.nguyen@company.com',\r\n    phone: '0901234567',\r\n    owner: 'Trần Thị B',\r\n    leadStatus: 'Hot Lead',\r\n    avatar: '/avatars/an.jpg'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Lê Thị Cẩm',\r\n    email: 'cam.le@business.vn',\r\n    phone: '0987654321',\r\n    owner: 'Phạm Văn C',\r\n    leadStatus: 'Qualified',\r\n    avatar: '/avatars/cam.jpg'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Hoàng Minh Đức',\r\n    email: 'duc.hoang@tech.com',\r\n    phone: '0912345678',\r\n    owner: 'Nguyễn Thị D',\r\n    leadStatus: 'New Lead',\r\n    avatar: '/avatars/duc.jpg'\r\n  }\r\n];\r\n\r\nconst mockDeals = [\r\n  {\r\n    id: 1,\r\n    name: 'Hệ thống CRM cho ABC Corp',\r\n    customer: 'ABC Corporation',\r\n    owner: 'Trần Văn E',\r\n    amount: 250000000,\r\n    stage: 'Đã gửi báo giá'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Website thương mại điện tử',\r\n    customer: 'XYZ Trading',\r\n    owner: 'Lê Thị F',\r\n    amount: 150000000,\r\n    stage: 'Đang đàm phán'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Ứng dụng mobile banking',\r\n    customer: 'Tech Bank',\r\n    owner: 'Phạm Văn G',\r\n    amount: 500000000,\r\n    stage: 'Liên hệ ban đầu'\r\n  }\r\n];\r\n\r\nconst Dashboard = () => {\r\n  const theme = useTheme();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [currentQuery, setCurrentQuery] = useState<string>('');\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  const [suggestions, setSuggestions] = useState<string[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const [showScrollToTop, setShowScrollToTop] = useState(false);\r\n  const [scrollY, setScrollY] = useState(0);\r\n  const [showSearchResults, setShowSearchResults] = useState(false);\r\n  const [activeTab, setActiveTab] = useState<'contacts' | 'deals'>('contacts');\r\n  const [expandedSections, setExpandedSections] = useState({ contacts: false, deals: false });\r\n  const [assistantOpen, setAssistantOpen] = useState(false);\r\n  const [assistantMinimized, setAssistantMinimized] = useState(false);\r\n  const [assistantQuery, setAssistantQuery] = useState('');\r\n\r\n  const searchRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    // Simulate loading for smooth animation\r\n    const timer = setTimeout(() => setIsLoaded(true), 200);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  // Handle scroll to determine position\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const currentScrollY = window.scrollY;\r\n      setScrollY(currentScrollY);\r\n      \r\n      // Always show minimized search bar when scrolling down\r\n      // and show full search bar at the top\r\n      if (currentScrollY > 200) {\r\n        setIsMinimized(true);\r\n        setShowScrollToTop(true);\r\n      } else {\r\n        setIsMinimized(false);\r\n        setShowScrollToTop(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  // Load suggestions when search is opened\r\n  useEffect(() => {\r\n    if (isSearchOpen && searchQuery.length === 0) {\r\n      loadSuggestions();\r\n    }\r\n  }, [isSearchOpen]);\r\n\r\n  const loadSuggestions = async () => {\r\n    try {\r\n      const suggestions = await globalAISearch.getSearchSuggestions('', location.pathname);\r\n      setSuggestions(suggestions);\r\n    } catch (error) {\r\n      console.error('Error loading suggestions:', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!searchQuery.trim()) return;\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      const results = await globalAISearch.contextualSearch(searchQuery);\r\n      console.log('Search results:', results);\r\n      // Process results as needed\r\n      handleGenerateReport(searchQuery);\r\n    } catch (error) {\r\n      console.error('Error searching:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion: string) => {\r\n    setSearchQuery(suggestion);\r\n    handleSearch();\r\n  };\r\n\r\n  const handleInputFocus = () => {\r\n    setIsSearchOpen(true);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  // Handle keyboard events\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Escape') {\r\n      setIsSearchOpen(false);\r\n      inputRef.current?.blur();\r\n    }\r\n  };\r\n\r\n  // Format amount with K/M/B suffix\r\n  const formatAmount = (amount: number): string => {\r\n    if (amount >= 1000000000) {\r\n      return `${(amount / 1000000000).toFixed(1)}B₫`;\r\n    } else if (amount >= 1000000) {\r\n      return `${(amount / 1000000).toFixed(1)}M₫`;\r\n    } else if (amount >= 1000) {\r\n      return `${(amount / 1000).toFixed(1)}K₫`;\r\n    }\r\n    return `${amount}₫`;\r\n  };\r\n\r\n  // Get contact display info based on query\r\n  const getContactDisplay = (contact: any) => {\r\n    const hasNumber = /\\d/.test(searchQuery);\r\n    return hasNumber ? contact.phone : contact.email;\r\n  };\r\n\r\n  // Handle item click navigation\r\n  const handleContactClick = (contactId: number) => {\r\n    navigate(`/contacts/${contactId}`);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  const handleDealClick = (dealId: number) => {\r\n    navigate(`/deals/${dealId}`);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  // Handle \"View all\" clicks\r\n  const handleViewAllContacts = () => {\r\n    setActiveTab('contacts');\r\n    setExpandedSections({ contacts: true, deals: false });\r\n    setShowSearchResults(true);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  const handleViewAllDeals = () => {\r\n    setActiveTab('deals');\r\n    setExpandedSections({ contacts: false, deals: true });\r\n    setShowSearchResults(true);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  // Handle CRM Assistant\r\n  const handleOpenAssistant = () => {\r\n    setAssistantQuery(searchQuery);\r\n    setAssistantOpen(true);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  const handleCloseAssistant = () => {\r\n    setAssistantOpen(false);\r\n    setAssistantMinimized(false);\r\n  };\r\n\r\n  const handleMinimizeAssistant = () => {\r\n    setAssistantMinimized(true);\r\n    setAssistantOpen(false);\r\n  };\r\n\r\n  // Handle back button\r\n  const handleBackToDropdown = () => {\r\n    setShowSearchResults(false);\r\n    setIsSearchOpen(true);\r\n  };\r\n\r\n  // Handle show more\r\n  const handleShowMore = (section: 'contacts' | 'deals') => {\r\n    setExpandedSections(prev => ({\r\n      ...prev,\r\n      [section]: true\r\n    }));\r\n  };\r\n\r\n  // Generate extended mock data for expanded sections\r\n  const getExtendedContacts = () => {\r\n    const extended = [];\r\n    for (let i = 0; i < 15; i++) {\r\n      extended.push({\r\n        ...mockContacts[i % mockContacts.length],\r\n        id: mockContacts[i % mockContacts.length].id + i * 100,\r\n        name: `${mockContacts[i % mockContacts.length].name} ${i + 1}`\r\n      });\r\n    }\r\n    return extended;\r\n  };\r\n\r\n  const getExtendedDeals = () => {\r\n    const extended = [];\r\n    for (let i = 0; i < 15; i++) {\r\n      extended.push({\r\n        ...mockDeals[i % mockDeals.length],\r\n        id: mockDeals[i % mockDeals.length].id + i * 100,\r\n        name: `${mockDeals[i % mockDeals.length].name} ${i + 1}`,\r\n        amount: mockDeals[i % mockDeals.length].amount + i * 10000000\r\n      });\r\n    }\r\n    return extended;\r\n  };\r\n\r\n  // Get status chip color\r\n  const getStatusColor = (status: string) => {\r\n    switch (status.toLowerCase()) {\r\n      case 'hot lead': return 'error';\r\n      case 'qualified': return 'success';\r\n      case 'new lead': return 'info';\r\n      case 'đã gửi báo giá': return 'warning';\r\n      case 'đang đàm phán': return 'primary';\r\n      case 'liên hệ ban đầu': return 'default';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const handleScrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n\r\n  // Xử lý khi người dùng gửi yêu cầu báo cáo mới\r\n  const handleGenerateReport = (query: string) => {\r\n    console.log('Generating report for query:', query);\r\n    setCurrentQuery(query);\r\n    // Ở đây trong thực tế sẽ gọi API để xử lý yêu cầu và tạo báo cáo\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      position: 'relative', \r\n      width: '100%', \r\n      height: '100%',\r\n      overflow: 'auto'\r\n    }}>\r\n        <Fade in={isLoaded} timeout={800}>\r\n          <Box sx={{ p: 3, width: '100%', height: '100%' }}>\r\n            {/* Welcome Header - Crunchbase style */}\r\n            {!showSearchResults && (\r\n              <Box \r\n                sx={{ \r\n                  textAlign: 'center',\r\n                  mb: 6,\r\n                  py: 4,\r\n                  background: `linear-gradient(135deg, ${alpha(theme.palette.primary.main, 0.05)} 0%, ${alpha(theme.palette.secondary.main, 0.05)} 100%)`,\r\n                  borderRadius: 3,\r\n                  border: `1px solid ${alpha(theme.palette.primary.main, 0.1)}`\r\n                }}\r\n              >\r\n              <Typography \r\n                variant=\"h3\" \r\n                component=\"h1\" \r\n                gutterBottom \r\n                sx={{ \r\n                  fontWeight: 'bold', \r\n                  color: theme.palette.text.primary,\r\n                  mb: 2\r\n                }}\r\n              >\r\n                Chào mừng trở lại, Admin\r\n              </Typography>\r\n              <Typography \r\n                variant=\"h6\" \r\n                color=\"text.secondary\"\r\n                sx={{ \r\n                  mb: 3,\r\n                  maxWidth: 600,\r\n                  mx: 'auto'\r\n                }}\r\n              >\r\n                Dashboard thông minh\r\n              </Typography>\r\n              \r\n              {/* AI Search Input - Crunchbase style */}\r\n              <ClickAwayListener onClickAway={handleClickAway}>\r\n                <Box \r\n                  ref={searchRef}\r\n                  sx={{\r\n                    position: isMinimized ? 'fixed' : 'relative',\r\n                    bottom: isMinimized ? 20 : 'auto',\r\n                    right: isMinimized ? 20 : 'auto',\r\n                    left: isMinimized ? 'auto' : 'auto',\r\n                    zIndex: 1000,\r\n                    width: isMinimized ? 'auto' : '100%',\r\n                    maxWidth: isMinimized ? 300 : 600,\r\n                    mx: 'auto',\r\n                    transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                    transform: 'translateY(0)',\r\n                    opacity: 1,\r\n                    boxShadow: isMinimized ? '0 8px 32px rgba(0,0,0,0.15)' : 'none',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: 2\r\n                  }}\r\n                >\r\n                  <Zoom in={true} style={{ transitionDelay: isMinimized ? '100ms' : '0ms' }}>\r\n                    <Paper\r\n                      elevation={isMinimized ? 4 : 1}\r\n                      sx={{\r\n                        p: isMinimized ? 1 : 2,\r\n                        borderRadius: 8,\r\n                        border: `1px solid ${alpha(theme.palette.primary.main, 0.2)}`,\r\n                        backgroundColor: isMinimized ? \r\n                          alpha(theme.palette.background.paper, 0.95) : \r\n                          alpha(theme.palette.background.paper, 0.8),\r\n                        backdropFilter: 'blur(8px)',\r\n                        boxShadow: isMinimized ? \r\n                          `0 4px 20px ${alpha(theme.palette.primary.main, 0.15)}` : \r\n                          'none',\r\n                        transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                        '&:hover': {\r\n                          boxShadow: isMinimized ? \r\n                            `0 8px 32px ${alpha(theme.palette.primary.main, 0.25)}` : \r\n                            'none',\r\n                          transform: isMinimized ? 'translateY(-2px)' : 'none'\r\n                        }\r\n                    }}\r\n                  >\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <TextField\r\n                        inputRef={inputRef}\r\n                        fullWidth\r\n                        placeholder=\"Hỏi AI về dữ liệu kinh doanh, thị trường, khách hàng...\"\r\n                        value={searchQuery}\r\n                        onChange={(e) => setSearchQuery(e.target.value)}\r\n                        onFocus={handleInputFocus}\r\n                        onKeyDown={handleKeyDown}\r\n                        onKeyPress={(e) => {\r\n                          if (e.key === 'Enter') {\r\n                            handleSearch();\r\n                          }\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        size={isMinimized ? \"small\" : \"medium\"}\r\n                        InputProps={{\r\n                          startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                              <AIIcon color=\"primary\" />\r\n                            </InputAdornment>\r\n                          ),\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              {searchQuery ? (\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  onClick={() => setSearchQuery('')}\r\n                                  edge=\"end\"\r\n                                >\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                              ) : null}\r\n                              {isLoading ? (\r\n                                <CircularProgress size={20} />\r\n                              ) : (\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  onClick={handleSearch}\r\n                                  edge=\"end\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <SearchIcon />\r\n                                </IconButton>\r\n                              )}\r\n                            </InputAdornment>\r\n                          ),\r\n                          sx: {\r\n                            borderRadius: 8,\r\n                            backgroundColor: alpha(theme.palette.background.paper, 0.5),\r\n                            fontSize: '1rem',\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.background.paper, 0.8),\r\n                            },\r\n                            '& .MuiOutlinedInput-notchedOutline': {\r\n                              borderColor: alpha(theme.palette.primary.main, 0.3),\r\n                              borderWidth: 2,\r\n                            },\r\n                            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                              borderColor: alpha(theme.palette.primary.main, 0.5),\r\n                              borderWidth: 2,\r\n                            },\r\n                            '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                              borderColor: theme.palette.primary.main,\r\n                              borderWidth: 2,\r\n                            }\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Box>\r\n                    \r\n                    {/* Enhanced Search Dropdown */}\r\n                    {isSearchOpen && !isMinimized && (\r\n                      <Popper\r\n                        open={isSearchOpen}\r\n                        anchorEl={searchRef.current}\r\n                        placement=\"bottom-start\"\r\n                        style={{ width: 'auto', minWidth: searchRef.current?.clientWidth, maxWidth: 500, zIndex: 1301 }}\r\n                      >\r\n                        <Paper\r\n                          elevation={3}\r\n                          sx={{\r\n                            mt: 1,\r\n                            borderRadius: 0,\r\n                            maxHeight: 'none',\r\n                            overflow: 'visible',\r\n                            border: `1px solid ${alpha(theme.palette.divider, 0.3)}`,\r\n                            backgroundColor: theme.palette.background.paper\r\n                          }}\r\n                        >\r\n                          <Box sx={{ overflow: 'visible' }}>\r\n                            {/* Contacts Section */}\r\n                            <Box sx={{ py: 0.5 }}>\r\n                              <Typography \r\n                                variant=\"caption\" \r\n                                sx={{ \r\n                                  px: 1.5, \r\n                                  py: 0.5, \r\n                                  display: 'block',\r\n                                  color: 'text.secondary',\r\n                                  fontWeight: 'medium',\r\n                                  textTransform: 'uppercase',\r\n                                  letterSpacing: 0.5,\r\n                                  fontSize: '0.65rem'\r\n                                }}\r\n                              >\r\n                                Contacts\r\n                              </Typography>\r\n                              {mockContacts.slice(0, 3).map((contact) => (\r\n                                <ListItemButton\r\n                                  key={contact.id}\r\n                                  onClick={() => handleContactClick(contact.id)}\r\n                                  sx={{\r\n                                    px: 1.5,\r\n                                    py: 0.75,\r\n                                    borderRadius: 0,\r\n                                    mx: 1,\r\n                                    mb: 0.5,\r\n                                    '&:hover': {\r\n                                      backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', minWidth: 0 }}>\r\n                                    <Avatar \r\n                                      sx={{ \r\n                                        width: 24, \r\n                                        height: 24, \r\n                                        mr: 1,\r\n                                        fontSize: '0.75rem',\r\n                                        backgroundColor: theme.palette.primary.main\r\n                                      }}\r\n                                    >\r\n                                      {contact.name.charAt(0)}\r\n                                    </Avatar>\r\n                                    <Box sx={{ \r\n                                      display: 'flex', \r\n                                      alignItems: 'center', \r\n                                      justifyContent: 'space-between',\r\n                                      width: '100%',\r\n                                      minWidth: 0\r\n                                    }}>\r\n                                      <Typography \r\n                                        variant=\"body2\" \r\n                                        sx={{ \r\n                                          fontWeight: 'bold',\r\n                                          color: 'text.primary',\r\n                                          whiteSpace: 'nowrap',\r\n                                          overflow: 'hidden',\r\n                                          textOverflow: 'ellipsis',\r\n                                          mr: 1,\r\n                                          flex: 1\r\n                                        }}\r\n                                      >\r\n                                        {contact.name}\r\n                                        <Typography \r\n                                          component=\"span\" \r\n                                          variant=\"caption\" \r\n                                          sx={{ \r\n                                            color: 'text.secondary',\r\n                                            ml: 0.5,\r\n                                            fontWeight: 'normal'\r\n                                          }}\r\n                                        >\r\n                                          — {getContactDisplay(contact)}\r\n                                        </Typography>\r\n                                      </Typography>\r\n                                      <Chip\r\n                                        label={contact.leadStatus}\r\n                                        size=\"small\"\r\n                                        color={getStatusColor(contact.leadStatus) as any}\r\n                                        sx={{\r\n                                          height: 16,\r\n                                          fontSize: '0.65rem',\r\n                                          flexShrink: 0\r\n                                        }}\r\n                                      />\r\n                                    </Box>\r\n                                  </Box>\r\n                                </ListItemButton>\r\n                              ))}\r\n                              <ListItemButton\r\n                                onClick={handleViewAllContacts}\r\n                                sx={{\r\n                                  px: 1.5,\r\n                                  py: 0.5,\r\n                                  borderRadius: 0,\r\n                                  mx: 1,\r\n                                  color: 'primary.main',\r\n                                  '&:hover': {\r\n                                    backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\r\n                                  View all contacts...\r\n                                </Typography>\r\n                              </ListItemButton>\r\n                            </Box>\r\n\r\n                            <Divider sx={{ mx: 1 }} />\r\n\r\n                            {/* Deals Section */}\r\n                            <Box sx={{ py: 0.5 }}>\r\n                              <Typography \r\n                                variant=\"caption\" \r\n                                sx={{ \r\n                                  px: 1.5, \r\n                                  py: 0.5, \r\n                                  display: 'block',\r\n                                  color: 'text.secondary',\r\n                                  fontWeight: 'medium',\r\n                                  textTransform: 'uppercase',\r\n                                  letterSpacing: 0.5,\r\n                                  fontSize: '0.65rem'\r\n                                }}\r\n                              >\r\n                                Deals\r\n                              </Typography>\r\n                              {mockDeals.slice(0, 3).map((deal) => (\r\n                                <ListItemButton\r\n                                  key={deal.id}\r\n                                  onClick={() => handleDealClick(deal.id)}\r\n                                  sx={{\r\n                                    px: 1.5,\r\n                                    py: 0.75,\r\n                                    borderRadius: 0,\r\n                                    mx: 1,\r\n                                    mb: 0.5,\r\n                                    '&:hover': {\r\n                                      backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', minWidth: 0 }}>\r\n                                    <Box \r\n                                      sx={{ \r\n                                        width: 24, \r\n                                        height: 24, \r\n                                        mr: 1,\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                        backgroundColor: alpha(theme.palette.success.main, 0.1),\r\n                                        borderRadius: 0,\r\n                                        fontSize: '0.75rem'\r\n                                      }}\r\n                                    >\r\n                                      💼\r\n                                    </Box>\r\n                                    <Box sx={{ \r\n                                      display: 'flex', \r\n                                      alignItems: 'center', \r\n                                      justifyContent: 'space-between',\r\n                                      width: '100%',\r\n                                      minWidth: 0\r\n                                    }}>\r\n                                      <Typography \r\n                                        variant=\"body2\" \r\n                                        sx={{ \r\n                                          fontWeight: 'bold',\r\n                                          color: 'text.primary',\r\n                                          whiteSpace: 'nowrap',\r\n                                          overflow: 'hidden',\r\n                                          textOverflow: 'ellipsis',\r\n                                          mr: 1,\r\n                                          flex: 1\r\n                                        }}\r\n                                      >\r\n                                        {deal.name}\r\n                                        <Typography \r\n                                          component=\"span\" \r\n                                          variant=\"caption\" \r\n                                          sx={{ \r\n                                            color: 'text.secondary',\r\n                                            ml: 0.5,\r\n                                            fontWeight: 'normal'\r\n                                          }}\r\n                                        >\r\n                                          — {formatAmount(deal.amount)}\r\n                                        </Typography>\r\n                                      </Typography>\r\n                                      <Chip\r\n                                        label={deal.stage}\r\n                                        size=\"small\"\r\n                                        color={getStatusColor(deal.stage) as any}\r\n                                        sx={{\r\n                                          height: 16,\r\n                                          fontSize: '0.65rem',\r\n                                          flexShrink: 0\r\n                                        }}\r\n                                      />\r\n                                    </Box>\r\n                                  </Box>\r\n                                </ListItemButton>\r\n                              ))}\r\n                              <ListItemButton\r\n                                onClick={handleViewAllDeals}\r\n                                sx={{\r\n                                  px: 1.5,\r\n                                  py: 0.5,\r\n                                  borderRadius: 0,\r\n                                  mx: 1,\r\n                                  color: 'primary.main',\r\n                                  '&:hover': {\r\n                                    backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\r\n                                  View all deals...\r\n                                </Typography>\r\n                              </ListItemButton>\r\n                            </Box>\r\n                            \r\n                            {/* CRM Assistant Entry */}\r\n                            {searchQuery && (\r\n                              <>\r\n                                <Divider sx={{ my: 1 }} />\r\n                                <Box sx={{ px: 1 }}>\r\n                                  <ListItemButton\r\n                                    onClick={handleOpenAssistant}\r\n                                    sx={{\r\n                                      px: 1.5,\r\n                                      py: 1,\r\n                                      borderRadius: 0,\r\n                                      backgroundColor: alpha(theme.palette.warning.main, 0.05),\r\n                                      border: `1px solid ${alpha(theme.palette.warning.main, 0.2)}`,\r\n                                      '&:hover': {\r\n                                        backgroundColor: alpha(theme.palette.warning.main, 0.1)\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n                                      <SparkleIcon \r\n                                        sx={{ \r\n                                          color: 'warning.main', \r\n                                          mr: 1.5,\r\n                                          fontSize: '1.2rem'\r\n                                        }} \r\n                                      />\r\n                                      <Typography \r\n                                        variant=\"body2\" \r\n                                        sx={{ \r\n                                          fontWeight: 'medium',\r\n                                          color: 'warning.dark'\r\n                                        }}\r\n                                      >\r\n                                        Hỏi CRM Assistant: \"{searchQuery.length > 30 ? searchQuery.substring(0, 30) + '...' : searchQuery}\"\r\n                                      </Typography>\r\n                                    </Box>\r\n                                  </ListItemButton>\r\n                                </Box>\r\n                              </>\r\n                            )}\r\n                          </Box>\r\n                        </Paper>\r\n                      </Popper>\r\n                    )}\r\n                    \r\n                    {/* Minimized Label */}\r\n                    {isMinimized && (\r\n                      <Typography \r\n                        variant=\"caption\" \r\n                        sx={{ \r\n                          ml: 1, \r\n                          color: 'text.secondary',\r\n                          display: { xs: 'none', sm: 'inline' }\r\n                        }}\r\n                      >\r\n                        AI Assistant - Hỏi bất cứ điều gì!\r\n                      </Typography>\r\n                    )}\r\n                  </Paper>\r\n                  </Zoom>\r\n                  \r\n                  {/* Scroll to top button */}\r\n                  <Slide direction=\"up\" in={showScrollToTop} mountOnEnter unmountOnExit>\r\n                    <IconButton \r\n                      color=\"primary\"\r\n                      size=\"medium\"\r\n                      onClick={handleScrollToTop}\r\n                      sx={{\r\n                        position: 'fixed',\r\n                        bottom: isMinimized ? 80 : 20,\r\n                        right: 20,\r\n                        backgroundColor: alpha(theme.palette.background.paper, 0.9),\r\n                        boxShadow: `0 4px 14px ${alpha(theme.palette.primary.main, 0.2)}`,\r\n                        border: `1px solid ${alpha(theme.palette.primary.main, 0.3)}`,\r\n                        '&:hover': {\r\n                          backgroundColor: alpha(theme.palette.background.paper, 1),\r\n                          boxShadow: `0 6px 20px ${alpha(theme.palette.primary.main, 0.3)}`,\r\n                        }\r\n                      }}\r\n                    >\r\n                      <KeyboardArrowUpIcon />\r\n                    </IconButton>\r\n                  </Slide>\r\n                </Box>\r\n              </ClickAwayListener>\r\n            </Box>\r\n            )}\r\n\r\n            {/* Fixed Search Input for Search Results */}\r\n            {showSearchResults && (\r\n              <Box\r\n                sx={{\r\n                  position: 'fixed',\r\n                  bottom: 20,\r\n                  left: '50%',\r\n                  transform: 'translateX(-50%)',\r\n                  zIndex: 1000,\r\n                  width: 'auto',\r\n                  maxWidth: 700,\r\n                  minWidth: 500\r\n                }}\r\n              >\r\n                <Paper\r\n                  elevation={4}\r\n                  sx={{\r\n                    p: 2,\r\n                    borderRadius: 4,\r\n                    border: `2px solid ${alpha(theme.palette.warning.main, 0.6)}`,\r\n                    backgroundColor: alpha(theme.palette.warning.main, 0.15),\r\n                    backdropFilter: 'blur(12px)',\r\n                    boxShadow: `0 6px 24px ${alpha(theme.palette.warning.main, 0.3)}`,\r\n                    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                    '&:hover': {\r\n                      backgroundColor: alpha(theme.palette.warning.main, 0.25),\r\n                      boxShadow: `0 12px 40px ${alpha(theme.palette.warning.main, 0.4)}`,\r\n                      transform: 'translateY(-4px)'\r\n                    }\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    fullWidth\r\n                    placeholder=\"Hỏi AI về dữ liệu kinh doanh, thị trường, khách hàng...\"\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                    onKeyPress={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        handleSearch();\r\n                      }\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <AIIcon color=\"primary\" />\r\n                        </InputAdornment>\r\n                      ),\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          {searchQuery ? (\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={() => setSearchQuery('')}\r\n                              edge=\"end\"\r\n                            >\r\n                              <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                          ) : null}\r\n                          {isLoading ? (\r\n                            <CircularProgress size={20} />\r\n                          ) : (\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={handleSearch}\r\n                              edge=\"end\"\r\n                              color=\"primary\"\r\n                            >\r\n                              <SearchIcon />\r\n                            </IconButton>\r\n                          )}\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            edge=\"end\"\r\n                          >\r\n                            <MicIcon />\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                      sx: {\r\n                        borderRadius: 8,\r\n                        backgroundColor: alpha(theme.palette.background.paper, 0.9),\r\n                        fontSize: '0.9rem',\r\n                        '&:hover': {\r\n                          backgroundColor: theme.palette.background.paper,\r\n                        },\r\n                        '& .MuiOutlinedInput-notchedOutline': {\r\n                          borderColor: alpha(theme.palette.background.paper, 0.8),\r\n                          borderWidth: 2,\r\n                        },\r\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                          borderColor: theme.palette.background.paper,\r\n                          borderWidth: 2,\r\n                        },\r\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                          borderColor: theme.palette.background.paper,\r\n                          borderWidth: 2,\r\n                        }\r\n                      }\r\n                    }}\r\n                  />\r\n                </Paper>\r\n              </Box>\r\n            )}\r\n\r\n            {/* Search Results Component */}\r\n            {showSearchResults && (\r\n              <Box sx={{ mb: 4 }}>\r\n                {/* Header */}\r\n                <Box\r\n                  sx={{\r\n                    position: 'sticky',\r\n                    top: 0,\r\n                    zIndex: 100,\r\n                    backgroundColor: theme.palette.background.paper,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`,\r\n                    p: 1.5,\r\n                    mb: 2\r\n                  }}\r\n                >\r\n                  <Box sx={{ mb: 2 }}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                      <IconButton\r\n                        onClick={handleBackToDropdown}\r\n                        size=\"small\"\r\n                        sx={{\r\n                          mr: 1,\r\n                          width: 28,\r\n                          height: 28,\r\n                          backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                          '&:hover': {\r\n                            backgroundColor: alpha(theme.palette.primary.main, 0.2)\r\n                          }\r\n                        }}\r\n                      >\r\n                        <ArrowBackIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                      <Typography variant=\"body2\" sx={{ fontWeight: 'bold', fontSize: '0.875rem' }}>\r\n                        Back\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography variant=\"h6\" sx={{ fontSize: '1.1rem', color: 'text.primary', fontWeight: 'medium' }}>\r\n                      Search for: \"{searchQuery || 'AI search results'}\"\r\n                    </Typography>\r\n                  </Box>\r\n                  \r\n                  {/* Tag Chips */}\r\n                  <Box sx={{ display: 'flex', gap: 1 }}>\r\n                    <Chip\r\n                      icon={<PeopleIcon fontSize=\"small\" />}\r\n                      label=\"Contacts\"\r\n                      variant={activeTab === 'contacts' ? 'filled' : 'outlined'}\r\n                      color={activeTab === 'contacts' ? 'primary' : 'default'}\r\n                      onClick={() => navigate('/contacts')}\r\n                      sx={{ cursor: 'pointer', fontSize: '0.8rem' }}\r\n                    />\r\n                    <Chip\r\n                      icon={<HandshakeIcon fontSize=\"small\" />}\r\n                      label=\"Deals\"\r\n                      variant={activeTab === 'deals' ? 'filled' : 'outlined'}\r\n                      color={activeTab === 'deals' ? 'primary' : 'default'}\r\n                      onClick={() => navigate('/deals')}\r\n                      sx={{ cursor: 'pointer', fontSize: '0.8rem' }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n\r\n                {/* Content Sections */}\r\n                <Box sx={{ px: 2 }}>\r\n                  {/* Contacts Section */}\r\n                  <Box sx={{ mb: 4 }}>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      sx={{\r\n                        fontWeight: 'bold',\r\n                        mb: 2,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 1\r\n                      }}\r\n                    >\r\n                      CONTACTS\r\n                      <Chip\r\n                        label={expandedSections.contacts ? getExtendedContacts().length : mockContacts.length}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Typography>\r\n                    \r\n                    <Paper\r\n                      elevation={1}\r\n                      sx={{\r\n                        borderRadius: '6px',\r\n                        border: `1px solid ${alpha(theme.palette.divider, 0.3)}`,\r\n                        backgroundColor: theme.palette.background.paper,\r\n                        overflow: 'hidden'\r\n                      }}\r\n                    >\r\n                      {(expandedSections.contacts ? getExtendedContacts() : mockContacts.slice(0, 3)).map((contact) => (\r\n                        <ListItemButton\r\n                          key={contact.id}\r\n                          onClick={() => handleContactClick(contact.id)}\r\n                          sx={{\r\n                            px: 2,\r\n                            py: 1,\r\n                            borderRadius: 0,\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                            },\r\n                            '&:not(:last-child)': {\r\n                              borderBottom: `1px solid ${alpha(theme.palette.divider, 0.2)}`\r\n                            }\r\n                          }}\r\n                        >\r\n                          <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', minWidth: 0 }}>\r\n                            <Avatar\r\n                              sx={{\r\n                                width: 24,\r\n                                height: 24,\r\n                                mr: 1.5,\r\n                                fontSize: '0.75rem',\r\n                                backgroundColor: theme.palette.primary.main\r\n                              }}\r\n                            >\r\n                              {contact.name.charAt(0)}\r\n                            </Avatar>\r\n                            <Box sx={{\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              justifyContent: 'space-between',\r\n                              width: '100%',\r\n                              minWidth: 0\r\n                            }}>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                sx={{\r\n                                  fontWeight: 'bold',\r\n                                  color: 'text.primary',\r\n                                  whiteSpace: 'nowrap',\r\n                                  overflow: 'hidden',\r\n                                  textOverflow: 'ellipsis',\r\n                                  mr: 1,\r\n                                  flex: 1\r\n                                }}\r\n                              >\r\n                                {contact.name}\r\n                                <Typography\r\n                                  component=\"span\"\r\n                                  variant=\"caption\"\r\n                                  sx={{\r\n                                    color: 'text.secondary',\r\n                                    ml: 0.5,\r\n                                    fontWeight: 'normal'\r\n                                  }}\r\n                                >\r\n                                  — {getContactDisplay(contact)} · {contact.owner}\r\n                                </Typography>\r\n                              </Typography>\r\n                              <Chip\r\n                                label={contact.leadStatus}\r\n                                size=\"small\"\r\n                                color={getStatusColor(contact.leadStatus) as any}\r\n                                sx={{\r\n                                  height: 18,\r\n                                  fontSize: '0.65rem',\r\n                                  flexShrink: 0\r\n                                }}\r\n                              />\r\n                            </Box>\r\n                          </Box>\r\n                        </ListItemButton>\r\n                      ))}\r\n                      \r\n                      {!expandedSections.contacts && (\r\n                        <ListItemButton\r\n                          onClick={() => handleShowMore('contacts')}\r\n                          sx={{\r\n                            px: 2,\r\n                            py: 1,\r\n                            borderRadius: 0,\r\n                            color: 'primary.main',\r\n                            borderTop: `1px solid ${alpha(theme.palette.divider, 0.2)}`,\r\n                            justifyContent: 'center',\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                            }\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\r\n                            Show more contacts...\r\n                          </Typography>\r\n                        </ListItemButton>\r\n                      )}\r\n                    </Paper>\r\n                  </Box>\r\n\r\n                  {/* Deals Section */}\r\n                  <Box>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      sx={{\r\n                        fontWeight: 'bold',\r\n                        mb: 2,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 1\r\n                      }}\r\n                    >\r\n                      DEALS\r\n                      <Chip\r\n                        label={expandedSections.deals ? getExtendedDeals().length : mockDeals.length}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Typography>\r\n                    \r\n                    <Paper\r\n                      elevation={1}\r\n                      sx={{\r\n                        borderRadius: '6px',\r\n                        border: `1px solid ${alpha(theme.palette.divider, 0.3)}`,\r\n                        backgroundColor: theme.palette.background.paper,\r\n                        overflow: 'hidden'\r\n                      }}\r\n                    >\r\n                      {(expandedSections.deals ? getExtendedDeals() : mockDeals.slice(0, 3)).map((deal) => (\r\n                        <ListItemButton\r\n                          key={deal.id}\r\n                          onClick={() => handleDealClick(deal.id)}\r\n                          sx={{\r\n                            px: 2,\r\n                            py: 1,\r\n                            borderRadius: 0,\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                            },\r\n                            '&:not(:last-child)': {\r\n                              borderBottom: `1px solid ${alpha(theme.palette.divider, 0.2)}`\r\n                            }\r\n                          }}\r\n                        >\r\n                          <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', minWidth: 0 }}>\r\n                            <Box\r\n                              sx={{\r\n                                width: 24,\r\n                                height: 24,\r\n                                mr: 1.5,\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                backgroundColor: alpha(theme.palette.success.main, 0.1),\r\n                                borderRadius: 1,\r\n                                fontSize: '0.75rem'\r\n                              }}\r\n                            >\r\n                              💼\r\n                            </Box>\r\n                            <Box sx={{\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              justifyContent: 'space-between',\r\n                              width: '100%',\r\n                              minWidth: 0\r\n                            }}>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                sx={{\r\n                                  fontWeight: 'bold',\r\n                                  color: 'text.primary',\r\n                                  whiteSpace: 'nowrap',\r\n                                  overflow: 'hidden',\r\n                                  textOverflow: 'ellipsis',\r\n                                  mr: 1,\r\n                                  flex: 1\r\n                                }}\r\n                              >\r\n                                {deal.name}\r\n                                <Typography\r\n                                  component=\"span\"\r\n                                  variant=\"caption\"\r\n                                  sx={{\r\n                                    color: 'text.secondary',\r\n                                    ml: 0.5,\r\n                                    fontWeight: 'normal'\r\n                                  }}\r\n                                >\r\n                                  — {deal.customer} · {deal.owner} · {formatAmount(deal.amount)}\r\n                                </Typography>\r\n                              </Typography>\r\n                              <Chip\r\n                                label={deal.stage}\r\n                                size=\"small\"\r\n                                color={getStatusColor(deal.stage) as any}\r\n                                sx={{\r\n                                  height: 18,\r\n                                  fontSize: '0.65rem',\r\n                                  flexShrink: 0\r\n                                }}\r\n                              />\r\n                            </Box>\r\n                          </Box>\r\n                        </ListItemButton>\r\n                      ))}\r\n                      \r\n                      {!expandedSections.deals && (\r\n                        <ListItemButton\r\n                          onClick={() => handleShowMore('deals')}\r\n                          sx={{\r\n                            px: 2,\r\n                            py: 1,\r\n                            borderRadius: 0,\r\n                            color: 'primary.main',\r\n                            borderTop: `1px solid ${alpha(theme.palette.divider, 0.2)}`,\r\n                            justifyContent: 'center',\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                            }\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\r\n                            Show more deals...\r\n                          </Typography>\r\n                        </ListItemButton>\r\n                      )}\r\n                    </Paper>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n\r\n            {/* Dynamic KPI Stats - Crunchbase \"THIS MONTH ON CRUNCHBASE\" style */}\r\n            {!showSearchResults && <DynamicKPIStats />}\r\n\r\n            {/* Main Content Grid */}\r\n            {!showSearchResults && (\r\n              <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', lg: '2fr 1fr' }, gap: 4, mb: 4 }}>\r\n                {/* Left Column - Trending, Insights, Predictions */}\r\n                <Box>\r\n                  <TrendingInsightsPredictions />\r\n                </Box>\r\n\r\n                {/* Right Column - Charts and Reports */}\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\r\n                  {/* Dynamic Charts */}\r\n                  <Box>\r\n                    <DynamicCharts query={currentQuery} />\r\n                  </Box>\r\n\r\n                  {/* Saved Reports */}\r\n                  <Box>\r\n                    <SavedReports />\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n\r\n            {/* Footer */}\r\n            <Box sx={{ mt: 4, pt: 2, borderTop: `1px solid ${theme.palette.divider}`, textAlign: 'center' }}>\r\n              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                © 2025 CRM Dashboard - Powered by AI Orchestration • Real-time Data • Smart Predictions\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Fade>\r\n        \r\n        {/* CRM Assistant Panel */}\r\n        <CrmAssistantPanel\r\n          open={assistantOpen}\r\n          initialQuery={assistantQuery}\r\n          onClose={handleCloseAssistant}\r\n          onMinimize={handleMinimizeAssistant}\r\n        />\r\n        \r\n        {/* Minimized Assistant Button */}\r\n        {assistantMinimized && (\r\n          <Zoom in={assistantMinimized}>\r\n            <Paper\r\n              elevation={6}\r\n              sx={{\r\n                position: 'fixed',\r\n                bottom: 20,\r\n                right: 20,\r\n                width: 60,\r\n                height: 60,\r\n                borderRadius: '50%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                cursor: 'pointer',\r\n                backgroundColor: 'warning.main',\r\n                color: 'warning.contrastText',\r\n                zIndex: 1300,\r\n                '&:hover': {\r\n                  transform: 'scale(1.1)',\r\n                  boxShadow: `0 8px 25px ${alpha(theme.palette.warning.main, 0.4)}`\r\n                },\r\n                transition: 'all 0.3s ease-in-out'\r\n              }}\r\n              onClick={() => {\r\n                setAssistantMinimized(false);\r\n                setAssistantOpen(true);\r\n              }}\r\n            >\r\n              <SparkleIcon sx={{ fontSize: '1.5rem' }} />\r\n            </Paper>\r\n          </Zoom>\r\n        )}\r\n      </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["mockContacts","id","name","email","phone","owner","leadStatus","statusColor","mockDeals","customer","amount","stage","stageColor","deadline","formatAmount","concat","toFixed","MiniTable","_ref","type","data","onAction","theme","useTheme","contacts","_jsx","TableContainer","component","Paper","sx","maxHeight","border","alpha","palette","divider","children","_jsxs","Table","size","stickyHeader","TableHead","TableRow","TableCell","fontWeight","fontSize","TableBody","map","contact","hover","Chip","label","backgroundColor","color","height","Button","startIcon","OpenIcon","onClick","minWidth","px","deals","deal","Box","display","gap","TaskIcon","AssistantCard","_ref2","loading","onToggleSection","p","mb","borderRadius","primary","main","Skeleton","variant","width","i","Typography","query","summary","item","index","alignItems","mr","icon","PersonIcon","showContacts","cursor","BusinessIcon","showDeals","flexWrap","AddIcon","TrendingIcon","EmailIcon","ChatMessage","_ref3","message","isUser","justifyContent","maxWidth","isCard","cardData","content","_ref4","open","initialQuery","onClose","onMinimize","messages","setMessages","useState","inputValue","setInputValue","isTyping","setIsTyping","conversationTitle","setConversationTitle","setCardData","snackbar","setSnackbar","messagesEndRef","useRef","useEffect","length","split","slice","join","handleSendMessage","_messagesEndRef$curre","current","scrollIntoView","behavior","async","isInitial","arguments","undefined","trim","userMessage","Date","now","toString","timestamp","prev","setTimeout","newCardData","reduce","sum","assistantMessage","responses","Math","floor","random","handleToggleSection","section","updatedCardData","_objectSpread","msg","handleAction","action","_Fragment","Dialog","PaperProps","overflow","BackdropProps","common","black","backdropFilter","borderBottom","background","paper","position","top","zIndex","AIIcon","lineHeight","IconButton","MinimizeIcon","ExpandIcon","CloseIcon","DialogContent","flex","flexDirection","grey","opacity","ref","borderTop","bottom","TextField","fullWidth","multiline","maxRows","placeholder","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","InputProps","endAdornment","InputAdornment","AttachIcon","disabled","SendIcon","borderColor","mt","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","DynamicKPIStats","kpiData","setKpiData","dynamicUpdates","setDynamicUpdates","isLoading","setIsLoading","lastRefresh","setLastRefresh","activeKpiIndex","setActiveKpiIndex","showAllKpis","setShowAllKpis","loadKPIData","loadDynamicUpdates","interval","setInterval","updateKPIData","addRandomUpdate","clearInterval","rotationInterval","prevIndex","Promise","resolve","currentDate","kpis","title","change","changeLabel","PeopleIcon","description","lastUpdated","DealsIcon","success","MoneyIcon","warning","TimelineIcon","info","StarIcon","secondary","updates","isNew","kpi","newUpdates","randomUpdate","update","u","getChangeColor","error","text","formatTimeAgo","date","diffMs","getTime","diffMins","diffHours","toLocaleDateString","Tooltip","ViewCarouselIcon","ViewModuleIcon","RefreshIcon","minHeight","gridTemplateColumns","xs","sm","md","Fade","in","timeout","enter","exit","style","transitionDelay","elevation","transition","left","transform","boxShadow","TrendingUpIcon","TrendingDownIcon","ml","TabPanel","props","other","_objectWithoutProperties","_excluded","role","hidden","pt","TrendingInsightsPredictions","tabValue","setTabValue","trendingData","setTrendingData","insightsData","setInsightsData","predictionsData","setPredictionsData","loadAllData","trendingRequest","trendingResponse","aiOrchestrator","processRequest","generateTrendingData","result","insightsRequest","insightsResponse","generateInsightsData","predictionsRequest","predictionsResponse","generatePredictionsData","console","aiResult","trends","defaultTrends","growth","confidence","category","ShowChartIcon","PsychologyIcon","trend","insights","defaultInsights","impact","actionable","source","insight","predictions","topDeals","defaultPredictions","probability","timeframe","riskLevel","prediction","getImpactColor","getRiskColor","risk","getTypeIcon","Tabs","newValue","Tab","iconPosition","py","LightbulbIcon","Card","CardContent","Avatar","ArrowUpIcon","round","LinearProgress","List","React","ListItem","ListItemAvatar","ListItemText","toUpperCase","toLocaleTimeString","Divider","textTransform","REVENUE_DATA","DEAL_STATUS_DATA","NEW_CUSTOMERS_DATA","REVENUE_BY_MONTH_DATA","CONVERSION_RATE_DATA","MONTHLY_REVENUE_DATA","COLORS","chartType","setChartType","timeRange","setTimeRange","getChartTypeFromQuery","lowercaseQuery","toLowerCase","includes","chartDataType","newChartType","chartData","getChartData","formatValue","ToggleButtonGroup","exclusive","handleChartTypeChange","event","ToggleButton","BarChartIcon","PieChartIcon","LineChartIcon","TableChartIcon","FormControl","InputLabel","Select","labelId","MenuItem","ResponsiveContainer","BarChart","margin","right","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","formatter","Legend","Bar","fill","PieChart","Pie","cx","cy","labelLine","outerRadius","nameKey","percent","entry","Cell","LineChart","Line","stroke","activeDot","r","borderCollapse","padding","textAlign","SAVED_REPORTS","createdAt","favorite","tags","SavedReports","anchorEl","setAnchorEl","selectedReportId","setSelectedReportId","searchQuery","setSearchQuery","favorites","setFavorites","acc","report","handleMenuClose","getChartIcon","filteredReports","filter","some","tag","startAdornment","SearchIcon","stopPropagation","FavoriteIcon","FavoriteBorderIcon","idx","ListItemSecondaryAction","edge","handleMenuOpen","currentTarget","MoreVertIcon","Menu","Boolean","DownloadIcon","EditIcon","ShareIcon","DeleteIcon","globalAISearch","constructor","searchHistory","searchCache","Map","contextData","this","loadSearchHistory","setContext","context","search","filters","cacheKey","generateCacheKey","has","get","searchRequest","response","results","processSearchResults","set","addToSearchHistory","getFallbackResults","quickSearch","maxResults","getSearchSuggestions","partialQuery","currentPage","getPopularSearches","suggestionRequest","suggestions","contextualSearch","_this$contextData","contextualFilters","types","contextual","semanticSearch","semanticRequest","originalQuery","relevanceScore","relevance","metadata","url","generateResultUrl","contract","invoice","requirement","quotation","JSON","stringify","popularSearches","default","unshift","saveSearchHistory","saved","localStorage","getItem","parse","setItem","clearCache","clear","getSearchStats","historyCount","cacheSize","recentSearches","exportSearchData","history","avatar","Dashboard","_searchRef$current","location","useLocation","navigate","useNavigate","currentQuery","setCurrentQuery","isLoaded","setIsLoaded","isSearchOpen","setIsSearchOpen","setSuggestions","isMinimized","setIsMinimized","showScrollToTop","setShowScrollToTop","scrollY","setScrollY","showSearchResults","setShowSearchResults","activeTab","setActiveTab","expandedSections","setExpandedSections","assistantOpen","setAssistantOpen","assistantMinimized","setAssistantMinimized","assistantQuery","setAssistantQuery","searchRef","inputRef","timer","clearTimeout","handleScroll","currentScrollY","window","addEventListener","removeEventListener","loadSuggestions","pathname","handleSearch","log","handleGenerateReport","getContactDisplay","test","handleContactClick","contactId","handleDealClick","dealId","handleShowMore","getExtendedContacts","extended","push","getExtendedDeals","getStatusColor","status","gutterBottom","mx","ClickAwayListener","onClickAway","handleClickAway","Zoom","onFocus","handleInputFocus","onKeyDown","_inputRef$current","blur","CircularProgress","borderWidth","Popper","placement","clientWidth","letterSpacing","ListItemButton","charAt","whiteSpace","textOverflow","flexShrink","handleViewAllContacts","handleViewAllDeals","my","handleOpenAssistant","SparkleIcon","substring","Slide","direction","mountOnEnter","unmountOnExit","handleScrollToTop","scrollTo","KeyboardArrowUpIcon","MicIcon","handleBackToDropdown","ArrowBackIcon","HandshakeIcon","lg","DynamicCharts","CrmAssistantPanel","handleCloseAssistant","handleMinimizeAssistant"],"sourceRoot":""}