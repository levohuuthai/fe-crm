{"version":3,"file":"static/js/612.ad06e708.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Payment.js","pages/InvoiceManagement/index.tsx","../node_modules/@mui/icons-material/esm/Print.js","../node_modules/@mui/material/esm/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/esm/InputAdornment/InputAdornment.js","../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/esm/Stack/Stack.js","../node_modules/@mui/system/esm/styled/styled.js","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2m0 14H4v-6h16zm0-10H4V6h16z\"\n}), 'Payment');","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Box, Typography, Paper, Tabs, Tab, Button, TextField, Table, TableBody,\r\n  TableCell, TableContainer, TableHead, TableRow, IconButton, Chip, Dialog,\r\n  DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, Select,\r\n  MenuItem, Card, CardContent, Snackbar, Alert, Tooltip, Stack, Badge,\r\n  LinearProgress,\r\n  InputAdornment\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon, Edit as EditIcon, Visibility as ViewIcon, Search as SearchIcon,\r\n  Payment as PaymentIcon, Receipt as ReceiptIcon, Send as SendIcon, Print as PrintIcon\r\n} from '@mui/icons-material';\r\n\r\n// Types\r\ninterface InvoiceTemplate {\r\n  id: string; name: string; code: string; description: string;\r\n  type: 'standard' | 'vat' | 'export'; status: 'active' | 'inactive';\r\n  usageCount: number; defaultTaxRate: number;\r\n}\r\n\r\ninterface Invoice {\r\n  id: string; name: string; code: string; contractName: string;\r\n  appendixName?: string; customerName: string; issueDate: string; dueDate: string;\r\n  totalAmount: number; paidAmount: number; remainingAmount: number;\r\n  status: 'draft' | 'sent' | 'partial' | 'paid' | 'overdue'; type: 'standard' | 'vat' | 'export';\r\n}\r\n\r\ntype InvoiceTab = 'templates' | 'invoices';\r\n\r\nconst InvoiceManagement: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [currentTab, setCurrentTab] = useState<InvoiceTab>('templates');\r\n  const [templates, setTemplates] = useState<InvoiceTemplate[]>([]);\r\n  const [invoices, setInvoices] = useState<Invoice[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('all');\r\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\r\n  const [paymentDialogOpen, setPaymentDialogOpen] = useState(false);\r\n  const [selectedInvoice, setSelectedInvoice] = useState<Invoice | null>(null);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' as 'success' | 'error' });\r\n\r\n  // Mock data\r\n  useEffect(() => {\r\n    const mockTemplates: InvoiceTemplate[] = [\r\n      {\r\n        id: 'IT001', name: 'Mẫu hóa đơn tiêu chuẩn', code: 'IT001',\r\n        description: 'Mẫu hóa đơn cho các giao dịch thông thường',\r\n        type: 'standard', status: 'active', usageCount: 25, defaultTaxRate: 10\r\n      },\r\n      {\r\n        id: 'IT002', name: 'Mẫu hóa đơn VAT', code: 'IT002',\r\n        description: 'Mẫu hóa đơn giá trị gia tăng',\r\n        type: 'vat', status: 'active', usageCount: 18, defaultTaxRate: 10\r\n      }\r\n    ];\r\n\r\n    const mockInvoices: Invoice[] = [\r\n      {\r\n        id: 'INV001', name: 'Hóa đơn phát triển CRM - Giai đoạn 1', code: 'INV001',\r\n        contractName: 'Hợp đồng phát triển CRM', appendixName: 'Phụ lục module quản lý khách hàng',\r\n        customerName: 'Công ty ABC', issueDate: '2024-02-01', dueDate: '2024-02-15',\r\n        totalAmount: 500000000, paidAmount: 500000000, remainingAmount: 0,\r\n        status: 'paid', type: 'vat'\r\n      },\r\n      {\r\n        id: 'INV002', name: 'Hóa đơn phát triển CRM - Giai đoạn 2', code: 'INV002',\r\n        contractName: 'Hợp đồng phát triển CRM', appendixName: 'Phụ lục module báo cáo',\r\n        customerName: 'Công ty ABC', issueDate: '2024-02-15', dueDate: '2024-03-01',\r\n        totalAmount: 300000000, paidAmount: 150000000, remainingAmount: 150000000,\r\n        status: 'partial', type: 'vat'\r\n      },\r\n      {\r\n        id: 'INV003', name: 'Hóa đơn tư vấn hệ thống', code: 'INV003',\r\n        contractName: 'Hợp đồng tư vấn', customerName: 'Công ty XYZ',\r\n        issueDate: '2024-01-20', dueDate: '2024-02-05', totalAmount: 100000000,\r\n        paidAmount: 0, remainingAmount: 100000000, status: 'overdue', type: 'standard'\r\n      }\r\n    ];\r\n\r\n    setTemplates(mockTemplates);\r\n    setInvoices(mockInvoices);\r\n  }, []);\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': case 'paid': return 'success';\r\n      case 'partial': case 'sent': return 'info';\r\n      case 'overdue': return 'error';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(amount);\r\n  };\r\n\r\n  const getPaymentProgress = (invoice: Invoice) => {\r\n    return (invoice.paidAmount / invoice.totalAmount) * 100;\r\n  };\r\n\r\n  const handleCreate = () => {\r\n    setSnackbar({\r\n      open: true,\r\n      message: currentTab === 'templates'\r\n        ? t('pages.invoices.tabs.templates')\r\n        : t('pages.invoices.dialogs.create.title'),\r\n      severity: 'success'\r\n    });\r\n    setCreateDialogOpen(false);\r\n  };\r\n\r\n  const handlePayment = () => {\r\n    setSnackbar({ open: true, message: t('pages.invoices.dialogs.actions.record'), severity: 'success' });\r\n    setPaymentDialogOpen(false);\r\n    setSelectedInvoice(null);\r\n  };\r\n\r\n  const filteredTemplates = templates.filter(template => {\r\n    const matchesSearch = template.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesStatus = statusFilter === 'all' || template.status === statusFilter;\r\n    return matchesSearch && matchesStatus;\r\n  });\r\n\r\n  const filteredInvoices = invoices.filter(invoice => {\r\n    const matchesSearch = invoice.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         invoice.customerName.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesStatus = statusFilter === 'all' || invoice.status === statusFilter;\r\n    return matchesSearch && matchesStatus;\r\n  });\r\n\r\n  // Calculate dashboard stats\r\n  const totalValue = invoices.reduce((sum, inv) => sum + inv.totalAmount, 0);\r\n  const totalPaid = invoices.reduce((sum, inv) => sum + inv.paidAmount, 0);\r\n  const overdueCount = invoices.filter(inv => inv.status === 'overdue').length;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', p: 3 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ mb: 3 }}>\r\n        🧾 {t('pages.invoices.title')}\r\n      </Typography>\r\n\r\n      {/* Dashboard Overview */}\r\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3, mb: 3 }}>\r\n        <Box sx={{ flex: '1 1 220px', maxWidth: { xs: '100%', sm: '220px' } }}>\r\n          <Card><CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>{t('pages.invoices.stats.totalInvoices')}</Typography>\r\n            <Typography variant=\"h4\">{invoices.length}</Typography>\r\n          </CardContent></Card>\r\n        </Box>\r\n        <Box sx={{ flex: '1 1 220px', maxWidth: { xs: '100%', sm: '220px' } }}>\r\n          <Card><CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>{t('pages.invoices.stats.totalValue')}</Typography>\r\n            <Typography variant=\"h6\">{formatCurrency(totalValue)}</Typography>\r\n          </CardContent></Card>\r\n        </Box>\r\n        <Box sx={{ flex: '1 1 220px', maxWidth: { xs: '100%', sm: '220px' } }}>\r\n          <Card><CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>{t('pages.invoices.stats.paid')}</Typography>\r\n            <Typography variant=\"h6\" color=\"success.main\">{formatCurrency(totalPaid)}</Typography>\r\n            <Typography variant=\"caption\">({((totalPaid/totalValue)*100).toFixed(1)}%)</Typography>\r\n          </CardContent></Card>\r\n        </Box>\r\n        <Box sx={{ flex: '1 1 220px', maxWidth: { xs: '100%', sm: '220px' } }}>\r\n          <Card><CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>{t('pages.invoices.stats.overdue')}</Typography>\r\n            <Typography variant=\"h4\" color=\"error.main\">{overdueCount}</Typography>\r\n          </CardContent></Card>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Paper sx={{ width: '100%' }}>\r\n        <Tabs value={currentTab} onChange={(e, v) => setCurrentTab(v)} sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <Tab label={<Badge badgeContent={templates.length} color=\"primary\">{t('pages.invoices.tabs.templates')}</Badge>} value=\"templates\" />\r\n          <Tab label={<Badge badgeContent={invoices.length} color=\"primary\">{t('pages.invoices.tabs.invoices')}</Badge>} value=\"invoices\" />\r\n        </Tabs>\r\n\r\n        {/* Search and Filter Bar */}\r\n        <Box sx={{ p: 2, display: 'flex', gap: 2, alignItems: 'center', flexWrap: 'wrap' }}>\r\n          <TextField\r\n            placeholder={t('pages.acceptance.searchPlaceholder')}\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            InputProps={{ startAdornment: <SearchIcon sx={{ mr: 1, color: 'text.secondary' }} /> }}\r\n            sx={{ minWidth: 300 }}\r\n          />\r\n          \r\n          <FormControl sx={{ minWidth: 150 }}>\r\n            <InputLabel>{t('pages.invoices.filters.status')}</InputLabel>\r\n            <Select value={statusFilter} onChange={(e) => setStatusFilter(e.target.value)} label={t('pages.invoices.filters.status')}>\r\n              <MenuItem value=\"all\">{t('pages.invoices.filters.all')}</MenuItem>\r\n              {currentTab === 'templates' ? (\r\n                <>\r\n                  <MenuItem value=\"active\">{t('pages.invoices.filters.templates.active')}</MenuItem>\r\n                  <MenuItem value=\"inactive\">{t('pages.invoices.filters.templates.inactive')}</MenuItem>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <MenuItem value=\"draft\">{t('pages.invoices.filters.invoices.draft')}</MenuItem>\r\n                  <MenuItem value=\"sent\">{t('pages.invoices.filters.invoices.sent')}</MenuItem>\r\n                  <MenuItem value=\"partial\">{t('pages.invoices.filters.invoices.partial')}</MenuItem>\r\n                  <MenuItem value=\"paid\">{t('pages.invoices.filters.invoices.paid')}</MenuItem>\r\n                  <MenuItem value=\"overdue\">{t('pages.invoices.filters.invoices.overdue')}</MenuItem>\r\n                </>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Button variant=\"contained\" startIcon={<AddIcon />} onClick={() => setCreateDialogOpen(true)} sx={{ ml: 'auto' }}>\r\n            {currentTab === 'templates' ? t('pages.invoices.tabs.templates') : t('pages.invoices.dialogs.create.title')}\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Templates Tab */}\r\n        {currentTab === 'templates' && (\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>{t('pages.invoices.columns.templates.code')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.templates.name')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.templates.description')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.templates.type')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.templates.taxRate')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.templates.usage')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.templates.status')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.templates.actions')}</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {filteredTemplates.map((template) => (\r\n                  <TableRow key={template.id}>\r\n                    <TableCell>{template.code}</TableCell>\r\n                    <TableCell>{template.name}</TableCell>\r\n                    <TableCell>{template.description}</TableCell>\r\n                    <TableCell>\r\n                      <Chip label={template.type} size=\"small\" />\r\n                    </TableCell>\r\n                    <TableCell>{template.defaultTaxRate}%</TableCell>\r\n                    <TableCell>\r\n                      <Badge badgeContent={template.usageCount} color=\"primary\"><ReceiptIcon /></Badge>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Chip label={template.status === 'active' ? t('pages.invoices.filters.templates.active') : t('pages.invoices.filters.templates.inactive')} color={getStatusColor(template.status) as any} size=\"small\" />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Stack direction=\"row\" spacing={1}>\r\n                        <Tooltip title={t('tooltips.view')}><IconButton size=\"small\"><ViewIcon /></IconButton></Tooltip>\r\n                        <Tooltip title={t('common.edit')}><IconButton size=\"small\"><EditIcon /></IconButton></Tooltip>\r\n                      </Stack>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n\r\n        {/* Invoices Tab */}\r\n        {currentTab === 'invoices' && (\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>{t('pages.invoices.columns.invoices.invoiceCode')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.invoices.invoiceName')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.invoices.customer')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.invoices.appendix')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.invoices.issueDate')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.invoices.value')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.invoices.paymentProgress')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.invoices.status')}</TableCell>\r\n                  <TableCell>{t('pages.invoices.columns.invoices.actions')}</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {filteredInvoices.map((invoice) => (\r\n                  <TableRow key={invoice.id}>\r\n                    <TableCell>{invoice.code}</TableCell>\r\n                    <TableCell>\r\n                      <Typography variant=\"body2\">{invoice.name}</Typography>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">{invoice.contractName}</Typography>\r\n                    </TableCell>\r\n                    <TableCell>{invoice.customerName}</TableCell>\r\n                    <TableCell>\r\n                      {invoice.appendixName ? (\r\n                        <Typography variant=\"body2\">{invoice.appendixName}</Typography>\r\n                      ) : (\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">{t('pages.invoices.columns.invoices.none')}</Typography>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell>{new Date(invoice.issueDate).toLocaleDateString('vi-VN')}</TableCell>\r\n                    <TableCell>{formatCurrency(invoice.totalAmount)}</TableCell>\r\n                    <TableCell>\r\n                      <Box sx={{ width: 100 }}>\r\n                        <LinearProgress variant=\"determinate\" value={getPaymentProgress(invoice)} />\r\n                        <Typography variant=\"caption\">\r\n                          {((invoice.paidAmount/invoice.totalAmount)*100).toFixed(0)}%\r\n                        </Typography>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Chip \r\n                        label={\r\n                          invoice.status === 'draft' ? t('pages.invoices.filters.invoices.draft') :\r\n                          invoice.status === 'sent' ? t('pages.invoices.filters.invoices.sent') :\r\n                          invoice.status === 'partial' ? t('pages.invoices.filters.invoices.partial') :\r\n                          invoice.status === 'paid' ? t('pages.invoices.filters.invoices.paid') : t('pages.invoices.filters.invoices.overdue')\r\n                        }\r\n                        color={getStatusColor(invoice.status) as any}\r\n                        size=\"small\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Stack direction=\"row\" spacing={1}>\r\n                        <Tooltip title={t('tooltips.view')}><IconButton size=\"small\"><ViewIcon /></IconButton></Tooltip>\r\n                        <Tooltip title={t('common.download')}><IconButton size=\"small\"><PrintIcon /></IconButton></Tooltip>\r\n                        {(invoice.status === 'sent' || invoice.status === 'partial' || invoice.status === 'overdue') && (\r\n                          <Tooltip title={t('pages.invoices.dialogs.actions.record')}>\r\n                            <IconButton size=\"small\" color=\"success\" onClick={() => { setSelectedInvoice(invoice); setPaymentDialogOpen(true); }}>\r\n                              <PaymentIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        )}\r\n                        <Tooltip title={t('pages.contacts.emailWindow.actions.send')}><IconButton size=\"small\"><SendIcon /></IconButton></Tooltip>\r\n                      </Stack>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </Paper>\r\n\r\n      {/* Create Dialog */}\r\n      <Dialog open={createDialogOpen} onClose={() => setCreateDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>{currentTab === 'templates' ? t('pages.invoices.tabs.templates') : t('pages.invoices.dialogs.create.title')}</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mt: 1 }}>\r\n            <Box sx={{ flex: '1 1 45%', minWidth: '250px' }}>\r\n              <TextField fullWidth label={currentTab === 'templates' ? t('pages.invoices.columns.templates.name') : t('pages.invoices.columns.invoices.invoiceName')} />\r\n            </Box>\r\n            <Box sx={{ flex: '1 1 45%', minWidth: '250px' }}>\r\n              <TextField fullWidth label={t('pages.invoices.columns.templates.code')} />\r\n            </Box>\r\n            <Box sx={{ flex: '1 1 100%' }}>\r\n              <TextField fullWidth label={t('pages.invoices.columns.templates.description')} multiline rows={3} />\r\n            </Box>\r\n            {currentTab === 'templates' ? (\r\n              <Box sx={{ flex: '1 1 45%', minWidth: '250px' }}>\r\n                <TextField \r\n                  fullWidth \r\n                  label={t('pages.invoices.columns.templates.taxRate')}\r\n                  type=\"number\"\r\n                  defaultValue=\"10\"\r\n                  InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\r\n                  }}\r\n                />\r\n              </Box>\r\n            ) : (\r\n              <>\r\n                <Box sx={{ flex: '1 1 45%', minWidth: '250px' }}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>{t('pages.invoices.dialogs.create.selectTemplateLabel')}</InputLabel>\r\n                    <Select label={t('pages.invoices.dialogs.create.selectTemplateLabel')}>\r\n                      <MenuItem value=\"INV-TEMP-001\">{t('pages.invoices.dialogs.create.selectTemplatePlaceholder')}</MenuItem>\r\n                      <MenuItem value=\"INV-TEMP-002\">{t('pages.invoices.dialogs.create.selectTemplatePlaceholder')}</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Box>\r\n                <Box sx={{ flex: '1 1 45%', minWidth: '250px' }}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>{t('pages.invoices.dialogs.create.acceptanceLabel')}</InputLabel>\r\n                    <Select label={t('pages.invoices.dialogs.create.acceptanceLabel')}>\r\n                      <MenuItem value=\"ACC-001\">ACC-001</MenuItem>\r\n                      <MenuItem value=\"ACC-002\">ACC-002</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Box>\r\n                <Box sx={{ flex: '1 1 100%' }}>\r\n                  <TextField \r\n                    fullWidth \r\n                    label={t('pages.invoices.columns.invoices.value')}\r\n                    type=\"number\"\r\n                    defaultValue=\"10000000\"\r\n                    InputProps={{\r\n                      startAdornment: <InputAdornment position=\"start\">{t('pages.invoices.ui.currencyUnit')}</InputAdornment>,\r\n                    }}\r\n                  />\r\n                </Box>\r\n                <Box sx={{ flex: '1 1 45%', minWidth: '250px' }}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label={t('pages.invoices.columns.invoices.issueDate')}\r\n                    type=\"date\"\r\n                    defaultValue={new Date().toISOString().split('T')[0]}\r\n                    InputLabelProps={{ shrink: true }}\r\n                  />\r\n                </Box>\r\n                <Box sx={{ flex: '1 1 45%', minWidth: '250px' }}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label={t('pages.invoices.columns.invoices.issueDate')}\r\n                    type=\"date\"\r\n                    defaultValue={new Date(Date.now() + 30*24*60*60*1000).toISOString().split('T')[0]}\r\n                    InputLabelProps={{ shrink: true }}\r\n                  />\r\n                </Box>\r\n              </>\r\n            )}\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setCreateDialogOpen(false)}>{t('common.cancel')}</Button>\r\n          {currentTab === 'invoices' && <Button variant=\"outlined\">{t('pages.invoices.dialogs.actions.saveDraft')}</Button>}\r\n          <Button variant=\"contained\" onClick={handleCreate}>{t('common.save')}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Payment Dialog */}\r\n      <Dialog open={paymentDialogOpen} onClose={() => setPaymentDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>{t('pages.invoices.dialogs.payment.title')}{selectedInvoice ? ` - ${selectedInvoice.code}` : ''}</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mt: 1 }}>\r\n            <Box sx={{ flex: '1 1 45%', minWidth: '250px' }}>\r\n              <TextField\r\n                fullWidth\r\n                label={t('pages.invoices.columns.invoices.issueDate')}\r\n                type=\"date\"\r\n                defaultValue={new Date().toISOString().split('T')[0]}\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n            </Box>\r\n            <Box sx={{ flex: '1 1 45%', minWidth: '250px' }}>\r\n              <TextField \r\n                fullWidth \r\n                label={t('pages.invoices.columns.invoices.value')}\r\n                type=\"number\"\r\n                defaultValue=\"5000000\"\r\n                InputProps={{\r\n                  startAdornment: <InputAdornment position=\"start\">{t('pages.invoices.ui.currencyUnit')}</InputAdornment>,\r\n                }}\r\n              />\r\n            </Box>\r\n            <Box sx={{ flex: '1 1 100%' }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>{t('pages.invoices.dialogs.payment.method')}</InputLabel>\r\n                <Select label={t('pages.invoices.dialogs.payment.method')} defaultValue=\"bank\">\r\n                  <MenuItem value=\"bank\">{t('pages.invoices.dialogs.payment.methods.bank')}</MenuItem>\r\n                  <MenuItem value=\"cash\">{t('pages.invoices.dialogs.payment.methods.cash')}</MenuItem>\r\n                  <MenuItem value=\"card\">{t('pages.invoices.dialogs.payment.methods.card')}</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n            <Box sx={{ flex: '1 1 100%' }}>\r\n              <TextField fullWidth label={t('pages.deals.ui.notes', { defaultValue: 'Notes' })} multiline rows={2} />\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setPaymentDialogOpen(false)}>{t('common.cancel')}</Button>\r\n          <Button variant=\"contained\" onClick={handlePayment}>{t('pages.invoices.dialogs.actions.record')}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Snackbar */}\r\n      <Snackbar open={snackbar.open} autoHideDuration={6000} onClose={() => setSnackbar({...snackbar, open: false})}>\r\n        <Alert severity={snackbar.severity}>{snackbar.message}</Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default InvoiceManagement;\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3m-3 11H8v-5h8zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1m-1-9H6v4h12z\"\n}), 'Print');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nvar _span;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport Typography from \"../Typography/index.js\";\nimport FormControlContext from \"../FormControl/FormControlContext.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from \"./inputAdornmentClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active,\n  variants: [{\n    props: {\n      variant: 'filled'\n    },\n    style: {\n      [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n        marginTop: 16\n      }\n    }\n  }, {\n    props: {\n      position: 'start'\n    },\n    style: {\n      marginRight: 8\n    }\n  }, {\n    props: {\n      position: 'end'\n    },\n    style: {\n      marginLeft: 8\n    }\n  }, {\n    props: {\n      disablePointerEvents: true\n    },\n    style: {\n      pointerEvents: 'none'\n    }\n  }]\n})));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = {\n    ...props,\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, {\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ...other,\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"textSecondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? (/* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          \"aria-hidden\": true,\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport deepmerge from '@mui/utils/deepmerge';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport systemStyled from \"../styled/index.js\";\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from \"../breakpoints/index.js\";\nimport { createUnarySpacing, getValue } from \"../spacing/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root'\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push(/*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    display: 'flex',\n    flexDirection: 'column',\n    ...handleBreakpoints({\n      theme\n    }, resolveBreakpointValues({\n      values: ownerState.direction,\n      breakpoints: theme.breakpoints.values\n    }), propValue => ({\n      flexDirection: propValue\n    }))\n  };\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children,\n      className,\n      useFlexGap = false,\n      ...other\n    } = props;\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, {\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className),\n      ...other,\n      children: divider ? joinChildren(children, divider) : children\n    });\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root'\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","'use client';\n\nimport getThemeProps from \"./getThemeProps.js\";\nimport useTheme from \"../useTheme/index.js\";\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  return getThemeProps({\n    theme,\n    name,\n    props\n  });\n}"],"names":["createSvgIcon","_jsx","d","InvoiceManagement","t","useTranslation","currentTab","setCurrentTab","useState","templates","setTemplates","invoices","setInvoices","searchTerm","setSearchTerm","statusFilter","setStatusFilter","createDialogOpen","setCreateDialogOpen","paymentDialogOpen","setPaymentDialogOpen","selectedInvoice","setSelectedInvoice","snackbar","setSnackbar","open","message","severity","useEffect","id","name","code","description","type","status","usageCount","defaultTaxRate","contractName","appendixName","customerName","issueDate","dueDate","totalAmount","paidAmount","remainingAmount","getStatusColor","formatCurrency","amount","Intl","NumberFormat","style","currency","format","getPaymentProgress","invoice","filteredTemplates","filter","template","matchesSearch","toLowerCase","includes","matchesStatus","filteredInvoices","totalValue","reduce","sum","inv","totalPaid","overdueCount","length","_jsxs","Box","sx","width","p","children","Typography","variant","component","gutterBottom","mb","display","flexWrap","gap","flex","maxWidth","xs","sm","Card","CardContent","color","toFixed","Paper","Tabs","value","onChange","e","v","borderBottom","borderColor","Tab","label","Badge","badgeContent","alignItems","TextField","placeholder","target","InputProps","startAdornment","SearchIcon","mr","minWidth","FormControl","InputLabel","Select","MenuItem","_Fragment","Button","startIcon","AddIcon","onClick","ml","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","Chip","size","ReceiptIcon","Stack","direction","spacing","Tooltip","title","IconButton","ViewIcon","EditIcon","Date","toLocaleDateString","LinearProgress","PrintIcon","PaymentIcon","SendIcon","Dialog","onClose","fullWidth","DialogTitle","DialogContent","mt","multiline","rows","defaultValue","endAdornment","InputAdornment","position","toISOString","split","InputLabelProps","shrink","now","DialogActions","handleCreate","concat","handlePayment","Snackbar","autoHideDuration","_objectSpread","Alert","getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_span","InputAdornmentRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","disablePointerEvents","memoTheme","_ref","theme","maxHeight","whiteSpace","vars","palette","action","active","variants","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useDefaultProps","className","disableTypography","variantProp","other","_objectWithoutProperties","muiFormControl","useFormControl","classes","slots","composeClasses","useUtilityClasses","FormControlContext","Provider","as","clsx","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","useThemePropsDefault","useThemePropsSystem","joinChildren","separator","childrenArray","toArray","Boolean","output","child","index","push","key","flexDirection","handleBreakpoints","resolveBreakpointValues","values","breakpoints","propValue","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","useFlexGap","getValue","margin","row","column","deepmerge","mergeBreakpointsInOrder","options","arguments","undefined","createStyledComponent","useThemeProps","componentName","StackRoot","themeProps","extendSxProp","divider","createStack","createStyled","themeId","useTheme","getThemeProps"],"sourceRoot":""}