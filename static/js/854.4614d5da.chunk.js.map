{"version":3,"file":"static/js/854.4614d5da.chunk.js","mappings":"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","sources":["components/CrmAssistantPanel/index.tsx","pages/Dashboard/components/DynamicKPIStats.tsx","pages/Dashboard/components/TrendingInsightsPredictions.tsx","pages/Dashboard/components/DynamicCharts.tsx","pages/Dashboard/components/SavedReports.tsx","services/globalAISearch/index.ts","pages/Dashboard/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  TextField,\r\n  InputAdornment,\r\n  Paper,\r\n  Chip,\r\n  Button,\r\n  Avatar,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Skeleton,\r\n  Alert,\r\n  Snackbar,\r\n  useTheme,\r\n  alpha,\r\n  Fade,\r\n  Slide\r\n} from '@mui/material';\r\nimport {\r\n  Close as CloseIcon,\r\n  Minimize as MinimizeIcon,\r\n  Fullscreen as ExpandIcon,\r\n  Send as SendIcon,\r\n  AttachFile as AttachIcon,\r\n  SmartToy as AIIcon,\r\n  Person as PersonIcon,\r\n  Business as BusinessIcon,\r\n  TrendingUp as TrendingIcon,\r\n  Email as EmailIcon,\r\n  Add as AddIcon,\r\n  Task as TaskIcon,\r\n  OpenInNew as OpenIcon\r\n} from '@mui/icons-material';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// Types\r\nexport interface ChatMessage {\r\n  id: string;\r\n  type: 'user' | 'assistant';\r\n  content: string;\r\n  timestamp: Date;\r\n  isCard?: boolean;\r\n  cardData?: AssistantCardData;\r\n}\r\n\r\nexport interface ContactData {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  owner: string;\r\n  leadStatus: string;\r\n  statusColor: string;\r\n}\r\n\r\nexport interface DealData {\r\n  id: string;\r\n  name: string;\r\n  customer: string;\r\n  amount: number;\r\n  stage: string;\r\n  stageColor: string;\r\n  deadline: string;\r\n}\r\n\r\nexport interface AssistantCardData {\r\n  query: string;\r\n  summary: string[];\r\n  contacts: ContactData[];\r\n  deals: DealData[];\r\n  showContacts: boolean;\r\n  showDeals: boolean;\r\n}\r\n\r\nexport interface CrmAssistantPanelProps {\r\n  open: boolean;\r\n  initialQuery?: string;\r\n  onClose: () => void;\r\n  onMinimize: () => void;\r\n}\r\n\r\n// Mock data\r\nconst mockContacts: ContactData[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Nguyễn Văn An',\r\n    email: 'an.nguyen@company.com',\r\n    phone: '0901234567',\r\n    owner: 'Trần Thị B',\r\n    leadStatus: 'Hot Lead',\r\n    statusColor: '#f44336'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Lê Thị Cẩm',\r\n    email: 'cam.le@business.com',\r\n    phone: '0987654321',\r\n    owner: 'Phạm Văn C',\r\n    leadStatus: 'Qualified',\r\n    statusColor: '#4caf50'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Hoàng Minh Đức',\r\n    email: 'duc.hoang@tech.vn',\r\n    phone: '0912345678',\r\n    owner: 'Nguyễn Thị D',\r\n    leadStatus: 'New Lead',\r\n    statusColor: '#2196f3'\r\n  }\r\n];\r\n\r\nconst mockDeals: DealData[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Hệ thống CRM cho ABC Corp',\r\n    customer: 'ABC Corporation',\r\n    amount: 250000000,\r\n    stage: 'Đã gửi báo giá',\r\n    stageColor: '#ff9800',\r\n    deadline: '2024-02-15'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Giải pháp ERP XYZ',\r\n    customer: 'XYZ Trading',\r\n    amount: 180000000,\r\n    stage: 'Đang đàm phán',\r\n    stageColor: '#9c27b0',\r\n    deadline: '2024-02-28'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Tư vấn Marketing Digital',\r\n    customer: 'Innovation Startup',\r\n    amount: 75000000,\r\n    stage: 'Liên hệ ban đầu',\r\n    stageColor: '#607d8b',\r\n    deadline: '2024-03-10'\r\n  }\r\n];\r\n\r\n// Helper functions\r\nconst formatAmount = (amount: number): string => {\r\n  if (amount >= 1000000000) {\r\n    return `${(amount / 1000000000).toFixed(1)}B₫`;\r\n  } else if (amount >= 1000000) {\r\n    return `${(amount / 1000000).toFixed(1)}M₫`;\r\n  } else if (amount >= 1000) {\r\n    return `${(amount / 1000).toFixed(1)}K₫`;\r\n  }\r\n  return `${amount}₫`;\r\n};\r\n\r\nconst generateConversationTitle = (query: string): string => {\r\n  const words = query.split(' ').slice(0, 6);\r\n  return words.join(' ');\r\n};\r\n\r\nconst generateMockSummary = (query: string): string[] => {\r\n  return [\r\n    `Tìm thấy ${mockContacts.length} liên hệ phù hợp với truy vấn`,\r\n    `${mockDeals.length} cơ hội mở với tổng giá trị ~${formatAmount(mockDeals.reduce((sum, deal) => sum + deal.amount, 0))}`,\r\n    `Nhiều deal đang ở giai đoạn \"Đã gửi báo giá\" cần theo dõi`,\r\n    `Tỷ lệ chuyển đổi lead hiện tại: 65%`\r\n  ];\r\n};\r\n\r\n// Mini Table Component\r\nconst MiniTable: React.FC<{\r\n  type: 'contacts' | 'deals';\r\n  data: ContactData[] | DealData[];\r\n  onAction: (action: string, id: string) => void;\r\n}> = ({ type, data, onAction }) => {\r\n  const theme = useTheme();\r\n  const { t, i18n } = useTranslation();\r\n  const locale = i18n.language && i18n.language.startsWith('ja') ? 'ja-JP' : 'en-US';\r\n  const formatDate = (dateStr: string) => {\r\n    const d = new Date(dateStr);\r\n    return new Intl.DateTimeFormat(locale, { year: 'numeric', month: '2-digit', day: '2-digit' }).format(d);\r\n  };\r\n\r\n  if (type === 'contacts') {\r\n    const contacts = data as ContactData[];\r\n    return (\r\n      <TableContainer component={Paper} sx={{ maxHeight: 200, border: `1px solid ${alpha(theme.palette.divider, 0.3)}` }}>\r\n        <Table size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.contacts.columns.name')}</TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.contacts.columns.email')}</TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.contacts.columns.owner')}</TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.contacts.columns.leadStatus')}</TableCell>\r\n              <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.contacts.columns.actions')}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {contacts.map((contact) => (\r\n              <TableRow key={contact.id} hover>\r\n                <TableCell sx={{ fontSize: '0.8rem', fontWeight: 'medium' }}>{contact.name}</TableCell>\r\n                <TableCell sx={{ fontSize: '0.75rem' }}>{contact.email}</TableCell>\r\n                <TableCell sx={{ fontSize: '0.75rem' }}>{contact.owner}</TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    label={contact.leadStatus}\r\n                    size=\"small\"\r\n                    sx={{\r\n                      backgroundColor: alpha(contact.statusColor, 0.1),\r\n                      color: contact.statusColor,\r\n                      border: `1px solid ${alpha(contact.statusColor, 0.3)}`,\r\n                      fontSize: '0.65rem',\r\n                      height: 20\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Button\r\n                    size=\"small\"\r\n                    startIcon={<OpenIcon fontSize=\"small\" />}\r\n                    onClick={() => onAction('open', contact.id)}\r\n                    sx={{ fontSize: '0.7rem', minWidth: 'auto', px: 1 }}\r\n                  >\r\n                    {t('pages.assistant.buttons.open')}\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n  const deals = data as DealData[];\r\n  return (\r\n    <TableContainer component={Paper} sx={{ maxHeight: 200, border: `1px solid ${alpha(theme.palette.divider, 0.3)}` }}>\r\n      <Table size=\"small\" stickyHeader>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.deals.columns.dealName')}</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.deals.columns.customer')}</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.deals.columns.amount')}</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.deals.columns.stage')}</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.deals.columns.expectedCloseDate')}</TableCell>\r\n            <TableCell sx={{ fontWeight: 'bold', fontSize: '0.75rem' }}>{t('pages.deals.columns.actions')}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {deals.map((deal) => (\r\n            <TableRow key={deal.id} hover>\r\n              <TableCell sx={{ fontSize: '0.8rem', fontWeight: 'medium' }}>{deal.name}</TableCell>\r\n              <TableCell sx={{ fontSize: '0.75rem' }}>{deal.customer}</TableCell>\r\n              <TableCell sx={{ fontSize: '0.8rem', fontWeight: 'bold', color: 'success.main' }}>\r\n                {formatAmount(deal.amount)}\r\n              </TableCell>\r\n              <TableCell>\r\n                <Chip\r\n                  label={deal.stage}\r\n                  size=\"small\"\r\n                  sx={{\r\n                    backgroundColor: alpha(deal.stageColor, 0.1),\r\n                    color: deal.stageColor,\r\n                    border: `1px solid ${alpha(deal.stageColor, 0.3)}`,\r\n                    fontSize: '0.65rem',\r\n                    height: 20\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell sx={{ fontSize: '0.75rem' }}>{formatDate(deal.deadline)}</TableCell>\r\n              <TableCell>\r\n                <Box sx={{ display: 'flex', gap: 0.5 }}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    startIcon={<OpenIcon fontSize=\"small\" />}\r\n                    onClick={() => onAction('open', deal.id)}\r\n                    sx={{ fontSize: '0.7rem', minWidth: 'auto', px: 1 }}\r\n                  >\r\n                    {t('pages.assistant.buttons.open')}\r\n                  </Button>\r\n                  <Button\r\n                    size=\"small\"\r\n                    startIcon={<TaskIcon fontSize=\"small\" />}\r\n                    onClick={() => onAction('task', deal.id)}\r\n                    sx={{ fontSize: '0.7rem', minWidth: 'auto', px: 1 }}\r\n                  >\r\n                    {t('pages.assistant.buttons.task')}\r\n                  </Button>\r\n                </Box>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\n// Assistant Card Component\r\nconst AssistantCard: React.FC<{\r\n  data: AssistantCardData;\r\n  loading?: boolean;\r\n  onToggleSection: (section: 'contacts' | 'deals') => void;\r\n  onAction: (action: string, id?: string) => void;\r\n}> = ({ data, loading, onToggleSection, onAction }) => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n\r\n  if (loading) {\r\n    return (\r\n      <Paper sx={{ p: 3, mb: 2, borderRadius: 3, border: `1px solid ${alpha(theme.palette.primary.main, 0.2)}` }}>\r\n        <Skeleton variant=\"text\" width=\"60%\" height={32} sx={{ mb: 2 }} />\r\n        <Box sx={{ mb: 2 }}>\r\n          {[1, 2, 3].map((i) => (\r\n            <Skeleton key={i} variant=\"text\" width=\"80%\" height={24} sx={{ mb: 0.5 }} />\r\n          ))}\r\n        </Box>\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={120} sx={{ mb: 2, borderRadius: 1 }} />\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={120} sx={{ borderRadius: 1 }} />\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper sx={{ \r\n      p: 3, \r\n      mb: 2, \r\n      borderRadius: 3, \r\n      border: `1px solid ${alpha(theme.palette.primary.main, 0.2)}`,\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.02)\r\n    }}>\r\n      <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mb: 2, color: 'primary.main' }}>\r\n        {t('pages.assistant.resultsFor', { query: data.query })}\r\n      </Typography>\r\n\r\n      {/* Summary */}\r\n      <Box sx={{ mb: 3 }}>\r\n        {data.summary.map((item, index) => (\r\n          <Typography key={index} variant=\"body2\" sx={{ mb: 0.5, display: 'flex', alignItems: 'center' }}>\r\n            <Box sx={{ width: 4, height: 4, borderRadius: '50%', backgroundColor: 'primary.main', mr: 1 }} />\r\n            {item}\r\n          </Typography>\r\n        ))}\r\n      </Box>\r\n\r\n      {/* Filter Chips */}\r\n      <Box sx={{ display: 'flex', gap: 1, mb: 3 }}>\r\n        <Chip\r\n          icon={<PersonIcon fontSize=\"small\" />}\r\n          label={t('common.contacts')}\r\n          variant={data.showContacts ? 'filled' : 'outlined'}\r\n          color={data.showContacts ? 'primary' : 'default'}\r\n          onClick={() => onToggleSection('contacts')}\r\n          sx={{ cursor: 'pointer' }}\r\n        />\r\n        <Chip\r\n          icon={<BusinessIcon fontSize=\"small\" />}\r\n          label={t('common.deals')}\r\n          variant={data.showDeals ? 'filled' : 'outlined'}\r\n          color={data.showDeals ? 'primary' : 'default'}\r\n          onClick={() => onToggleSection('deals')}\r\n          sx={{ cursor: 'pointer' }}\r\n        />\r\n      </Box>\r\n\r\n      {/* Top Contacts */}\r\n      {data.showContacts && (\r\n        <Box sx={{ mb: 3 }}>\r\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold', mb: 1.5 }}>\r\n            {t('pages.assistant.topContacts')}\r\n          </Typography>\r\n          <MiniTable type=\"contacts\" data={data.contacts} onAction={onAction} />\r\n        </Box>\r\n      )}\r\n\r\n      {/* Open Deals */}\r\n      {data.showDeals && (\r\n        <Box sx={{ mb: 3 }}>\r\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold', mb: 1.5 }}>\r\n            {t('pages.assistant.openDeals')}\r\n          </Typography>\r\n          <MiniTable type=\"deals\" data={data.deals} onAction={onAction} />\r\n        </Box>\r\n      )}\r\n\r\n      {/* Suggested Actions */}\r\n      <Box>\r\n        <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold', mb: 1.5 }}>\r\n          {t('pages.assistant.nextSuggestions')}\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<AddIcon fontSize=\"small\" />}\r\n            variant=\"outlined\"\r\n            onClick={() => onAction('create-contact')}\r\n          >\r\n            {t('pages.assistant.actions.createContact')}\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<TrendingIcon fontSize=\"small\" />}\r\n            variant=\"outlined\"\r\n            onClick={() => onAction('create-deal')}\r\n          >\r\n            {t('pages.assistant.actions.createDeal')}\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<EmailIcon fontSize=\"small\" />}\r\n            variant=\"outlined\"\r\n            onClick={() => onAction('send-email')}\r\n          >\r\n            {t('pages.assistant.actions.sendDraftEmail')}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n// Chat Message Component\r\nconst ChatMessage: React.FC<{\r\n  message: ChatMessage;\r\n  onToggleSection?: (section: 'contacts' | 'deals') => void;\r\n  onAction?: (action: string, id?: string) => void;\r\n}> = ({ message, onToggleSection, onAction }) => {\r\n  const theme = useTheme();\r\n  const isUser = message.type === 'user';\r\n\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      justifyContent: isUser ? 'flex-end' : 'flex-start',\r\n      mb: 2\r\n    }}>\r\n      <Box sx={{ maxWidth: '80%', width: message.isCard ? '100%' : 'auto' }}>\r\n        {message.isCard && message.cardData ? (\r\n          <AssistantCard\r\n            data={message.cardData}\r\n            onToggleSection={onToggleSection!}\r\n            onAction={onAction!}\r\n          />\r\n        ) : (\r\n          <Paper sx={{\r\n            p: 2,\r\n            backgroundColor: isUser ? 'primary.main' : 'grey.100',\r\n            color: isUser ? 'primary.contrastText' : 'text.primary',\r\n            borderRadius: isUser ? '18px 18px 4px 18px' : '18px 18px 18px 4px',\r\n            maxWidth: 'fit-content'\r\n          }}>\r\n            <Typography variant=\"body2\">\r\n              {message.content}\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Main CRM Assistant Panel Component\r\nconst CrmAssistantPanel: React.FC<CrmAssistantPanelProps> = ({\r\n  open,\r\n  initialQuery = '',\r\n  onClose,\r\n  onMinimize\r\n}) => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n\r\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [conversationTitle, setConversationTitle] = useState('');\r\n  const [cardData, setCardData] = useState<AssistantCardData | null>(null);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '' });\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Initialize with initial query\r\n  useEffect(() => {\r\n    if (open && initialQuery && messages.length === 0) {\r\n      setConversationTitle(generateConversationTitle(initialQuery));\r\n      handleSendMessage(initialQuery, true);\r\n    }\r\n  }, [open, initialQuery]);\r\n\r\n  // Auto scroll to bottom\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async (message: string, isInitial = false) => {\r\n    if (!message.trim()) return;\r\n\r\n    // Add user message\r\n    const userMessage: ChatMessage = {\r\n      id: Date.now().toString(),\r\n      type: 'user',\r\n      content: message,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setIsTyping(true);\r\n\r\n    // Simulate typing delay\r\n    setTimeout(() => {\r\n      setIsTyping(false);\r\n      \r\n      if (isInitial) {\r\n        // Create card response for initial query\r\n        const newCardData: AssistantCardData = {\r\n          query: message,\r\n          summary: generateMockSummary(message),\r\n          contacts: mockContacts,\r\n          deals: mockDeals,\r\n          showContacts: true,\r\n          showDeals: true\r\n        };\r\n\r\n        const assistantMessage: ChatMessage = {\r\n          id: (Date.now() + 1).toString(),\r\n          type: 'assistant',\r\n          content: '',\r\n          timestamp: new Date(),\r\n          isCard: true,\r\n          cardData: newCardData\r\n        };\r\n\r\n        setCardData(newCardData);\r\n        setMessages(prev => [...prev, assistantMessage]);\r\n      } else {\r\n        // Regular text response\r\n        const responses = [\r\n          'Tôi đã phân tích dữ liệu và tìm thấy một số thông tin hữu ích. Bạn có muốn tôi tạo báo cáo chi tiết không?',\r\n          'Dựa trên dữ liệu hiện tại, tôi khuyên bạn nên tập trung vào các lead đang ở giai đoạn \"Đã gửi báo giá\".',\r\n          'Có vẻ như bạn có nhiều cơ hội tiềm năng. Tôi có thể giúp bạn ưu tiên theo giá trị deal.',\r\n          'Tôi nhận thấy một số xu hướng thú vị trong dữ liệu của bạn. Bạn muốn xem phân tích chi tiết không?'\r\n        ];\r\n\r\n        const assistantMessage: ChatMessage = {\r\n          id: (Date.now() + 1).toString(),\r\n          type: 'assistant',\r\n          content: responses[Math.floor(Math.random() * responses.length)],\r\n          timestamp: new Date()\r\n        };\r\n\r\n        setMessages(prev => [...prev, assistantMessage]);\r\n      }\r\n    }, 1500);\r\n  };\r\n\r\n  const handleToggleSection = (section: 'contacts' | 'deals') => {\r\n    if (!cardData) return;\r\n\r\n    const updatedCardData = {\r\n      ...cardData,\r\n      [section === 'contacts' ? 'showContacts' : 'showDeals']: \r\n        !cardData[section === 'contacts' ? 'showContacts' : 'showDeals']\r\n    };\r\n\r\n    setCardData(updatedCardData);\r\n    \r\n    // Update the card message\r\n    setMessages(prev => prev.map(msg => \r\n      msg.isCard ? { ...msg, cardData: updatedCardData } : msg\r\n    ));\r\n  };\r\n\r\n  const handleAction = (action: string, id?: string) => {\r\n    const actionMessages: { [key: string]: string } = {\r\n      'open': '(mock) Đã mở chi tiết',\r\n      'task': '(mock) Đã tạo task',\r\n      'create-contact': '(mock) Đã tạo liên hệ mới',\r\n      'create-deal': '(mock) Đã tạo cơ hội mới',\r\n      'send-email': '(mock) Đã gửi email nháp'\r\n    };\r\n\r\n    setSnackbar({\r\n      open: true,\r\n      message: actionMessages[action] || '(mock) Đã thực hiện'\r\n    });\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage(inputValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        onClose={onClose}\r\n        maxWidth={false}\r\n        PaperProps={{\r\n          sx: {\r\n            width: '960px',\r\n            height: '75vh',\r\n            maxWidth: '90vw',\r\n            maxHeight: '90vh',\r\n            borderRadius: 3,\r\n            overflow: 'hidden'\r\n          }\r\n        }}\r\n        BackdropProps={{\r\n          sx: {\r\n            backgroundColor: alpha(theme.palette.common.black, 0.5),\r\n            backdropFilter: 'blur(4px)'\r\n          }\r\n        }}\r\n      >\r\n        {/* Header */}\r\n        <Box sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          p: 2,\r\n          borderBottom: `1px solid ${theme.palette.divider}`,\r\n          backgroundColor: theme.palette.background.paper,\r\n          position: 'sticky',\r\n          top: 0,\r\n          zIndex: 1\r\n        }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n            <AIIcon color=\"primary\" />\r\n            <Box>\r\n              <Typography variant=\"h6\" sx={{ fontWeight: 'bold', lineHeight: 1 }}>\r\n                CRM Assistant\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                {conversationTitle || 'Start new chat'}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          \r\n          <Box sx={{ display: 'flex', gap: 0.5 }}>\r\n            <IconButton size=\"small\" onClick={onMinimize}>\r\n              <MinimizeIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton size=\"small\">\r\n              <ExpandIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton size=\"small\" onClick={onClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Chat Body */}\r\n        <DialogContent sx={{ \r\n          flex: 1, \r\n          p: 0, \r\n          display: 'flex', \r\n          flexDirection: 'column',\r\n          overflow: 'hidden'\r\n        }}>\r\n          <Box sx={{ \r\n            flex: 1, \r\n            overflow: 'auto', \r\n            p: 2,\r\n            '&::-webkit-scrollbar': {\r\n              width: '6px',\r\n            },\r\n            '&::-webkit-scrollbar-track': {\r\n              backgroundColor: alpha(theme.palette.grey[300], 0.2),\r\n            },\r\n            '&::-webkit-scrollbar-thumb': {\r\n              backgroundColor: alpha(theme.palette.primary.main, 0.3),\r\n              borderRadius: '3px',\r\n              '&:hover': {\r\n                backgroundColor: alpha(theme.palette.primary.main, 0.5),\r\n              }\r\n            }\r\n          }}>\r\n            {messages.length === 0 ? (\r\n              <Box sx={{ \r\n                display: 'flex', \r\n                alignItems: 'center', \r\n                justifyContent: 'center', \r\n                height: '100%',\r\n                flexDirection: 'column',\r\n                color: 'text.secondary'\r\n              }}>\r\n                <AIIcon sx={{ fontSize: 48, mb: 2, opacity: 0.5 }} />\r\n                <Typography variant=\"body1\">\r\n                  {t('pages.assistant.emptyPrompt')}\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <>\r\n                {messages.map((message) => (\r\n                  <ChatMessage\r\n                    key={message.id}\r\n                    message={message}\r\n                    onToggleSection={handleToggleSection}\r\n                    onAction={handleAction}\r\n                  />\r\n                ))}\r\n                \r\n                {isTyping && (\r\n                  <Box sx={{ display: 'flex', justifyContent: 'flex-start', mb: 2 }}>\r\n                    <Paper sx={{\r\n                      p: 2,\r\n                      backgroundColor: 'grey.100',\r\n                      borderRadius: '18px 18px 18px 4px',\r\n                      maxWidth: 'fit-content'\r\n                    }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {t('pages.assistant.typing')}\r\n                      </Typography>\r\n                    </Paper>\r\n                  </Box>\r\n                )}\r\n                \r\n                <div ref={messagesEndRef} />\r\n              </>\r\n            )}\r\n          </Box>\r\n\r\n          {/* Composer */}\r\n          <Box sx={{\r\n            p: 2,\r\n            borderTop: `1px solid ${theme.palette.divider}`,\r\n            backgroundColor: theme.palette.background.paper,\r\n            position: 'sticky',\r\n            bottom: 0\r\n          }}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              maxRows={3}\r\n              placeholder={t('pages.assistant.inputPlaceholder')}\r\n              value={inputValue}\r\n              onChange={(e) => setInputValue(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton size=\"small\" sx={{ mr: 0.5 }}>\r\n                      <AttachIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      onClick={() => handleSendMessage(inputValue)}\r\n                      disabled={!inputValue.trim()}\r\n                    >\r\n                      <SendIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n                sx: {\r\n                  borderRadius: 3,\r\n                  '& .MuiOutlinedInput-notchedOutline': {\r\n                    borderColor: alpha(theme.palette.primary.main, 0.3),\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 0.5, display: 'block' }}>\r\n              {t('pages.assistant.mock.disclaimer')}\r\n            </Typography>\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Snackbar for actions */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={3000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n        message={snackbar.message}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrmAssistantPanel;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Chip,\r\n  LinearProgress,\r\n  useTheme,\r\n  alpha,\r\n  Skeleton,\r\n  IconButton,\r\n  Tooltip,\r\n  Fade,\r\n  Grid,\r\n  Stack\r\n} from '@mui/material';\r\nimport {\r\n  TrendingUp as TrendingUpIcon,\r\n  TrendingDown as TrendingDownIcon,\r\n  People as PeopleIcon,\r\n  AttachMoney as MoneyIcon,\r\n  Assignment as DealsIcon,\r\n  Timeline as TimelineIcon,\r\n  Refresh as RefreshIcon,\r\n  Star as StarIcon,\r\n  ViewModule as ViewModuleIcon,\r\n  ViewCarousel as ViewCarouselIcon\r\n} from '@mui/icons-material';\r\nimport { aiOrchestrator, AIRequest } from '../../../services/aiOrchestration';\r\n\r\ninterface KPIData {\r\n  id: string;\r\n  title: string;\r\n  value: string | number;\r\n  change: number;\r\n  changeLabel: string;\r\n  icon: React.ReactNode;\r\n  color: string;\r\n  description: string;\r\n  isLoading?: boolean;\r\n  lastUpdated?: Date;\r\n}\r\n\r\ninterface DynamicUpdate {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  timestamp: Date;\r\n  type: 'new_customer' | 'deal_closed' | 'revenue_milestone' | 'market_trend';\r\n  value?: string;\r\n  isNew?: boolean;\r\n}\r\n\r\nconst DynamicKPIStats: React.FC = () => {\r\n  const theme = useTheme();\r\n  const [kpiData, setKpiData] = useState<KPIData[]>([]);\r\n  const [dynamicUpdates, setDynamicUpdates] = useState<DynamicUpdate[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [lastRefresh, setLastRefresh] = useState<Date>(new Date());\r\n  const [activeKpiIndex, setActiveKpiIndex] = useState<number>(0);\r\n  const [showAllKpis, setShowAllKpis] = useState<boolean>(false);\r\n\r\n  // Initialize KPI data\r\n  useEffect(() => {\r\n    loadKPIData();\r\n    loadDynamicUpdates();\r\n    \r\n    // Set up real-time updates\r\n    const interval = setInterval(() => {\r\n      updateKPIData();\r\n      addRandomUpdate();\r\n    }, 30000); // Update every 30 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Rotate through KPI cards with animation\r\n  useEffect(() => {\r\n    if (kpiData.length === 0 || showAllKpis) return;\r\n    \r\n    const rotationInterval = setInterval(() => {\r\n      setActiveKpiIndex(prevIndex => (prevIndex + 1) % kpiData.length);\r\n    }, 5000); // Rotate every 5 seconds\r\n    \r\n    return () => clearInterval(rotationInterval);\r\n  }, [kpiData.length, showAllKpis]);\r\n\r\n  const loadKPIData = async () => {\r\n    setIsLoading(true);\r\n    \r\n    // Simulate API call to get real-time data\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    const currentDate = new Date();\r\n    const kpis: KPIData[] = [\r\n      {\r\n        id: 'new_customers',\r\n        title: 'Khách hàng mới',\r\n        value: Math.floor(Math.random() * 20) + 15, // 15-35\r\n        change: Math.random() * 30 - 10, // -10% to +20%\r\n        changeLabel: 'so với tuần trước',\r\n        icon: <PeopleIcon />,\r\n        color: theme.palette.primary.main,\r\n        description: 'Khách hàng mới đăng ký trong tuần',\r\n        lastUpdated: currentDate\r\n      },\r\n      {\r\n        id: 'total_deals',\r\n        title: 'Tổng Deal',\r\n        value: Math.floor(Math.random() * 50) + 120, // 120-170\r\n        change: Math.random() * 25 - 5, // -5% to +20%\r\n        changeLabel: 'so với tháng trước',\r\n        icon: <DealsIcon />,\r\n        color: theme.palette.success.main,\r\n        description: 'Tổng số deal đang theo dõi',\r\n        lastUpdated: currentDate\r\n      },\r\n      {\r\n        id: 'revenue',\r\n        title: 'Doanh thu thực tế',\r\n        value: `${(Math.random() * 500 + 1500).toFixed(0)}K`,\r\n        change: Math.random() * 40 - 10, // -10% to +30%\r\n        changeLabel: 'so với tháng trước',\r\n        icon: <MoneyIcon />,\r\n        color: theme.palette.warning.main,\r\n        description: 'Doanh thu đã thực hiện trong tháng',\r\n        lastUpdated: currentDate\r\n      },\r\n      {\r\n        id: 'deal_pipeline',\r\n        title: 'Deal theo giai đoạn',\r\n        value: `${Math.floor(Math.random() * 10) + 25}`,\r\n        change: Math.random() * 20 - 5, // -5% to +15%\r\n        changeLabel: 'deal đang closing',\r\n        icon: <TimelineIcon />,\r\n        color: theme.palette.info.main,\r\n        description: 'Deal đang ở giai đoạn cuối',\r\n        lastUpdated: currentDate\r\n      },\r\n      {\r\n        id: 'top_performer',\r\n        title: 'Nhân viên top deal',\r\n        value: 'Nguyễn Văn A',\r\n        change: 8, // Number of deals\r\n        changeLabel: 'deal trong tháng',\r\n        icon: <StarIcon />,\r\n        color: theme.palette.secondary.main,\r\n        description: 'Nhân viên có hiệu suất cao nhất',\r\n        lastUpdated: currentDate\r\n      }\r\n    ];\r\n\r\n    setKpiData(kpis);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const loadDynamicUpdates = async () => {\r\n    // Simulate loading dynamic updates similar to Crunchbase\r\n    const updates: DynamicUpdate[] = [\r\n      {\r\n        id: 'update_1',\r\n        title: 'Deal mới được tạo',\r\n        description: 'Hệ thống ERP cho Công ty ABC - Giá trị: 250K',\r\n        timestamp: new Date(Date.now() - 5 * 60 * 1000), // 5 minutes ago\r\n        type: 'deal_closed',\r\n        value: '250K',\r\n        isNew: true\r\n      },\r\n      {\r\n        id: 'update_2',\r\n        title: 'Khách hàng mới đăng ký',\r\n        description: 'XYZ Corporation đã đăng ký dịch vụ',\r\n        timestamp: new Date(Date.now() - 15 * 60 * 1000), // 15 minutes ago\r\n        type: 'new_customer',\r\n        isNew: true\r\n      },\r\n      {\r\n        id: 'update_3',\r\n        title: 'Xu hướng thị trường',\r\n        description: 'AI/ML solutions tăng trưởng 35% trong quý',\r\n        timestamp: new Date(Date.now() - 30 * 60 * 1000), // 30 minutes ago\r\n        type: 'market_trend'\r\n      }\r\n    ];\r\n\r\n    setDynamicUpdates(updates);\r\n  };\r\n\r\n  const updateKPIData = async () => {\r\n    // Simulate real-time KPI updates\r\n    setKpiData(prev => prev.map(kpi => ({\r\n      ...kpi,\r\n      value: kpi.id === 'new_customers' \r\n        ? Math.floor(Math.random() * 20) + 15\r\n        : kpi.id === 'total_deals'\r\n        ? Math.floor(Math.random() * 50) + 120\r\n        : kpi.id === 'revenue'\r\n        ? `${(Math.random() * 500 + 1500).toFixed(0)}K`\r\n        : kpi.value,\r\n      change: Math.random() * 30 - 10,\r\n      lastUpdated: new Date()\r\n    })));\r\n    \r\n    setLastRefresh(new Date());\r\n  };\r\n\r\n  const addRandomUpdate = () => {\r\n    const newUpdates = [\r\n      {\r\n        title: 'Deal được cập nhật',\r\n        description: 'Deal CRM System chuyển sang giai đoạn Negotiation',\r\n        type: 'deal_closed' as const\r\n      },\r\n      {\r\n        title: 'Khách hàng mới',\r\n        description: 'Tech Startup DEF đã quan tâm đến dịch vụ',\r\n        type: 'new_customer' as const\r\n      },\r\n      {\r\n        title: 'Cột mốc doanh thu',\r\n        description: 'Đạt 2M doanh thu trong tháng này',\r\n        type: 'revenue_milestone' as const,\r\n        value: '2M'\r\n      }\r\n    ];\r\n\r\n    const randomUpdate = newUpdates[Math.floor(Math.random() * newUpdates.length)];\r\n    \r\n    const update: DynamicUpdate = {\r\n      id: `update_${Date.now()}`,\r\n      title: randomUpdate.title,\r\n      description: randomUpdate.description,\r\n      timestamp: new Date(),\r\n      type: randomUpdate.type,\r\n      value: randomUpdate.value,\r\n      isNew: true\r\n    };\r\n\r\n    setDynamicUpdates(prev => [update, ...prev.slice(0, 9)]); // Keep only 10 latest\r\n    \r\n    // Remove \"new\" flag after 10 seconds\r\n    setTimeout(() => {\r\n      setDynamicUpdates(prev => \r\n        prev.map(u => u.id === update.id ? { ...u, isNew: false } : u)\r\n      );\r\n    }, 10000);\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    await updateKPIData();\r\n    addRandomUpdate();\r\n  };\r\n\r\n  const getChangeColor = (change: number) => {\r\n    if (change > 0) return theme.palette.success.main;\r\n    if (change < 0) return theme.palette.error.main;\r\n    return theme.palette.text.secondary;\r\n  };\r\n\r\n  const getChangeIcon = (change: number) => {\r\n    if (change > 0) return <TrendingUpIcon sx={{ fontSize: 16 }} />;\r\n    if (change < 0) return <TrendingDownIcon sx={{ fontSize: 16 }} />;\r\n    return null;\r\n  };\r\n\r\n  const formatTimeAgo = (date: Date) => {\r\n    const now = new Date();\r\n    const diffMs = now.getTime() - date.getTime();\r\n    const diffMins = Math.floor(diffMs / 60000);\r\n    const diffHours = Math.floor(diffMs / 3600000);\r\n    \r\n    if (diffMins < 1) return 'vừa xong';\r\n    if (diffMins < 60) return `${diffMins} phút trước`;\r\n    if (diffHours < 24) return `${diffHours} giờ trước`;\r\n    return date.toLocaleDateString('vi-VN');\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mb: 4 }}>\r\n      {/* Header similar to Crunchbase */}\r\n      <Box sx={{ \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-between',\r\n        mb: 3 \r\n      }}>\r\n        <Box>\r\n          <Typography variant=\"h5\" sx={{ fontWeight: 'bold', color: 'text.primary' }}>\r\n            THÁNG NÀY TRÊN CRM\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mt: 1 }}>\r\n            <Chip \r\n              label={`${dynamicUpdates.length} cập nhật mới`}\r\n              size=\"small\"\r\n              sx={{ \r\n                backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                color: theme.palette.primary.main,\r\n                fontWeight: 'bold'\r\n              }}\r\n            />\r\n            <Typography variant=\"caption\" color=\"text.secondary\">\r\n              Cập nhật lần cuối: {formatTimeAgo(lastRefresh)}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <Tooltip title={showAllKpis ? \"Hiển thị luân phiên\" : \"Hiển thị tất cả\"}>\r\n            <IconButton \r\n              size=\"small\" \r\n              onClick={() => setShowAllKpis(!showAllKpis)}\r\n            >\r\n              {showAllKpis ? <ViewCarouselIcon /> : <ViewModuleIcon />}\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Làm mới dữ liệu\">\r\n            <IconButton onClick={handleRefresh} color=\"primary\">\r\n              <RefreshIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* KPI Stats Grid */}\r\n      <Box sx={{ position: 'relative', minHeight: 180, mb: 4 }}>\r\n        <Box sx={{ \r\n          display: showAllKpis ? 'grid' : 'block',\r\n          gridTemplateColumns: {\r\n            xs: '1fr',\r\n            sm: 'repeat(2, 1fr)',\r\n            md: 'repeat(5, 1fr)'\r\n          },\r\n          gap: 3,\r\n          position: 'relative',\r\n          minHeight: 150\r\n        }}>\r\n          {kpiData.map((kpi, index) => (\r\n            <Fade \r\n              key={kpi.id}\r\n              in={showAllKpis || activeKpiIndex === index} \r\n              timeout={{ enter: 500, exit: 300 }}\r\n              style={{\r\n                display: (!showAllKpis && activeKpiIndex !== index) ? 'none' : 'block',\r\n                transitionDelay: showAllKpis ? `${index * 100}ms` : '0ms'\r\n              }}\r\n            >\r\n              <Paper\r\n                elevation={2}\r\n                sx={{\r\n                  p: 2.5,\r\n                  height: '100%',\r\n                  borderRadius: 2,\r\n                  background: `linear-gradient(135deg, ${alpha(kpi.color, 0.05)} 0%, ${alpha(kpi.color, 0.02)} 100%)`,\r\n                  border: `1px solid ${alpha(kpi.color, 0.1)}`,\r\n                  transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                  position: !showAllKpis ? 'absolute' : 'relative',\r\n                  top: 0,\r\n                  left: 0,\r\n                  width: !showAllKpis ? '100%' : 'auto',\r\n                  zIndex: !showAllKpis && activeKpiIndex === index ? 2 : 1,\r\n                  '&:hover': {\r\n                    transform: 'translateY(-2px)',\r\n                    boxShadow: `0 8px 25px ${alpha(kpi.color, 0.15)}`\r\n                  }\r\n                }}\r\n              >\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                  <Box \r\n                    sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      p: 1, \r\n                      borderRadius: 1,\r\n                      backgroundColor: alpha(kpi.color, 0.1)\r\n                    }}\r\n                  >\r\n                    <Box sx={{ color: kpi.color }}>\r\n                      {kpi.icon}\r\n                    </Box>\r\n                  </Box>\r\n                  <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', color: kpi.color }}>\r\n                    {kpi.title}\r\n                  </Typography>\r\n                </Box>\r\n                \r\n                {isLoading ? (\r\n                  <Skeleton variant=\"rectangular\" width=\"100%\" height={40} />\r\n                ) : (\r\n                  <Typography variant=\"h4\" sx={{ fontWeight: 'bold', mb: 1, color: 'text.primary' }}>\r\n                    {kpi.value}\r\n                  </Typography>\r\n                )}\r\n\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                  {getChangeIcon(kpi.change)}\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    sx={{\r\n                      color: getChangeColor(kpi.change),\r\n                      fontWeight: 'medium'\r\n                    }}\r\n                  >\r\n                    {kpi.change > 0 ? '+' : ''}{kpi.change.toFixed(1)}%\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                    {kpi.changeLabel}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, display: 'block' }}>\r\n                  {kpi.description}\r\n                </Typography>\r\n              </Paper>\r\n            </Fade>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Dynamic Updates Section - Similar to Crunchbase activity feed */}\r\n      <Paper\r\n        elevation={1}\r\n        sx={{\r\n          borderRadius: 2,\r\n          overflow: 'hidden',\r\n          border: `1px solid ${theme.palette.divider}`\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            p: 2,\r\n            backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n            borderBottom: `1px solid ${theme.palette.divider}`\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n            🔥 Hoạt động gần đây\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            Cập nhật theo thời gian thực từ hệ thống\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box sx={{ maxHeight: 300, overflow: 'auto' }}>\r\n          {dynamicUpdates.map((update, index) => (\r\n            <Box\r\n              key={update.id}\r\n              sx={{\r\n                p: 2,\r\n                borderBottom: index < dynamicUpdates.length - 1 ? `1px solid ${theme.palette.divider}` : 'none',\r\n                backgroundColor: update.isNew ? alpha(theme.palette.success.main, 0.05) : 'transparent',\r\n                transition: 'all 0.3s ease',\r\n                '&:hover': {\r\n                  backgroundColor: alpha(theme.palette.action.hover, 0.5)\r\n                }\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\r\n                <Box sx={{ flex: 1 }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 0.5 }}>\r\n                    <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold' }}>\r\n                      {update.title}\r\n                    </Typography>\r\n                    {update.isNew && (\r\n                      <Chip\r\n                        label=\"MỚI\"\r\n                        size=\"small\"\r\n                        sx={{\r\n                          height: 18,\r\n                          fontSize: '0.7rem',\r\n                          backgroundColor: theme.palette.success.main,\r\n                          color: 'white'\r\n                        }}\r\n                      />\r\n                    )}\r\n                    {update.value && (\r\n                      <Chip\r\n                        label={update.value}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        sx={{ height: 18, fontSize: '0.7rem' }}\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {update.description}\r\n                  </Typography>\r\n                </Box>\r\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 2 }}>\r\n                  {formatTimeAgo(update.timestamp)}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DynamicKPIStats;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Chip,\r\n  Card,\r\n  CardContent,\r\n  LinearProgress,\r\n  useTheme,\r\n  alpha,\r\n  Tab,\r\n  Tabs,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Divider,\r\n  IconButton,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport {\r\n  TrendingUp as TrendingUpIcon,\r\n  Psychology as PsychologyIcon,\r\n  Timeline as TimelineIcon,\r\n  Lightbulb as LightbulbIcon,\r\n  ShowChart as ShowChartIcon,\r\n  AttachMoney as MoneyIcon,\r\n  People as PeopleIcon,\r\n  Business as BusinessIcon,\r\n  Refresh as RefreshIcon,\r\n  Star as StarIcon,\r\n  ArrowUpward as ArrowUpIcon,\r\n  ArrowDownward as ArrowDownIcon\r\n} from '@mui/icons-material';\r\nimport { aiOrchestrator, AIRequest } from '../../../services/aiOrchestration';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\ninterface TrendingItem {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  growth: string;\r\n  confidence: number;\r\n  category: 'market' | 'technology' | 'industry';\r\n  icon: React.ReactNode;\r\n  color: string;\r\n}\r\n\r\ninterface InsightItem {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  impact: 'high' | 'medium' | 'low';\r\n  actionable: boolean;\r\n  source: string;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface PredictionItem {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  probability: number;\r\n  timeframe: string;\r\n  value?: string;\r\n  type: 'deal' | 'market' | 'customer' | 'revenue';\r\n  riskLevel: 'low' | 'medium' | 'high';\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ pt: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TrendingInsightsPredictions: React.FC = () => {\r\n  const theme = useTheme();\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [trendingData, setTrendingData] = useState<TrendingItem[]>([]);\r\n  const [insightsData, setInsightsData] = useState<InsightItem[]>([]);\r\n  const [predictionsData, setPredictionsData] = useState<PredictionItem[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadAllData();\r\n    \r\n    // Auto refresh every 2 minutes\r\n    const interval = setInterval(loadAllData, 120000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const loadAllData = async () => {\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Load trending data\r\n      const trendingRequest: AIRequest = {\r\n        id: `trending_${Date.now()}`,\r\n        type: 'market_analysis',\r\n        data: { type: 'trending' },\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      const trendingResponse = await aiOrchestrator.processRequest(trendingRequest);\r\n      setTrendingData(generateTrendingData(trendingResponse.result));\r\n\r\n      // Load insights data\r\n      const insightsRequest: AIRequest = {\r\n        id: `insights_${Date.now()}`,\r\n        type: 'market_analysis',\r\n        data: { type: 'insights' },\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      const insightsResponse = await aiOrchestrator.processRequest(insightsRequest);\r\n      setInsightsData(generateInsightsData(insightsResponse.result));\r\n\r\n      // Load predictions data\r\n      const predictionsRequest: AIRequest = {\r\n        id: `predictions_${Date.now()}`,\r\n        type: 'deal_prediction',\r\n        data: { type: 'predictions' },\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      const predictionsResponse = await aiOrchestrator.processRequest(predictionsRequest);\r\n      setPredictionsData(generatePredictionsData(predictionsResponse.result));\r\n      \r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateTrendingData = (aiResult: any): TrendingItem[] => {\r\n    const trends = aiResult?.trends || [];\r\n    \r\n    const defaultTrends: TrendingItem[] = [\r\n      {\r\n        id: 'cloud-computing',\r\n        title: 'Cloud Computing',\r\n        description: 'Doanh nghiệp SME đang chuyển đổi sang cloud với tốc độ kỷ lục',\r\n        growth: '+25%',\r\n        confidence: 0.92,\r\n        category: 'technology',\r\n        icon: <ShowChartIcon />,\r\n        color: theme.palette.primary.main\r\n      },\r\n      {\r\n        id: 'ai-solutions',\r\n        title: 'AI/ML Solutions',\r\n        description: 'Nhu cầu về giải pháp AI tăng vượt bậc trong các doanh nghiệp',\r\n        growth: '+35%',\r\n        confidence: 0.88,\r\n        category: 'technology',\r\n        icon: <PsychologyIcon />,\r\n        color: theme.palette.secondary.main\r\n      },\r\n      {\r\n        id: 'cybersecurity',\r\n        title: 'Cybersecurity',\r\n        description: 'An ninh mạng trở thành ưu tiên hàng đầu sau các vụ tấn công',\r\n        growth: '+18%',\r\n        confidence: 0.85,\r\n        category: 'technology',\r\n        icon: <BusinessIcon />,\r\n        color: theme.palette.warning.main\r\n      },\r\n      {\r\n        id: 'digital-transformation',\r\n        title: 'Digital Transformation',\r\n        description: 'Chuyển đổi số được đẩy mạnh trong mọi ngành nghề',\r\n        growth: '+22%',\r\n        confidence: 0.90,\r\n        category: 'industry',\r\n        icon: <TrendingUpIcon />,\r\n        color: theme.palette.success.main\r\n      }\r\n    ];\r\n\r\n    // Merge AI data with default data\r\n    return trends.length > 0 ? trends.map((trend: any, index: number) => ({\r\n      ...defaultTrends[index % defaultTrends.length],\r\n      title: trend.name || defaultTrends[index % defaultTrends.length].title,\r\n      growth: trend.growth || defaultTrends[index % defaultTrends.length].growth,\r\n      confidence: trend.confidence || defaultTrends[index % defaultTrends.length].confidence\r\n    })) : defaultTrends;\r\n  };\r\n\r\n  const generateInsightsData = (aiResult: any): InsightItem[] => {\r\n    const insights = aiResult?.insights || [];\r\n    \r\n    const defaultInsights: InsightItem[] = [\r\n      {\r\n        id: 'market-growth',\r\n        title: 'Thị trường công nghệ Q4 tăng trưởng mạnh',\r\n        description: 'Doanh thu từ các dự án công nghệ tăng 28% so với Q3, chủ yếu từ segment AI và Cloud',\r\n        impact: 'high',\r\n        actionable: true,\r\n        source: 'Market Analysis AI',\r\n        timestamp: new Date()\r\n      },\r\n      {\r\n        id: 'customer-behavior',\r\n        title: 'Hành vi khách hàng thay đổi',\r\n        description: 'Khách hàng SME có xu hướng đầu tư vào giải pháp tích hợp thay vì từng sản phẩm riêng lẻ',\r\n        impact: 'medium',\r\n        actionable: true,\r\n        source: 'Customer Analytics',\r\n        timestamp: new Date(Date.now() - 30 * 60 * 1000)\r\n      },\r\n      {\r\n        id: 'competitive-landscape',\r\n        title: 'Cảnh quan cạnh tranh thay đổi',\r\n        description: 'Các đối thủ đang tập trung vào pricing strategy, cần điều chỉnh chiến lược giá',\r\n        impact: 'high',\r\n        actionable: true,\r\n        source: 'Competitive Intelligence',\r\n        timestamp: new Date(Date.now() - 60 * 60 * 1000)\r\n      },\r\n      {\r\n        id: 'technology-adoption',\r\n        title: 'Tốc độ áp dụng công nghệ tăng',\r\n        description: 'Thời gian từ demo đến quyết định mua giảm 40%, khách hàng quyết định nhanh hơn',\r\n        impact: 'medium',\r\n        actionable: false,\r\n        source: 'Sales Analytics',\r\n        timestamp: new Date(Date.now() - 90 * 60 * 1000)\r\n      }\r\n    ];\r\n\r\n    return insights.length > 0 ? insights.map((insight: string, index: number) => ({\r\n      ...defaultInsights[index % defaultInsights.length],\r\n      description: insight\r\n    })) : defaultInsights;\r\n  };\r\n\r\n  const generatePredictionsData = (aiResult: any): PredictionItem[] => {\r\n    const predictions = aiResult?.topDeals || [];\r\n    \r\n    const defaultPredictions: PredictionItem[] = [\r\n      {\r\n        id: 'deal-abc-corp',\r\n        title: 'Deal ABC Corp - ERP System',\r\n        description: 'Dự án triển khai hệ thống ERP cho ABC Corp có xác suất thành công cao',\r\n        probability: 0.85,\r\n        timeframe: '2 tuần',\r\n        value: '250K',\r\n        type: 'deal',\r\n        riskLevel: 'low'\r\n      },\r\n      {\r\n        id: 'market-ai-growth',\r\n        title: 'Thị trường AI sẽ bùng nổ',\r\n        description: 'Dự đoán thị trường AI/ML sẽ tăng trưởng 40% trong 6 tháng tới',\r\n        probability: 0.78,\r\n        timeframe: '6 tháng',\r\n        type: 'market',\r\n        riskLevel: 'medium'\r\n      },\r\n      {\r\n        id: 'customer-xyz-expansion',\r\n        title: 'Khách hàng XYZ mở rộng',\r\n        description: 'XYZ Ltd có khả năng cao sẽ mua thêm module CRM trong Q1 năm sau',\r\n        probability: 0.72,\r\n        timeframe: '3 tháng',\r\n        value: '180K',\r\n        type: 'customer',\r\n        riskLevel: 'low'\r\n      },\r\n      {\r\n        id: 'revenue-milestone',\r\n        title: 'Đạt mốc doanh thu 3M',\r\n        description: 'Dự đoán sẽ đạt mốc doanh thu 3M trong Q1 năm sau dựa trên pipeline hiện tại',\r\n        probability: 0.68,\r\n        timeframe: '4 tháng',\r\n        value: '3M',\r\n        type: 'revenue',\r\n        riskLevel: 'medium'\r\n      }\r\n    ];\r\n\r\n    return predictions.length > 0 ? predictions.map((prediction: any, index: number) => ({\r\n      ...defaultPredictions[index % defaultPredictions.length],\r\n      title: prediction.name || defaultPredictions[index % defaultPredictions.length].title,\r\n      probability: prediction.probability || defaultPredictions[index % defaultPredictions.length].probability,\r\n      value: prediction.value ? `${prediction.value}` : defaultPredictions[index % defaultPredictions.length].value\r\n    })) : defaultPredictions;\r\n  };\r\n\r\n  const getImpactColor = (impact: string) => {\r\n    switch (impact) {\r\n      case 'high': return theme.palette.error.main;\r\n      case 'medium': return theme.palette.warning.main;\r\n      case 'low': return theme.palette.success.main;\r\n      default: return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const getRiskColor = (risk: string) => {\r\n    switch (risk) {\r\n      case 'high': return theme.palette.error.main;\r\n      case 'medium': return theme.palette.warning.main;\r\n      case 'low': return theme.palette.success.main;\r\n      default: return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const getTypeIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'deal': return <MoneyIcon />;\r\n      case 'market': return <ShowChartIcon />;\r\n      case 'customer': return <PeopleIcon />;\r\n      case 'revenue': return <TrendingUpIcon />;\r\n      default: return <StarIcon />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={2} sx={{ borderRadius: 2, overflow: 'hidden' }}>\r\n      {/* Header */}\r\n      <Box sx={{ \r\n        p: 3, \r\n        backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n        borderBottom: `1px solid ${theme.palette.divider}`\r\n      }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <Box>\r\n            <Typography variant=\"h5\" sx={{ fontWeight: 'bold', mb: 1 }}>\r\n              📊 Phân tích thông minh\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Trending • Insights • Predictions được hỗ trợ bởi AI\r\n            </Typography>\r\n          </Box>\r\n          <Tooltip title=\"Làm mới dữ liệu\">\r\n            <IconButton onClick={loadAllData} color=\"primary\">\r\n              <RefreshIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Tabs */}\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs \r\n          value={tabValue} \r\n          onChange={(e, newValue) => setTabValue(newValue)}\r\n          sx={{ px: 3 }}\r\n        >\r\n          <Tab \r\n            icon={<TrendingUpIcon />} \r\n            label=\"Trending\" \r\n            iconPosition=\"start\"\r\n            sx={{ minHeight: 'auto', py: 2 }}\r\n          />\r\n          <Tab \r\n            icon={<LightbulbIcon />} \r\n            label=\"Insights\" \r\n            iconPosition=\"start\"\r\n            sx={{ minHeight: 'auto', py: 2 }}\r\n          />\r\n          <Tab \r\n            icon={<TimelineIcon />} \r\n            label=\"Predictions\" \r\n            iconPosition=\"start\"\r\n            sx={{ minHeight: 'auto', py: 2 }}\r\n          />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      {/* Tab Panels */}\r\n      <Box sx={{ p: 3 }}>\r\n        {/* Trending Panel */}\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box \r\n            sx={{ \r\n              display: 'grid',\r\n              gridTemplateColumns: {\r\n                xs: '1fr',\r\n                sm: 'repeat(2, 1fr)'\r\n              },\r\n              gap: 2\r\n            }}\r\n          >\r\n            {trendingData.map((trend) => (\r\n              <Card \r\n                key={trend.id}\r\n                elevation={1}\r\n                sx={{ \r\n                  height: '100%',\r\n                  border: `1px solid ${alpha(trend.color, 0.2)}`,\r\n                  '&:hover': {\r\n                    transform: 'translateY(-2px)',\r\n                    boxShadow: `0 4px 20px ${alpha(trend.color, 0.15)}`\r\n                  },\r\n                  transition: 'all 0.3s ease'\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <Avatar\r\n                      sx={{\r\n                        backgroundColor: alpha(trend.color, 0.1),\r\n                        color: trend.color,\r\n                        mr: 2\r\n                      }}\r\n                    >\r\n                      {trend.icon}\r\n                    </Avatar>\r\n                    <Box sx={{ flex: 1 }}>\r\n                      <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n                        {trend.title}\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                        <Chip\r\n                          label={trend.growth}\r\n                          size=\"small\"\r\n                          icon={<ArrowUpIcon sx={{ fontSize: 14 }} />}\r\n                          sx={{\r\n                            backgroundColor: alpha(theme.palette.success.main, 0.1),\r\n                            color: theme.palette.success.main,\r\n                            fontWeight: 'bold'\r\n                          }}\r\n                        />\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          Độ tin cậy: {Math.round(trend.confidence * 100)}%\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {trend.description}\r\n                  </Typography>\r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    value={trend.confidence * 100}\r\n                    sx={{\r\n                      mt: 2,\r\n                      height: 6,\r\n                      borderRadius: 3,\r\n                      backgroundColor: alpha(trend.color, 0.1),\r\n                      '& .MuiLinearProgress-bar': {\r\n                        backgroundColor: trend.color,\r\n                        borderRadius: 3\r\n                      }\r\n                    }}\r\n                  />\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n        </TabPanel>\r\n\r\n        {/* Insights Panel */}\r\n        <TabPanel value={tabValue} index={1}>\r\n          <List>\r\n            {insightsData.map((insight, index) => (\r\n              <React.Fragment key={insight.id}>\r\n                <ListItem alignItems=\"flex-start\" sx={{ px: 0 }}>\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      sx={{\r\n                        backgroundColor: alpha(getImpactColor(insight.impact), 0.1),\r\n                        color: getImpactColor(insight.impact)\r\n                      }}\r\n                    >\r\n                      <LightbulbIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\r\n                        <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\r\n                          {insight.title}\r\n                        </Typography>\r\n                        <Chip\r\n                          label={insight.impact.toUpperCase()}\r\n                          size=\"small\"\r\n                          sx={{\r\n                            backgroundColor: alpha(getImpactColor(insight.impact), 0.1),\r\n                            color: getImpactColor(insight.impact),\r\n                            fontWeight: 'bold',\r\n                            fontSize: '0.7rem'\r\n                          }}\r\n                        />\r\n                        {insight.actionable && (\r\n                          <Chip\r\n                            label=\"ACTIONABLE\"\r\n                            size=\"small\"\r\n                            sx={{\r\n                              backgroundColor: alpha(theme.palette.info.main, 0.1),\r\n                              color: theme.palette.info.main,\r\n                              fontSize: '0.7rem'\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </Box>\r\n                    }\r\n                    secondary={\r\n                      <Box>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                          {insight.description}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          Nguồn: {insight.source} • {insight.timestamp.toLocaleTimeString('vi-VN')}\r\n                        </Typography>\r\n                      </Box>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                {index < insightsData.length - 1 && <Divider variant=\"inset\" component=\"li\" />}\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n        </TabPanel>\r\n\r\n        {/* Predictions Panel */}\r\n        <TabPanel value={tabValue} index={2}>\r\n          <Box \r\n            sx={{ \r\n              display: 'grid',\r\n              gridTemplateColumns: {\r\n                xs: '1fr',\r\n                sm: 'repeat(2, 1fr)'\r\n              },\r\n              gap: 2\r\n            }}\r\n          >\r\n            {predictionsData.map((prediction) => (\r\n              <Card \r\n                key={prediction.id}\r\n                elevation={1}\r\n                sx={{ \r\n                  height: '100%',\r\n                  border: `1px solid ${alpha(getRiskColor(prediction.riskLevel), 0.2)}`,\r\n                  '&:hover': {\r\n                    transform: 'translateY(-2px)',\r\n                    boxShadow: `0 4px 20px ${alpha(getRiskColor(prediction.riskLevel), 0.15)}`\r\n                  },\r\n                  transition: 'all 0.3s ease'\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <Avatar\r\n                      sx={{\r\n                        backgroundColor: alpha(getRiskColor(prediction.riskLevel), 0.1),\r\n                        color: getRiskColor(prediction.riskLevel),\r\n                        mr: 2\r\n                      }}\r\n                    >\r\n                      {getTypeIcon(prediction.type)}\r\n                    </Avatar>\r\n                    <Box sx={{ flex: 1 }}>\r\n                      <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', mb: 0.5 }}>\r\n                        {prediction.title}\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flexWrap: 'wrap' }}>\r\n                        <Chip\r\n                          label={`${Math.round(prediction.probability * 100)}% xác suất`}\r\n                          size=\"small\"\r\n                          sx={{\r\n                            backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                            color: theme.palette.primary.main,\r\n                            fontWeight: 'bold'\r\n                          }}\r\n                        />\r\n                        {prediction.value && (\r\n                          <Chip\r\n                            label={prediction.value}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                          />\r\n                        )}\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {prediction.timeframe}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n                    {prediction.description}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <Chip\r\n                      label={`Risk: ${prediction.riskLevel}`}\r\n                      size=\"small\"\r\n                      sx={{\r\n                        backgroundColor: alpha(getRiskColor(prediction.riskLevel), 0.1),\r\n                        color: getRiskColor(prediction.riskLevel),\r\n                        textTransform: 'capitalize'\r\n                      }}\r\n                    />\r\n                    <LinearProgress\r\n                      variant=\"determinate\"\r\n                      value={prediction.probability * 100}\r\n                      sx={{\r\n                        width: '60%',\r\n                        height: 6,\r\n                        borderRadius: 3,\r\n                        backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                        '& .MuiLinearProgress-bar': {\r\n                          backgroundColor: theme.palette.primary.main,\r\n                          borderRadius: 3\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n        </TabPanel>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TrendingInsightsPredictions;\r\n","import React, { useState } from 'react';\r\nimport { \r\n  Box, \r\n  Paper, \r\n  Typography, \r\n  ToggleButtonGroup, \r\n  ToggleButton,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  SelectChangeEvent\r\n} from '@mui/material';\r\nimport {\r\n  BarChart as BarChartIcon,\r\n  PieChart as PieChartIcon,\r\n  ShowChart as LineChartIcon,\r\n  TableChart as TableChartIcon\r\n} from '@mui/icons-material';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  LineChart,\r\n  Line\r\n} from 'recharts';\r\n\r\n// Dữ liệu mẫu cho biểu đồ doanh thu theo nhân viên\r\nconst REVENUE_DATA = [\r\n  { name: 'Nguyễn Văn A', value: 1200 },\r\n  { name: 'Trần Thị B', value: 950 },\r\n  { name: 'Lê Văn C', value: 850 },\r\n  { name: 'Phạm Thị D', value: 700 },\r\n  { name: 'Hoàng Văn E', value: 500 },\r\n];\r\n\r\n// Dữ liệu mẫu cho biểu đồ trạng thái deal\r\nconst DEAL_STATUS_DATA = [\r\n  { name: 'Lead', value: 45, color: '#f87171' },\r\n  { name: 'Báo giá', value: 32, color: '#fbbf24' },\r\n  { name: 'Đàm phán', value: 18, color: '#60a5fa' },\r\n  { name: 'Win', value: 38, color: '#34d399' },\r\n  { name: 'Lose', value: 23, color: '#9ca3af' },\r\n];\r\n\r\n// Dữ liệu mẫu cho khách hàng mới\r\nconst NEW_CUSTOMERS_DATA = [\r\n  { name: 'Hôm nay', value: 12 },\r\n  { name: 'Hôm qua', value: 10 },\r\n  { name: '2 ngày trước', value: 8 },\r\n  { name: '3 ngày trước', value: 15 },\r\n  { name: '4 ngày trước', value: 7 },\r\n];\r\n\r\n// Dữ liệu mẫu cho doanh thu theo tháng\r\nconst REVENUE_BY_MONTH_DATA = [\r\n  { name: 'T1', value: 800 },\r\n  { name: 'T2', value: 950 },\r\n  { name: 'T3', value: 1100 },\r\n  { name: 'T4', value: 1250 },\r\n  { name: 'T5', value: 1400 },\r\n  { name: 'T6', value: 1600 },\r\n];\r\n\r\n// Dữ liệu mẫu cho tỉ lệ chuyển đổi\r\nconst CONVERSION_RATE_DATA = [\r\n  { name: 'Chuyển đổi', value: 65, color: '#34d399' },\r\n  { name: 'Không chuyển đổi', value: 35, color: '#f87171' },\r\n];\r\n\r\n// Dữ liệu mẫu cho biểu đồ doanh thu theo tháng\r\nconst MONTHLY_REVENUE_DATA = [\r\n  { name: 'T1', value: 1200 },\r\n  { name: 'T2', value: 1900 },\r\n  { name: 'T3', value: 1500 },\r\n  { name: 'T4', value: 2200 },\r\n  { name: 'T5', value: 1800 },\r\n  { name: 'T6', value: 2400 },\r\n  { name: 'T7', value: 2100 },\r\n];\r\n\r\n// Màu sắc cho biểu đồ\r\nconst COLORS = ['#3b82f6', '#10b981', '#f59e0b', '#8b5cf6', '#ef4444'];\r\n\r\n// Loại biểu đồ\r\ntype ChartType = 'bar' | 'pie' | 'line' | 'table';\r\n\r\n// Loại thời gian\r\ntype TimeRange = 'today' | 'week' | 'month' | 'quarter' | 'year';\r\n\r\ninterface DynamicChartsProps {\r\n  query: string;\r\n}\r\n\r\nconst DynamicCharts: React.FC<DynamicChartsProps> = ({ query }) => {\r\n  const [chartType, setChartType] = useState<ChartType>('bar');\r\n  const [timeRange, setTimeRange] = useState<TimeRange>('month');\r\n\r\n  const handleChartTypeChange = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newChartType: ChartType | null,\r\n  ) => {\r\n    if (newChartType !== null) {\r\n      setChartType(newChartType);\r\n    }\r\n  };\r\n\r\n  const handleTimeRangeChange = (event: SelectChangeEvent) => {\r\n    setTimeRange(event.target.value as TimeRange);\r\n  };\r\n\r\n  // Xác định loại biểu đồ và dữ liệu dựa trên query\r\n  const getChartTypeFromQuery = (query: string): { type: string; chartType: ChartType } => {\r\n    const lowercaseQuery = query.toLowerCase();\r\n    \r\n    // Khách hàng mới\r\n    if (lowercaseQuery.includes('khách hàng mới') || \r\n        (lowercaseQuery.includes('khách hàng') && lowercaseQuery.includes('mới'))) {\r\n      return { type: 'newCustomers', chartType: 'bar' };\r\n    }\r\n    \r\n    // Doanh thu theo nhân viên\r\n    else if (lowercaseQuery.includes('doanh thu') && lowercaseQuery.includes('nhân viên')) {\r\n      return { type: 'revenueByEmployee', chartType: 'bar' };\r\n    }\r\n    \r\n    // Trạng thái deal\r\n    else if ((lowercaseQuery.includes('deal') || lowercaseQuery.includes('giao dịch')) && \r\n             (lowercaseQuery.includes('trạng thái') || lowercaseQuery.includes('giai đoạn'))) {\r\n      return { type: 'dealStatus', chartType: 'pie' };\r\n    }\r\n    \r\n    // Doanh thu theo tháng\r\n    else if (lowercaseQuery.includes('doanh thu') && \r\n             (lowercaseQuery.includes('tháng') || lowercaseQuery.includes('thời gian'))) {\r\n      return { type: 'revenueByMonth', chartType: 'line' };\r\n    }\r\n    \r\n    // Tỉ lệ chuyển đổi\r\n    else if (lowercaseQuery.includes('tỉ lệ') || lowercaseQuery.includes('chuyển đổi')) {\r\n      return { type: 'conversionRate', chartType: 'pie' };\r\n    }\r\n    \r\n    // Mặc định hiển thị biểu đồ doanh thu theo nhân viên\r\n    return { type: 'revenueByEmployee', chartType: 'bar' };\r\n  };\r\n\r\n  const { type: chartDataType } = getChartTypeFromQuery(query || '');\r\n  \r\n  // Tự động cập nhật loại biểu đồ dựa trên câu hỏi nếu có query mới\r\n  React.useEffect(() => {\r\n    if (query) {\r\n      const { chartType: newChartType } = getChartTypeFromQuery(query);\r\n      setChartType(newChartType);\r\n    }\r\n  }, [query]);\r\n  \r\n  // Lấy dữ liệu phù hợp với loại biểu đồ\r\n  const getChartData = () => {\r\n    switch (chartDataType) {\r\n      case 'newCustomers':\r\n        return NEW_CUSTOMERS_DATA;\r\n      case 'dealStatus':\r\n        return DEAL_STATUS_DATA;\r\n      case 'revenueByMonth':\r\n        return REVENUE_BY_MONTH_DATA;\r\n      case 'conversionRate':\r\n        return CONVERSION_RATE_DATA;\r\n      case 'revenueByEmployee':\r\n      default:\r\n        return REVENUE_DATA;\r\n    }\r\n  };\r\n  \r\n  const chartData = getChartData();\r\n\r\n  // Format giá trị tiền tệ\r\n  const formatValue = (value: number) => {\r\n    return `${value} triệu`;\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={2} sx={{ p: 3, borderRadius: 2, mb: 4 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n          📈 {query ? `Kết quả cho: \"${query}\"` : 'Phân tích dữ liệu kinh doanh'}\r\n        </Typography>\r\n        \r\n        <Box sx={{ display: 'flex', gap: 2 }}>\r\n          <ToggleButtonGroup\r\n            size=\"small\"\r\n            value={chartType}\r\n            exclusive\r\n            onChange={handleChartTypeChange}\r\n            aria-label=\"chart type\"\r\n          >\r\n            <ToggleButton value=\"bar\" aria-label=\"bar chart\">\r\n              <BarChartIcon fontSize=\"small\" />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"pie\" aria-label=\"pie chart\">\r\n              <PieChartIcon fontSize=\"small\" />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"line\" aria-label=\"line chart\">\r\n              <LineChartIcon fontSize=\"small\" />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"table\" aria-label=\"table\">\r\n              <TableChartIcon fontSize=\"small\" />\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n          \r\n          <FormControl size=\"small\" sx={{ minWidth: 120 }}>\r\n            <InputLabel id=\"time-range-label\">Thời gian</InputLabel>\r\n            <Select\r\n              labelId=\"time-range-label\"\r\n              id=\"time-range\"\r\n              value={timeRange}\r\n              label=\"Thời gian\"\r\n              onChange={handleTimeRangeChange}\r\n            >\r\n              <MenuItem value=\"today\">Hôm nay</MenuItem>\r\n              <MenuItem value=\"week\">Tuần này</MenuItem>\r\n              <MenuItem value=\"month\">Tháng này</MenuItem>\r\n              <MenuItem value=\"quarter\">Quý này</MenuItem>\r\n              <MenuItem value=\"year\">Năm nay</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box sx={{ height: 400, width: '100%' }}>\r\n        {chartType === 'bar' && (\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart\r\n              data={chartDataType === 'revenueByMonth' ? MONTHLY_REVENUE_DATA : REVENUE_DATA}\r\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis />\r\n              <Tooltip formatter={(value) => formatValue(value as number)} />\r\n              <Legend />\r\n              <Bar \r\n                dataKey=\"value\" \r\n                name={chartDataType === 'revenueByMonth' ? 'Doanh thu theo tháng' : 'Doanh thu theo nhân viên'} \r\n                fill=\"#3b82f6\" \r\n              />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n\r\n        {chartType === 'pie' && (\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <PieChart>\r\n              <Pie\r\n                data={chartDataType === 'dealStatus' ? DEAL_STATUS_DATA : REVENUE_DATA}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                labelLine={false}\r\n                outerRadius={150}\r\n                fill=\"#8884d8\"\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                label={({ name, percent }) => `${name}: ${percent ? (percent * 100).toFixed(0) : 0}%`}\r\n              >\r\n                {chartData.map((entry, index) => (\r\n                  <Cell \r\n                    key={`cell-${index}`} \r\n                    fill={(entry as any).color || COLORS[index % COLORS.length]} \r\n                  />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip formatter={(value) => formatValue(value as number)} />\r\n              <Legend />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n\r\n        {chartType === 'line' && (\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <LineChart\r\n              data={MONTHLY_REVENUE_DATA}\r\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis />\r\n              <Tooltip formatter={(value) => formatValue(value as number)} />\r\n              <Legend />\r\n              <Line \r\n                type=\"monotone\" \r\n                dataKey=\"value\" \r\n                name=\"Doanh thu theo tháng\" \r\n                stroke=\"#3b82f6\" \r\n                activeDot={{ r: 8 }} \r\n              />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n\r\n        {chartType === 'table' && (\r\n          <Box sx={{ height: '100%', overflow: 'auto' }}>\r\n            <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n              <thead>\r\n                <tr style={{ borderBottom: '2px solid #e2e8f0' }}>\r\n                  <th style={{ padding: '12px 16px', textAlign: 'left' }}>Tên</th>\r\n                  <th style={{ padding: '12px 16px', textAlign: 'right' }}>Giá trị</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {(chartDataType === 'dealStatus' ? DEAL_STATUS_DATA : \r\n                  chartDataType === 'revenueByMonth' ? MONTHLY_REVENUE_DATA : REVENUE_DATA)\r\n                  .map((item, index) => (\r\n                    <tr \r\n                      key={index} \r\n                      style={{ \r\n                        borderBottom: '1px solid #e2e8f0',\r\n                        backgroundColor: index % 2 === 0 ? '#f8fafc' : 'white'\r\n                      }}\r\n                    >\r\n                      <td style={{ padding: '12px 16px' }}>{item.name}</td>\r\n                      <td style={{ padding: '12px 16px', textAlign: 'right' }}>\r\n                        {formatValue(item.value)}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DynamicCharts;","import React, { useState } from 'react';\r\nimport { \r\n  Box, \r\n  Paper, \r\n  Typography, \r\n  List, \r\n  ListItem, \r\n  ListItemText, \r\n  ListItemSecondaryAction, \r\n  IconButton, \r\n  Divider,\r\n  Menu,\r\n  MenuItem,\r\n  Chip,\r\n  TextField,\r\n  InputAdornment\r\n} from '@mui/material';\r\nimport {\r\n  MoreVert as MoreVertIcon,\r\n  Download as DownloadIcon,\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  Search as SearchIcon,\r\n  Share as ShareIcon,\r\n  Favorite as FavoriteIcon,\r\n  FavoriteBorder as FavoriteBorderIcon\r\n} from '@mui/icons-material';\r\n\r\n// Dữ liệu mẫu cho các báo cáo đã lưu\r\nconst SAVED_REPORTS = [\r\n  {\r\n    id: 1,\r\n    title: 'Báo cáo doanh thu theo nhân viên Q2/2025',\r\n    createdAt: '2025-06-30',\r\n    type: 'bar',\r\n    favorite: true,\r\n    tags: ['doanh thu', 'nhân viên', 'quý 2']\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Phân tích tỉ lệ chuyển đổi lead sang khách hàng',\r\n    createdAt: '2025-06-25',\r\n    type: 'pie',\r\n    favorite: false,\r\n    tags: ['lead', 'chuyển đổi', 'phễu bán hàng']\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Báo cáo doanh thu theo tháng năm 2025',\r\n    createdAt: '2025-06-20',\r\n    type: 'line',\r\n    favorite: true,\r\n    tags: ['doanh thu', 'tháng', '2025']\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Top 10 khách hàng tiềm năng tháng 6',\r\n    createdAt: '2025-06-15',\r\n    type: 'table',\r\n    favorite: false,\r\n    tags: ['khách hàng tiềm năng', 'top 10']\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Phân tích hiệu quả chiến dịch marketing Q2',\r\n    createdAt: '2025-06-10',\r\n    type: 'bar',\r\n    favorite: false,\r\n    tags: ['marketing', 'chiến dịch', 'quý 2']\r\n  }\r\n];\r\n\r\nconst SavedReports: React.FC = () => {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [selectedReportId, setSelectedReportId] = useState<number | null>(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [favorites, setFavorites] = useState<Record<number, boolean>>(\r\n    SAVED_REPORTS.reduce((acc, report) => ({\r\n      ...acc,\r\n      [report.id]: report.favorite\r\n    }), {})\r\n  );\r\n\r\n  const handleMenuOpen = (event: React.MouseEvent<HTMLElement>, id: number) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedReportId(id);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setSelectedReportId(null);\r\n  };\r\n\r\n  const handleToggleFavorite = (id: number) => {\r\n    setFavorites(prev => ({\r\n      ...prev,\r\n      [id]: !prev[id]\r\n    }));\r\n  };\r\n\r\n  const getChartIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'bar':\r\n        return '📊';\r\n      case 'pie':\r\n        return '🥧';\r\n      case 'line':\r\n        return '📈';\r\n      case 'table':\r\n        return '📋';\r\n      default:\r\n        return '📄';\r\n    }\r\n  };\r\n\r\n  const filteredReports = SAVED_REPORTS.filter(report => \r\n    report.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    report.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))\r\n  );\r\n\r\n  return (\r\n    <Paper elevation={2} sx={{ borderRadius: 2 }}>\r\n      <Box sx={{ p: 2, borderBottom: '1px solid #e2e8f0' }}>\r\n        <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mb: 2 }}>\r\n          📑 Báo cáo đã lưu\r\n        </Typography>\r\n        \r\n        <TextField\r\n          fullWidth\r\n          size=\"small\"\r\n          placeholder=\"Tìm kiếm báo cáo...\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon fontSize=\"small\" />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          sx={{ mb: 1 }}\r\n        />\r\n      </Box>\r\n\r\n      <List sx={{ maxHeight: '400px', overflow: 'auto' }}>\r\n        {filteredReports.length === 0 ? (\r\n          <ListItem>\r\n            <ListItemText \r\n              primary=\"Không tìm thấy báo cáo nào\" \r\n              secondary=\"Hãy thử tìm kiếm với từ khóa khác\" \r\n            />\r\n          </ListItem>\r\n        ) : (\r\n          filteredReports.map((report) => (\r\n            <React.Fragment key={report.id}>\r\n              <ListItem \r\n                sx={{ \r\n                  cursor: 'pointer',\r\n                  '&:hover': { \r\n                    backgroundColor: '#f8fafc' \r\n                  }\r\n                }}\r\n              >\r\n                <Box sx={{ mr: 1, fontSize: '1.5rem' }}>\r\n                  {getChartIcon(report.type)}\r\n                </Box>\r\n                <ListItemText\r\n                  primary={\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <Typography variant=\"body1\" sx={{ fontWeight: 'medium' }}>\r\n                        {report.title}\r\n                      </Typography>\r\n                      <IconButton \r\n                        size=\"small\" \r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleToggleFavorite(report.id);\r\n                        }}\r\n                        sx={{ ml: 1, color: favorites[report.id] ? '#f43f5e' : 'inherit' }}\r\n                      >\r\n                        {favorites[report.id] ? <FavoriteIcon fontSize=\"small\" /> : <FavoriteBorderIcon fontSize=\"small\" />}\r\n                      </IconButton>\r\n                    </Box>\r\n                  }\r\n                  secondary={\r\n                    <Box sx={{ mt: 0.5 }}>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\r\n                        Tạo ngày: {report.createdAt}\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mt: 0.5 }}>\r\n                        {report.tags.map((tag, idx) => (\r\n                          <Chip \r\n                            key={idx} \r\n                            label={tag} \r\n                            size=\"small\" \r\n                            sx={{ \r\n                              height: 20, \r\n                              fontSize: '0.65rem',\r\n                              backgroundColor: '#f1f5f9'\r\n                            }} \r\n                          />\r\n                        ))}\r\n                      </Box>\r\n                    </Box>\r\n                  }\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton \r\n                    edge=\"end\" \r\n                    onClick={(e) => handleMenuOpen(e, report.id)}\r\n                  >\r\n                    <MoreVertIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n            </React.Fragment>\r\n          ))\r\n        )}\r\n      </List>\r\n\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleMenuClose}\r\n        id={`report-menu-${selectedReportId}`}\r\n      >\r\n        <MenuItem onClick={handleMenuClose}>\r\n          <DownloadIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n          Tải xuống\r\n        </MenuItem>\r\n        <MenuItem onClick={handleMenuClose}>\r\n          <EditIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n          Chỉnh sửa\r\n        </MenuItem>\r\n        <MenuItem onClick={handleMenuClose}>\r\n          <ShareIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n          Chia sẻ\r\n        </MenuItem>\r\n        <Divider />\r\n        <MenuItem onClick={handleMenuClose} sx={{ color: 'error.main' }}>\r\n          <DeleteIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n          Xóa\r\n        </MenuItem>\r\n      </Menu>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SavedReports;","// Global AI Search Service\r\n// Thay thế tất cả bộ lọc search truyền thống bằng AI search thông minh\r\n\r\nimport { aiOrchestrator, AIRequest } from '../aiOrchestration';\r\n\r\nexport interface SearchResult {\r\n  id: string;\r\n  type: 'customer' | 'deal' | 'contact' | 'contract' | 'invoice' | 'requirement' | 'quotation';\r\n  title: string;\r\n  description: string;\r\n  relevanceScore: number;\r\n  metadata: Record<string, any>;\r\n  url: string;\r\n  timestamp: Date;\r\n}\r\n\r\nexport interface SearchContext {\r\n  currentPage: string;\r\n  userRole: string;\r\n  recentActivity: string[];\r\n  preferences: Record<string, any>;\r\n  // Additional context properties\r\n  contextual?: boolean;\r\n  quickSearch?: boolean;\r\n  maxResults?: number;\r\n}\r\n\r\nexport interface SearchFilters {\r\n  types?: string[];\r\n  dateRange?: {\r\n    start: Date;\r\n    end: Date;\r\n  };\r\n  status?: string[];\r\n  priority?: string[];\r\n  assignedTo?: string[];\r\n}\r\n\r\nexport class GlobalAISearchService {\r\n  private searchHistory: string[] = [];\r\n  private searchCache: Map<string, SearchResult[]> = new Map();\r\n  private contextData: SearchContext | null = null;\r\n\r\n  constructor() {\r\n    this.loadSearchHistory();\r\n  }\r\n\r\n  // Thiết lập context cho search\r\n  public setContext(context: SearchContext) {\r\n    this.contextData = context;\r\n  }\r\n\r\n  // Thực hiện AI search thông minh\r\n  public async search(\r\n    query: string, \r\n    filters?: SearchFilters,\r\n    context?: Partial<SearchContext>\r\n  ): Promise<SearchResult[]> {\r\n    // Kiểm tra cache trước\r\n    const cacheKey = this.generateCacheKey(query, filters);\r\n    if (this.searchCache.has(cacheKey)) {\r\n      return this.searchCache.get(cacheKey)!;\r\n    }\r\n\r\n    try {\r\n      // Chuẩn bị request cho AI Orchestrator\r\n      const searchRequest: AIRequest = {\r\n        id: `search_${Date.now()}`,\r\n        type: 'search',\r\n        data: {\r\n          query,\r\n          filters,\r\n          context: { ...this.contextData, ...context },\r\n          searchHistory: this.searchHistory.slice(-5) // 5 tìm kiếm gần nhất\r\n        },\r\n        timestamp: new Date()\r\n      };\r\n\r\n      // Gửi request tới AI Orchestrator\r\n      const response = await aiOrchestrator.processRequest(searchRequest);\r\n      \r\n      // Xử lý kết quả\r\n      const results = this.processSearchResults(response.result, query);\r\n      \r\n      // Lưu vào cache\r\n      this.searchCache.set(cacheKey, results);\r\n      \r\n      // Cập nhật lịch sử tìm kiếm\r\n      this.addToSearchHistory(query);\r\n      \r\n      return results;\r\n    } catch (error) {\r\n      console.error('Error in AI search:', error);\r\n      return this.getFallbackResults(query, filters);\r\n    }\r\n  }\r\n\r\n  // Tìm kiếm nhanh với gợi ý\r\n  public async quickSearch(query: string): Promise<SearchResult[]> {\r\n    if (query.length < 2) return [];\r\n    \r\n    return this.search(query, undefined, { \r\n      quickSearch: true,\r\n      maxResults: 5 \r\n    });\r\n  }\r\n\r\n  // Lấy gợi ý tìm kiếm thông minh\r\n  public async getSearchSuggestions(\r\n    partialQuery: string,\r\n    currentPage?: string\r\n  ): Promise<string[]> {\r\n    if (partialQuery.length < 2) {\r\n      return this.getPopularSearches(currentPage);\r\n    }\r\n\r\n    try {\r\n      const suggestionRequest: AIRequest = {\r\n        id: `suggestions_${Date.now()}`,\r\n        type: 'search',\r\n        data: {\r\n          type: 'suggestions',\r\n          partialQuery,\r\n          currentPage,\r\n          searchHistory: this.searchHistory\r\n        },\r\n        timestamp: new Date()\r\n      };\r\n\r\n      const response = await aiOrchestrator.processRequest(suggestionRequest);\r\n      return response.result.suggestions || [];\r\n    } catch (error) {\r\n      console.error('Error getting search suggestions:', error);\r\n      return this.getPopularSearches(currentPage);\r\n    }\r\n  }\r\n\r\n  // Tìm kiếm theo ngữ cảnh trang hiện tại\r\n  public async contextualSearch(query: string): Promise<SearchResult[]> {\r\n    const context = this.contextData?.currentPage || '';\r\n    \r\n    // Điều chỉnh search dựa trên trang hiện tại\r\n    const contextualFilters: SearchFilters = {};\r\n    \r\n    switch (context) {\r\n      case '/customers':\r\n        contextualFilters.types = ['customer', 'contact'];\r\n        break;\r\n      case '/deals':\r\n        contextualFilters.types = ['deal', 'quotation'];\r\n        break;\r\n      case '/contracts':\r\n        contextualFilters.types = ['contract', 'invoice'];\r\n        break;\r\n      default:\r\n        // Không giới hạn type cho trang khác\r\n        break;\r\n    }\r\n\r\n    return this.search(query, contextualFilters, { contextual: true });\r\n  }\r\n\r\n  // Tìm kiếm semantic (tìm theo ý nghĩa)\r\n  public async semanticSearch(query: string): Promise<SearchResult[]> {\r\n    const semanticRequest: AIRequest = {\r\n      id: `semantic_${Date.now()}`,\r\n      type: 'search',\r\n      data: {\r\n        type: 'semantic',\r\n        query,\r\n        context: this.contextData\r\n      },\r\n      timestamp: new Date()\r\n    };\r\n\r\n    try {\r\n      const response = await aiOrchestrator.processRequest(semanticRequest);\r\n      return this.processSearchResults(response.result, query);\r\n    } catch (error) {\r\n      console.error('Error in semantic search:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Xử lý kết quả search từ AI\r\n  private processSearchResults(aiResult: any, originalQuery: string): SearchResult[] {\r\n    const results = aiResult.results || [];\r\n    \r\n    return results.map((result: any, index: number) => ({\r\n      id: result.id || `result_${index}`,\r\n      type: result.type || 'customer',\r\n      title: result.title || result.name || 'Untitled',\r\n      description: result.description || result.summary || '',\r\n      relevanceScore: result.relevance || (1 - index * 0.1),\r\n      metadata: result.metadata || {},\r\n      url: this.generateResultUrl(result.type, result.id),\r\n      timestamp: new Date()\r\n    }));\r\n  }\r\n\r\n  // Tạo URL cho kết quả\r\n  private generateResultUrl(type: string, id: string): string {\r\n    const baseUrls: Record<string, string> = {\r\n      customer: '/customers',\r\n      deal: '/deals',\r\n      contact: '/contacts',\r\n      contract: '/contracts',\r\n      invoice: '/invoices',\r\n      requirement: '/requirements',\r\n      quotation: '/quotations'\r\n    };\r\n\r\n    return `${baseUrls[type] || '/'}/${id}`;\r\n  }\r\n\r\n  // Tạo cache key\r\n  private generateCacheKey(query: string, filters?: SearchFilters): string {\r\n    return `${query}_${JSON.stringify(filters || {})}`;\r\n  }\r\n\r\n  // Lấy kết quả fallback khi AI không hoạt động\r\n  private getFallbackResults(query: string, filters?: SearchFilters): SearchResult[] {\r\n    // Mô phỏng kết quả tìm kiếm cơ bản\r\n    const mockResults: SearchResult[] = [\r\n      {\r\n        id: '1',\r\n        type: 'customer',\r\n        title: `Khách hàng liên quan đến \"${query}\"`,\r\n        description: 'Kết quả tìm kiếm cơ bản',\r\n        relevanceScore: 0.8,\r\n        metadata: {},\r\n        url: '/customers/1',\r\n        timestamp: new Date()\r\n      }\r\n    ];\r\n\r\n    return mockResults;\r\n  }\r\n\r\n  // Lấy các tìm kiếm phổ biến\r\n  private getPopularSearches(currentPage?: string): string[] {\r\n    const popularSearches: Record<string, string[]> = {\r\n      '/dashboard': [\r\n        'Doanh thu tháng này',\r\n        'Deal đang pending',\r\n        'Khách hàng mới',\r\n        'Top performer'\r\n      ],\r\n      '/customers': [\r\n        'Khách hàng VIP',\r\n        'Khách hàng mới',\r\n        'Khách hàng chưa liên hệ',\r\n        'Khách hàng có deal lớn'\r\n      ],\r\n      '/deals': [\r\n        'Deal closing',\r\n        'Deal high value',\r\n        'Deal pending',\r\n        'Deal won this month'\r\n      ],\r\n      default: [\r\n        'Tìm kiếm nhanh',\r\n        'Báo cáo',\r\n        'Thống kê',\r\n        'Phân tích'\r\n      ]\r\n    };\r\n\r\n    return popularSearches[currentPage || 'default'] || popularSearches.default;\r\n  }\r\n\r\n  // Quản lý lịch sử tìm kiếm\r\n  private addToSearchHistory(query: string) {\r\n    if (!this.searchHistory.includes(query)) {\r\n      this.searchHistory.unshift(query);\r\n      this.searchHistory = this.searchHistory.slice(0, 20); // Giữ 20 tìm kiếm gần nhất\r\n      this.saveSearchHistory();\r\n    }\r\n  }\r\n\r\n  private loadSearchHistory() {\r\n    try {\r\n      const saved = localStorage.getItem('ai_search_history');\r\n      if (saved) {\r\n        this.searchHistory = JSON.parse(saved);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading search history:', error);\r\n    }\r\n  }\r\n\r\n  private saveSearchHistory() {\r\n    try {\r\n      localStorage.setItem('ai_search_history', JSON.stringify(this.searchHistory));\r\n    } catch (error) {\r\n      console.error('Error saving search history:', error);\r\n    }\r\n  }\r\n\r\n  // Xóa cache\r\n  public clearCache() {\r\n    this.searchCache.clear();\r\n  }\r\n\r\n  // Lấy thống kê search\r\n  public getSearchStats() {\r\n    return {\r\n      historyCount: this.searchHistory.length,\r\n      cacheSize: this.searchCache.size,\r\n      recentSearches: this.searchHistory.slice(0, 5)\r\n    };\r\n  }\r\n\r\n  // Xuất dữ liệu search để phân tích\r\n  public exportSearchData() {\r\n    return {\r\n      history: this.searchHistory,\r\n      context: this.contextData,\r\n      timestamp: new Date()\r\n    };\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const globalAISearch = new GlobalAISearchService();\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { \r\n  Box, \r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  TextField,\r\n  InputAdornment,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemButton,\r\n  Avatar,\r\n  Chip,\r\n  useTheme,\r\n  alpha,\r\n  Popper,\r\n  Divider,\r\n  Zoom,\r\n  Slide,\r\n  CircularProgress,\r\n  Tabs,\r\n  Tab,\r\n  Fade,\r\n  ClickAwayListener\r\n} from '@mui/material';\r\nimport CrmAssistantPanel from '../../components/CrmAssistantPanel';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { \r\n  Search as SearchIcon, \r\n  SmartToy as AIIcon,\r\n  Mic as MicIcon,\r\n  KeyboardArrowUp as ScrollUpIcon,\r\n  AutoAwesome as SparkleIcon,\r\n  Close as CloseIcon,\r\n  KeyboardArrowUp as KeyboardArrowUpIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  People as PeopleIcon,\r\n  Handshake as HandshakeIcon\r\n} from '@mui/icons-material';\r\n\r\n// Import các component mới\r\nimport DynamicKPIStats from './components/DynamicKPIStats';\r\nimport TrendingInsightsPredictions from './components/TrendingInsightsPredictions';\r\nimport DynamicCharts from './components/DynamicCharts';\r\nimport SavedReports from './components/SavedReports';\r\nimport { globalAISearch } from '../../services/globalAISearch';\r\n\r\n// Mock data for search results\r\nconst mockContacts = [\r\n  {\r\n    id: 1,\r\n    name: 'Nguyễn Văn An',\r\n    email: 'an.nguyen@company.com',\r\n    phone: '0901234567',\r\n    owner: 'Trần Thị B',\r\n    leadStatus: 'Hot Lead',\r\n    avatar: '/avatars/an.jpg'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Lê Thị Cẩm',\r\n    email: 'cam.le@business.vn',\r\n    phone: '0987654321',\r\n    owner: 'Phạm Văn C',\r\n    leadStatus: 'Qualified',\r\n    avatar: '/avatars/cam.jpg'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Hoàng Minh Đức',\r\n    email: 'duc.hoang@tech.com',\r\n    phone: '0912345678',\r\n    owner: 'Nguyễn Thị D',\r\n    leadStatus: 'New Lead',\r\n    avatar: '/avatars/duc.jpg'\r\n  }\r\n];\r\n\r\nconst mockDeals = [\r\n  {\r\n    id: 1,\r\n    name: 'Hệ thống CRM cho ABC Corp',\r\n    customer: 'ABC Corporation',\r\n    owner: 'Trần Văn E',\r\n    amount: 250000000,\r\n    stage: 'Đã gửi báo giá'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Website thương mại điện tử',\r\n    customer: 'XYZ Trading',\r\n    owner: 'Lê Thị F',\r\n    amount: 150000000,\r\n    stage: 'Đang đàm phán'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Ứng dụng mobile banking',\r\n    customer: 'Tech Bank',\r\n    owner: 'Phạm Văn G',\r\n    amount: 500000000,\r\n    stage: 'Liên hệ ban đầu'\r\n  }\r\n];\r\n\r\nconst Dashboard = () => {\r\n  const theme = useTheme();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n  const [currentQuery, setCurrentQuery] = useState<string>('');\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\r\n  const [suggestions, setSuggestions] = useState<string[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const [showScrollToTop, setShowScrollToTop] = useState(false);\r\n  const [scrollY, setScrollY] = useState(0);\r\n  const [showSearchResults, setShowSearchResults] = useState(false);\r\n  const [activeTab, setActiveTab] = useState<'contacts' | 'deals'>('contacts');\r\n  const [expandedSections, setExpandedSections] = useState({ contacts: false, deals: false });\r\n  const [assistantOpen, setAssistantOpen] = useState(false);\r\n  const [assistantMinimized, setAssistantMinimized] = useState(false);\r\n  const [assistantQuery, setAssistantQuery] = useState('');\r\n\r\n  const searchRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    // Simulate loading for smooth animation\r\n    const timer = setTimeout(() => setIsLoaded(true), 200);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  // Handle scroll to determine position\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const currentScrollY = window.scrollY;\r\n      setScrollY(currentScrollY);\r\n      \r\n      // Always show minimized search bar when scrolling down\r\n      // and show full search bar at the top\r\n      if (currentScrollY > 200) {\r\n        setIsMinimized(true);\r\n        setShowScrollToTop(true);\r\n      } else {\r\n        setIsMinimized(false);\r\n        setShowScrollToTop(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  // Load suggestions when search is opened\r\n  useEffect(() => {\r\n    if (isSearchOpen && searchQuery.length === 0) {\r\n      loadSuggestions();\r\n    }\r\n  }, [isSearchOpen]);\r\n\r\n  const loadSuggestions = async () => {\r\n    try {\r\n      const suggestions = await globalAISearch.getSearchSuggestions('', location.pathname);\r\n      setSuggestions(suggestions);\r\n    } catch (error) {\r\n      console.error('Error loading suggestions:', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!searchQuery.trim()) return;\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      const results = await globalAISearch.contextualSearch(searchQuery);\r\n      console.log('Search results:', results);\r\n      // Process results as needed\r\n      handleGenerateReport(searchQuery);\r\n    } catch (error) {\r\n      console.error('Error searching:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion: string) => {\r\n    setSearchQuery(suggestion);\r\n    handleSearch();\r\n  };\r\n\r\n  const handleInputFocus = () => {\r\n    setIsSearchOpen(true);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  // Handle keyboard events\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Escape') {\r\n      setIsSearchOpen(false);\r\n      inputRef.current?.blur();\r\n    }\r\n  };\r\n\r\n  // Format amount with K/M/B suffix\r\n  const formatAmount = (amount: number): string => {\r\n    if (amount >= 1000000000) {\r\n      return `${(amount / 1000000000).toFixed(1)}B₫`;\r\n    } else if (amount >= 1000000) {\r\n      return `${(amount / 1000000).toFixed(1)}M₫`;\r\n    } else if (amount >= 1000) {\r\n      return `${(amount / 1000).toFixed(1)}K₫`;\r\n    }\r\n    return `${amount}₫`;\r\n  };\r\n\r\n  // Get contact display info based on query\r\n  const getContactDisplay = (contact: any) => {\r\n    const hasNumber = /\\d/.test(searchQuery);\r\n    return hasNumber ? contact.phone : contact.email;\r\n  };\r\n\r\n  // Handle item click navigation\r\n  const handleContactClick = (contactId: number) => {\r\n    navigate(`/contacts/${contactId}`);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  const handleDealClick = (dealId: number) => {\r\n    navigate(`/deals/${dealId}`);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  // Handle \"View all\" clicks\r\n  const handleViewAllContacts = () => {\r\n    setActiveTab('contacts');\r\n    setExpandedSections({ contacts: true, deals: false });\r\n    setShowSearchResults(true);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  const handleViewAllDeals = () => {\r\n    setActiveTab('deals');\r\n    setExpandedSections({ contacts: false, deals: true });\r\n    setShowSearchResults(true);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  // Handle CRM Assistant\r\n  const handleOpenAssistant = () => {\r\n    setAssistantQuery(searchQuery);\r\n    setAssistantOpen(true);\r\n    setIsSearchOpen(false);\r\n  };\r\n\r\n  const handleCloseAssistant = () => {\r\n    setAssistantOpen(false);\r\n    setAssistantMinimized(false);\r\n  };\r\n\r\n  const handleMinimizeAssistant = () => {\r\n    setAssistantMinimized(true);\r\n    setAssistantOpen(false);\r\n  };\r\n\r\n  // Handle back button\r\n  const handleBackToDropdown = () => {\r\n    setShowSearchResults(false);\r\n    setIsSearchOpen(true);\r\n  };\r\n\r\n  // Handle show more\r\n  const handleShowMore = (section: 'contacts' | 'deals') => {\r\n    setExpandedSections(prev => ({\r\n      ...prev,\r\n      [section]: true\r\n    }));\r\n  };\r\n\r\n  // Generate extended mock data for expanded sections\r\n  const getExtendedContacts = () => {\r\n    const extended = [];\r\n    for (let i = 0; i < 15; i++) {\r\n      extended.push({\r\n        ...mockContacts[i % mockContacts.length],\r\n        id: mockContacts[i % mockContacts.length].id + i * 100,\r\n        name: `${mockContacts[i % mockContacts.length].name} ${i + 1}`\r\n      });\r\n    }\r\n    return extended;\r\n  };\r\n\r\n  const getExtendedDeals = () => {\r\n    const extended = [];\r\n    for (let i = 0; i < 15; i++) {\r\n      extended.push({\r\n        ...mockDeals[i % mockDeals.length],\r\n        id: mockDeals[i % mockDeals.length].id + i * 100,\r\n        name: `${mockDeals[i % mockDeals.length].name} ${i + 1}`,\r\n        amount: mockDeals[i % mockDeals.length].amount + i * 10000000\r\n      });\r\n    }\r\n    return extended;\r\n  };\r\n\r\n  // Get status chip color\r\n  const getStatusColor = (status: string) => {\r\n    switch (status.toLowerCase()) {\r\n      case 'hot lead': return 'error';\r\n      case 'qualified': return 'success';\r\n      case 'new lead': return 'info';\r\n      case 'đã gửi báo giá': return 'warning';\r\n      case 'đang đàm phán': return 'primary';\r\n      case 'liên hệ ban đầu': return 'default';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const handleScrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n\r\n  // Xử lý khi người dùng gửi yêu cầu báo cáo mới\r\n  const handleGenerateReport = (query: string) => {\r\n    console.log('Generating report for query:', query);\r\n    setCurrentQuery(query);\r\n    // Ở đây trong thực tế sẽ gọi API để xử lý yêu cầu và tạo báo cáo\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      position: 'relative', \r\n      width: '100%', \r\n      height: '100%',\r\n      overflow: 'auto'\r\n    }}>\r\n        <Fade in={isLoaded} timeout={800}>\r\n          <Box sx={{ p: 3, width: '100%', height: '100%' }}>\r\n            {/* Welcome Header - Crunchbase style */}\r\n            {!showSearchResults && (\r\n              <Box \r\n                sx={{ \r\n                  textAlign: 'center',\r\n                  mb: 6,\r\n                  py: 4,\r\n                  background: `linear-gradient(135deg, ${alpha(theme.palette.primary.main, 0.05)} 0%, ${alpha(theme.palette.secondary.main, 0.05)} 100%)`,\r\n                  borderRadius: 3,\r\n                  border: `1px solid ${alpha(theme.palette.primary.main, 0.1)}`\r\n                }}\r\n              >\r\n              <Typography \r\n                variant=\"h3\" \r\n                component=\"h1\" \r\n                gutterBottom \r\n                sx={{ \r\n                  fontWeight: 'bold', \r\n                  color: theme.palette.text.primary,\r\n                  mb: 2\r\n                }}\r\n              >\r\n                {t('pages.dashboard.welcomeBack')}\r\n              </Typography>\r\n              <Typography \r\n                variant=\"h6\" \r\n                color=\"text.secondary\"\r\n                sx={{ \r\n                  mb: 3,\r\n                  maxWidth: 600,\r\n                  mx: 'auto'\r\n                }}\r\n              >\r\n                {t('pages.dashboard.smartDashboard')}\r\n              </Typography>\r\n              \r\n              {/* AI Search Input - Crunchbase style */}\r\n              <ClickAwayListener onClickAway={handleClickAway}>\r\n                <Box \r\n                  ref={searchRef}\r\n                  sx={{\r\n                    position: isMinimized ? 'fixed' : 'relative',\r\n                    bottom: isMinimized ? 20 : 'auto',\r\n                    right: isMinimized ? 20 : 'auto',\r\n                    left: isMinimized ? 'auto' : 'auto',\r\n                    zIndex: 1000,\r\n                    width: isMinimized ? 'auto' : '100%',\r\n                    maxWidth: isMinimized ? 300 : 600,\r\n                    mx: 'auto',\r\n                    transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                    transform: 'translateY(0)',\r\n                    opacity: 1,\r\n                    boxShadow: isMinimized ? '0 8px 32px rgba(0,0,0,0.15)' : 'none',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: 2\r\n                  }}\r\n                >\r\n                  <Zoom in={true} style={{ transitionDelay: isMinimized ? '100ms' : '0ms' }}>\r\n                    <Paper\r\n                      elevation={isMinimized ? 4 : 1}\r\n                      sx={{\r\n                        p: isMinimized ? 1 : 2,\r\n                        borderRadius: 8,\r\n                        border: `1px solid ${alpha(theme.palette.primary.main, 0.2)}`,\r\n                        backgroundColor: isMinimized ? \r\n                          alpha(theme.palette.background.paper, 0.95) : \r\n                          alpha(theme.palette.background.paper, 0.8),\r\n                        backdropFilter: 'blur(8px)',\r\n                        boxShadow: isMinimized ? \r\n                          `0 4px 20px ${alpha(theme.palette.primary.main, 0.15)}` : \r\n                          'none',\r\n                        transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                        '&:hover': {\r\n                          boxShadow: isMinimized ? \r\n                            `0 8px 32px ${alpha(theme.palette.primary.main, 0.25)}` : \r\n                            'none',\r\n                          transform: isMinimized ? 'translateY(-2px)' : 'none'\r\n                        }\r\n                    }}\r\n                  >\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <TextField\r\n                        inputRef={inputRef}\r\n                        fullWidth\r\n                        placeholder={t('pages.dashboard.searchPlaceholder')}\r\n                        value={searchQuery}\r\n                        onChange={(e) => setSearchQuery(e.target.value)}\r\n                        onFocus={handleInputFocus}\r\n                        onKeyDown={handleKeyDown}\r\n                        onKeyPress={(e) => {\r\n                          if (e.key === 'Enter') {\r\n                            handleSearch();\r\n                          }\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        size={isMinimized ? \"small\" : \"medium\"}\r\n                        InputProps={{\r\n                          startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                              <AIIcon color=\"primary\" />\r\n                            </InputAdornment>\r\n                          ),\r\n                          endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                              {searchQuery ? (\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  onClick={() => setSearchQuery('')}\r\n                                  edge=\"end\"\r\n                                >\r\n                                  <CloseIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                              ) : null}\r\n                              {isLoading ? (\r\n                                <CircularProgress size={20} />\r\n                              ) : (\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  onClick={handleSearch}\r\n                                  edge=\"end\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  <SearchIcon />\r\n                                </IconButton>\r\n                              )}\r\n                            </InputAdornment>\r\n                          ),\r\n                          sx: {\r\n                            borderRadius: 8,\r\n                            backgroundColor: alpha(theme.palette.background.paper, 0.5),\r\n                            fontSize: '1rem',\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.background.paper, 0.8),\r\n                            },\r\n                            '& .MuiOutlinedInput-notchedOutline': {\r\n                              borderColor: alpha(theme.palette.primary.main, 0.3),\r\n                              borderWidth: 2,\r\n                            },\r\n                            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                              borderColor: alpha(theme.palette.primary.main, 0.5),\r\n                              borderWidth: 2,\r\n                            },\r\n                            '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                              borderColor: theme.palette.primary.main,\r\n                              borderWidth: 2,\r\n                            }\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Box>\r\n                    \r\n                    {/* Enhanced Search Dropdown */}\r\n                    {isSearchOpen && !isMinimized && (\r\n                      <Popper\r\n                        open={isSearchOpen}\r\n                        anchorEl={searchRef.current}\r\n                        placement=\"bottom-start\"\r\n                        style={{ width: 'auto', minWidth: searchRef.current?.clientWidth, maxWidth: 500, zIndex: 1301 }}\r\n                      >\r\n                        <Paper\r\n                          elevation={3}\r\n                          sx={{\r\n                            mt: 1,\r\n                            borderRadius: 0,\r\n                            maxHeight: 'none',\r\n                            overflow: 'visible',\r\n                            border: `1px solid ${alpha(theme.palette.divider, 0.3)}`,\r\n                            backgroundColor: theme.palette.background.paper\r\n                          }}\r\n                        >\r\n                          <Box sx={{ overflow: 'visible' }}>\r\n                            {/* Contacts Section */}\r\n                            <Box sx={{ py: 0.5 }}>\r\n                              <Typography \r\n                                variant=\"caption\" \r\n                                sx={{ \r\n                                  px: 1.5, \r\n                                  py: 0.5, \r\n                                  display: 'block',\r\n                                  color: 'text.secondary',\r\n                                  fontWeight: 'medium',\r\n                                  textTransform: 'uppercase',\r\n                                  letterSpacing: 0.5,\r\n                                  fontSize: '0.65rem'\r\n                                }}\r\n                              >\r\n                                {t('common.contacts')}\r\n                              </Typography>\r\n                              {mockContacts.slice(0, 3).map((contact) => (\r\n                                <ListItemButton\r\n                                  key={contact.id}\r\n                                  onClick={() => handleContactClick(contact.id)}\r\n                                  sx={{\r\n                                    px: 1.5,\r\n                                    py: 0.75,\r\n                                    borderRadius: 0,\r\n                                    mx: 1,\r\n                                    mb: 0.5,\r\n                                    '&:hover': {\r\n                                      backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', minWidth: 0 }}>\r\n                                    <Avatar \r\n                                      sx={{ \r\n                                        width: 24, \r\n                                        height: 24, \r\n                                        mr: 1,\r\n                                        fontSize: '0.75rem',\r\n                                        backgroundColor: theme.palette.primary.main\r\n                                      }}\r\n                                    >\r\n                                      {contact.name.charAt(0)}\r\n                                    </Avatar>\r\n                                    <Box sx={{ \r\n                                      display: 'flex', \r\n                                      alignItems: 'center', \r\n                                      justifyContent: 'space-between',\r\n                                      width: '100%',\r\n                                      minWidth: 0\r\n                                    }}>\r\n                                      <Typography \r\n                                        variant=\"body2\" \r\n                                        sx={{ \r\n                                          fontWeight: 'bold',\r\n                                          color: 'text.primary',\r\n                                          whiteSpace: 'nowrap',\r\n                                          overflow: 'hidden',\r\n                                          textOverflow: 'ellipsis',\r\n                                          mr: 1,\r\n                                          flex: 1\r\n                                        }}\r\n                                      >\r\n                                        {contact.name}\r\n                                        <Typography \r\n                                          component=\"span\" \r\n                                          variant=\"caption\" \r\n                                          sx={{ \r\n                                            color: 'text.secondary',\r\n                                            ml: 0.5,\r\n                                            fontWeight: 'normal'\r\n                                          }}\r\n                                        >\r\n                                          — {getContactDisplay(contact)}\r\n                                        </Typography>\r\n                                      </Typography>\r\n                                      <Chip\r\n                                        label={contact.leadStatus}\r\n                                        size=\"small\"\r\n                                        color={getStatusColor(contact.leadStatus) as any}\r\n                                        sx={{\r\n                                          height: 16,\r\n                                          fontSize: '0.65rem',\r\n                                          flexShrink: 0\r\n                                        }}\r\n                                      />\r\n                                    </Box>\r\n                                  </Box>\r\n                                </ListItemButton>\r\n                              ))}\r\n                              <ListItemButton\r\n                                onClick={handleViewAllContacts}\r\n                                sx={{\r\n                                  px: 1.5,\r\n                                  py: 0.5,\r\n                                  borderRadius: 0,\r\n                                  mx: 1,\r\n                                  color: 'primary.main',\r\n                                  '&:hover': {\r\n                                    backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\r\n                                  {t('common.viewAllContacts')}\r\n                                </Typography>\r\n                              </ListItemButton>\r\n                            </Box>\r\n\r\n                            <Divider sx={{ mx: 1 }} />\r\n\r\n                            {/* Deals Section */}\r\n                            <Box sx={{ py: 0.5 }}>\r\n                              <Typography \r\n                                variant=\"caption\" \r\n                                sx={{ \r\n                                  px: 1.5, \r\n                                  py: 0.5, \r\n                                  display: 'block',\r\n                                  color: 'text.secondary',\r\n                                  fontWeight: 'medium',\r\n                                  textTransform: 'uppercase',\r\n                                  letterSpacing: 0.5,\r\n                                  fontSize: '0.65rem'\r\n                                }}\r\n                              >\r\n                                {t('common.deals')}\r\n                              </Typography>\r\n                              {mockDeals.slice(0, 3).map((deal) => (\r\n                                <ListItemButton\r\n                                  key={deal.id}\r\n                                  onClick={() => handleDealClick(deal.id)}\r\n                                  sx={{\r\n                                    px: 1.5,\r\n                                    py: 0.75,\r\n                                    borderRadius: 0,\r\n                                    mx: 1,\r\n                                    mb: 0.5,\r\n                                    '&:hover': {\r\n                                      backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', minWidth: 0 }}>\r\n                                    <Box \r\n                                      sx={{ \r\n                                        width: 24, \r\n                                        height: 24, \r\n                                        mr: 1,\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                        backgroundColor: alpha(theme.palette.success.main, 0.1),\r\n                                        borderRadius: 0,\r\n                                        fontSize: '0.75rem'\r\n                                      }}\r\n                                    >\r\n                                      💼\r\n                                    </Box>\r\n                                    <Box sx={{ \r\n                                      display: 'flex', \r\n                                      alignItems: 'center', \r\n                                      justifyContent: 'space-between',\r\n                                      width: '100%',\r\n                                      minWidth: 0\r\n                                    }}>\r\n                                      <Typography \r\n                                        variant=\"body2\" \r\n                                        sx={{ \r\n                                          fontWeight: 'bold',\r\n                                          color: 'text.primary',\r\n                                          whiteSpace: 'nowrap',\r\n                                          overflow: 'hidden',\r\n                                          textOverflow: 'ellipsis',\r\n                                          mr: 1,\r\n                                          flex: 1\r\n                                        }}\r\n                                      >\r\n                                        {deal.name}\r\n                                        <Typography \r\n                                          component=\"span\" \r\n                                          variant=\"caption\" \r\n                                          sx={{ \r\n                                            color: 'text.secondary',\r\n                                            ml: 0.5,\r\n                                            fontWeight: 'normal'\r\n                                          }}\r\n                                        >\r\n                                          — {formatAmount(deal.amount)}\r\n                                        </Typography>\r\n                                      </Typography>\r\n                                      <Chip\r\n                                        label={deal.stage}\r\n                                        size=\"small\"\r\n                                        color={getStatusColor(deal.stage) as any}\r\n                                        sx={{\r\n                                          height: 16,\r\n                                          fontSize: '0.65rem',\r\n                                          flexShrink: 0\r\n                                        }}\r\n                                      />\r\n                                    </Box>\r\n                                  </Box>\r\n                                </ListItemButton>\r\n                              ))}\r\n                              <ListItemButton\r\n                                onClick={handleViewAllDeals}\r\n                                sx={{\r\n                                  px: 1.5,\r\n                                  py: 0.5,\r\n                                  borderRadius: 0,\r\n                                  mx: 1,\r\n                                  color: 'primary.main',\r\n                                  '&:hover': {\r\n                                    backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\r\n                                  {t('common.viewAllDeals')}\r\n                                </Typography>\r\n                              </ListItemButton>\r\n                            </Box>\r\n                            \r\n                            {/* CRM Assistant Entry */}\r\n                            {searchQuery && (\r\n                              <>\r\n                                <Divider sx={{ my: 1 }} />\r\n                                <Box sx={{ px: 1 }}>\r\n                                  <ListItemButton\r\n                                    onClick={handleOpenAssistant}\r\n                                    sx={{\r\n                                      px: 1.5,\r\n                                      py: 1,\r\n                                      borderRadius: 0,\r\n                                      backgroundColor: alpha(theme.palette.warning.main, 0.05),\r\n                                      border: `1px solid ${alpha(theme.palette.warning.main, 0.2)}`,\r\n                                      '&:hover': {\r\n                                        backgroundColor: alpha(theme.palette.warning.main, 0.1)\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n                                      <SparkleIcon \r\n                                        sx={{ \r\n                                          color: 'warning.main', \r\n                                          mr: 1.5,\r\n                                          fontSize: '1.2rem'\r\n                                        }} \r\n                                      />\r\n                                      <Typography \r\n                                        variant=\"body2\" \r\n                                        sx={{ \r\n                                          fontWeight: 'medium',\r\n                                          color: 'warning.dark'\r\n                                        }}\r\n                                      >\r\n                                        {t('pages.dashboard.askAssistant', { query: (searchQuery.length > 30 ? searchQuery.substring(0, 30) + '...' : searchQuery) })}\r\n                                      </Typography>\r\n                                    </Box>\r\n                                  </ListItemButton>\r\n                                </Box>\r\n                              </>\r\n                            )}\r\n                          </Box>\r\n                        </Paper>\r\n                      </Popper>\r\n                    )}\r\n                    \r\n                    {/* Minimized Label */}\r\n                    {isMinimized && (\r\n                      <Typography \r\n                        variant=\"caption\" \r\n                        sx={{ \r\n                          ml: 1, \r\n                          color: 'text.secondary',\r\n                          display: { xs: 'none', sm: 'inline' }\r\n                        }}\r\n                      >\r\n                        {t('common.aiAssistantMinimized')}\r\n                      </Typography>\r\n                    )}\r\n                  </Paper>\r\n                  </Zoom>\r\n                  \r\n                  {/* Scroll to top button */}\r\n                  <Slide direction=\"up\" in={showScrollToTop} mountOnEnter unmountOnExit>\r\n                    <IconButton \r\n                      color=\"primary\"\r\n                      size=\"medium\"\r\n                      onClick={handleScrollToTop}\r\n                      sx={{\r\n                        position: 'fixed',\r\n                        bottom: isMinimized ? 80 : 20,\r\n                        right: 20,\r\n                        backgroundColor: alpha(theme.palette.background.paper, 0.9),\r\n                        boxShadow: `0 4px 14px ${alpha(theme.palette.primary.main, 0.2)}`,\r\n                        border: `1px solid ${alpha(theme.palette.primary.main, 0.3)}`,\r\n                        '&:hover': {\r\n                          backgroundColor: alpha(theme.palette.background.paper, 1),\r\n                          boxShadow: `0 6px 20px ${alpha(theme.palette.primary.main, 0.3)}`,\r\n                        }\r\n                      }}\r\n                    >\r\n                      <KeyboardArrowUpIcon />\r\n                    </IconButton>\r\n                  </Slide>\r\n                </Box>\r\n              </ClickAwayListener>\r\n            </Box>\r\n            )}\r\n\r\n            {/* Fixed Search Input for Search Results */}\r\n            {showSearchResults && (\r\n              <Box\r\n                sx={{\r\n                  position: 'fixed',\r\n                  bottom: 20,\r\n                  left: '50%',\r\n                  transform: 'translateX(-50%)',\r\n                  zIndex: 1000,\r\n                  width: 'auto',\r\n                  maxWidth: 700,\r\n                  minWidth: 500\r\n                }}\r\n              >\r\n                <Paper\r\n                  elevation={4}\r\n                  sx={{\r\n                    p: 2,\r\n                    borderRadius: 4,\r\n                    border: `2px solid ${alpha(theme.palette.warning.main, 0.6)}`,\r\n                    backgroundColor: alpha(theme.palette.warning.main, 0.15),\r\n                    backdropFilter: 'blur(12px)',\r\n                    boxShadow: `0 6px 24px ${alpha(theme.palette.warning.main, 0.3)}`,\r\n                    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                    '&:hover': {\r\n                      backgroundColor: alpha(theme.palette.warning.main, 0.25),\r\n                      boxShadow: `0 12px 40px ${alpha(theme.palette.warning.main, 0.4)}`,\r\n                      transform: 'translateY(-4px)'\r\n                    }\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    fullWidth\r\n                    placeholder={t('pages.dashboard.searchPlaceholder')}\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                    onKeyPress={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        handleSearch();\r\n                      }\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <AIIcon color=\"primary\" />\r\n                        </InputAdornment>\r\n                      ),\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          {searchQuery ? (\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={() => setSearchQuery('')}\r\n                              edge=\"end\"\r\n                            >\r\n                              <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                          ) : null}\r\n                          {isLoading ? (\r\n                            <CircularProgress size={20} />\r\n                          ) : (\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={handleSearch}\r\n                              edge=\"end\"\r\n                              color=\"primary\"\r\n                            >\r\n                              <SearchIcon />\r\n                            </IconButton>\r\n                          )}\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            edge=\"end\"\r\n                          >\r\n                            <MicIcon />\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                      sx: {\r\n                        borderRadius: 8,\r\n                        backgroundColor: alpha(theme.palette.background.paper, 0.9),\r\n                        fontSize: '0.9rem',\r\n                        '&:hover': {\r\n                          backgroundColor: theme.palette.background.paper,\r\n                        },\r\n                        '& .MuiOutlinedInput-notchedOutline': {\r\n                          borderColor: alpha(theme.palette.background.paper, 0.8),\r\n                          borderWidth: 2,\r\n                        },\r\n                        '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                          borderColor: theme.palette.background.paper,\r\n                          borderWidth: 2,\r\n                        },\r\n                        '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                          borderColor: theme.palette.background.paper,\r\n                          borderWidth: 2,\r\n                        }\r\n                      }\r\n                    }}\r\n                  />\r\n                </Paper>\r\n              </Box>\r\n            )}\r\n\r\n            {/* Search Results Component */}\r\n            {showSearchResults && (\r\n              <Box sx={{ mb: 4 }}>\r\n                {/* Header */}\r\n                <Box\r\n                  sx={{\r\n                    position: 'sticky',\r\n                    top: 0,\r\n                    zIndex: 100,\r\n                    backgroundColor: theme.palette.background.paper,\r\n                    borderBottom: `1px solid ${theme.palette.divider}`,\r\n                    p: 1.5,\r\n                    mb: 2\r\n                  }}\r\n                >\r\n                  <Box sx={{ mb: 2 }}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                      <IconButton\r\n                        onClick={handleBackToDropdown}\r\n                        size=\"small\"\r\n                        sx={{\r\n                          mr: 1,\r\n                          width: 28,\r\n                          height: 28,\r\n                          backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                          '&:hover': {\r\n                            backgroundColor: alpha(theme.palette.primary.main, 0.2)\r\n                          }\r\n                        }}\r\n                      >\r\n                        <ArrowBackIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                      <Typography variant=\"body2\" sx={{ fontWeight: 'bold', fontSize: '0.875rem' }}>\r\n                        {t('pages.dashboard.back')}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography variant=\"h6\" sx={{ fontSize: '1.1rem', color: 'text.primary', fontWeight: 'medium' }}>\r\n                      {t('pages.dashboard.searchFor', { query: searchQuery || t('pages.dashboard.aiSearchResults') })}\r\n                    </Typography>\r\n                  </Box>\r\n                  \r\n                  {/* Tag Chips */}\r\n                  <Box sx={{ display: 'flex', gap: 1 }}>\r\n                    <Chip\r\n                      icon={<PeopleIcon fontSize=\"small\" />}\r\n                      label={t('common.contacts')}\r\n                      variant={activeTab === 'contacts' ? 'filled' : 'outlined'}\r\n                      color={activeTab === 'contacts' ? 'primary' : 'default'}\r\n                      onClick={() => navigate('/contacts')}\r\n                      sx={{ cursor: 'pointer', fontSize: '0.8rem' }}\r\n                    />\r\n                    <Chip\r\n                      icon={<HandshakeIcon fontSize=\"small\" />}\r\n                      label={t('common.deals')}\r\n                      variant={activeTab === 'deals' ? 'filled' : 'outlined'}\r\n                      color={activeTab === 'deals' ? 'primary' : 'default'}\r\n                      onClick={() => navigate('/deals')}\r\n                      sx={{ cursor: 'pointer', fontSize: '0.8rem' }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n\r\n                {/* Content Sections */}\r\n                <Box sx={{ px: 2 }}>\r\n                  {/* Contacts Section */}\r\n                  <Box sx={{ mb: 4 }}>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      sx={{\r\n                        fontWeight: 'bold',\r\n                        mb: 2,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 1\r\n                      }}\r\n                    >\r\n                      {t('pages.dashboard.sections.contacts')}\r\n                      <Chip\r\n                        label={expandedSections.contacts ? getExtendedContacts().length : mockContacts.length}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Typography>\r\n                    \r\n                    <Paper\r\n                      elevation={1}\r\n                      sx={{\r\n                        borderRadius: '6px',\r\n                        border: `1px solid ${alpha(theme.palette.divider, 0.3)}`,\r\n                        backgroundColor: theme.palette.background.paper,\r\n                        overflow: 'hidden'\r\n                      }}\r\n                    >\r\n                      {(expandedSections.contacts ? getExtendedContacts() : mockContacts.slice(0, 3)).map((contact) => (\r\n                        <ListItemButton\r\n                          key={contact.id}\r\n                          onClick={() => handleContactClick(contact.id)}\r\n                          sx={{\r\n                            px: 2,\r\n                            py: 1,\r\n                            borderRadius: 0,\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                            },\r\n                            '&:not(:last-child)': {\r\n                              borderBottom: `1px solid ${alpha(theme.palette.divider, 0.2)}`\r\n                            }\r\n                          }}\r\n                        >\r\n                          <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', minWidth: 0 }}>\r\n                            <Avatar\r\n                              sx={{\r\n                                width: 24,\r\n                                height: 24,\r\n                                mr: 1.5,\r\n                                fontSize: '0.75rem',\r\n                                backgroundColor: theme.palette.primary.main\r\n                              }}\r\n                            >\r\n                              {contact.name.charAt(0)}\r\n                            </Avatar>\r\n                            <Box sx={{\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              justifyContent: 'space-between',\r\n                              width: '100%',\r\n                              minWidth: 0\r\n                            }}>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                sx={{\r\n                                  fontWeight: 'bold',\r\n                                  color: 'text.primary',\r\n                                  whiteSpace: 'nowrap',\r\n                                  overflow: 'hidden',\r\n                                  textOverflow: 'ellipsis',\r\n                                  mr: 1,\r\n                                  flex: 1\r\n                                }}\r\n                              >\r\n                                {contact.name}\r\n                                <Typography\r\n                                  component=\"span\"\r\n                                  variant=\"caption\"\r\n                                  sx={{\r\n                                    color: 'text.secondary',\r\n                                    ml: 0.5,\r\n                                    fontWeight: 'normal'\r\n                                  }}\r\n                                >\r\n                                  — {getContactDisplay(contact)} · {contact.owner}\r\n                                </Typography>\r\n                              </Typography>\r\n                              <Chip\r\n                                label={contact.leadStatus}\r\n                                size=\"small\"\r\n                                color={getStatusColor(contact.leadStatus) as any}\r\n                                sx={{\r\n                                  height: 18,\r\n                                  fontSize: '0.65rem',\r\n                                  flexShrink: 0\r\n                                }}\r\n                              />\r\n                            </Box>\r\n                          </Box>\r\n                        </ListItemButton>\r\n                      ))}\r\n                      \r\n                      {!expandedSections.contacts && (\r\n                        <ListItemButton\r\n                          onClick={() => handleShowMore('contacts')}\r\n                          sx={{\r\n                            px: 2,\r\n                            py: 1,\r\n                            borderRadius: 0,\r\n                            color: 'primary.main',\r\n                            borderTop: `1px solid ${alpha(theme.palette.divider, 0.2)}`,\r\n                            justifyContent: 'center',\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                            }\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\r\n                            {t('pages.dashboard.showMoreContacts')}\r\n                          </Typography>\r\n                        </ListItemButton>\r\n                      )}\r\n                    </Paper>\r\n                  </Box>\r\n\r\n                  {/* Deals Section */}\r\n                  <Box>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      sx={{\r\n                        fontWeight: 'bold',\r\n                        mb: 2,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 1\r\n                      }}\r\n                    >\r\n                      {t('pages.dashboard.sections.deals')}\r\n                      <Chip\r\n                        label={expandedSections.deals ? getExtendedDeals().length : mockDeals.length}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Typography>\r\n                    \r\n                    <Paper\r\n                      elevation={1}\r\n                      sx={{\r\n                        borderRadius: '6px',\r\n                        border: `1px solid ${alpha(theme.palette.divider, 0.3)}`,\r\n                        backgroundColor: theme.palette.background.paper,\r\n                        overflow: 'hidden'\r\n                      }}\r\n                    >\r\n                      {(expandedSections.deals ? getExtendedDeals() : mockDeals.slice(0, 3)).map((deal) => (\r\n                        <ListItemButton\r\n                          key={deal.id}\r\n                          onClick={() => handleDealClick(deal.id)}\r\n                          sx={{\r\n                            px: 2,\r\n                            py: 1,\r\n                            borderRadius: 0,\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                            },\r\n                            '&:not(:last-child)': {\r\n                              borderBottom: `1px solid ${alpha(theme.palette.divider, 0.2)}`\r\n                            }\r\n                          }}\r\n                        >\r\n                          <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', minWidth: 0 }}>\r\n                            <Box\r\n                              sx={{\r\n                                width: 24,\r\n                                height: 24,\r\n                                mr: 1.5,\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                backgroundColor: alpha(theme.palette.success.main, 0.1),\r\n                                borderRadius: 1,\r\n                                fontSize: '0.75rem'\r\n                              }}\r\n                            >\r\n                              💼\r\n                            </Box>\r\n                            <Box sx={{\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              justifyContent: 'space-between',\r\n                              width: '100%',\r\n                              minWidth: 0\r\n                            }}>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                sx={{\r\n                                  fontWeight: 'bold',\r\n                                  color: 'text.primary',\r\n                                  whiteSpace: 'nowrap',\r\n                                  overflow: 'hidden',\r\n                                  textOverflow: 'ellipsis',\r\n                                  mr: 1,\r\n                                  flex: 1\r\n                                }}\r\n                              >\r\n                                {deal.name}\r\n                                <Typography\r\n                                  component=\"span\"\r\n                                  variant=\"caption\"\r\n                                  sx={{\r\n                                    color: 'text.secondary',\r\n                                    ml: 0.5,\r\n                                    fontWeight: 'normal'\r\n                                  }}\r\n                                >\r\n                                  — {deal.customer} · {deal.owner} · {formatAmount(deal.amount)}\r\n                                </Typography>\r\n                              </Typography>\r\n                              <Chip\r\n                                label={deal.stage}\r\n                                size=\"small\"\r\n                                color={getStatusColor(deal.stage) as any}\r\n                                sx={{\r\n                                  height: 18,\r\n                                  fontSize: '0.65rem',\r\n                                  flexShrink: 0\r\n                                }}\r\n                              />\r\n                            </Box>\r\n                          </Box>\r\n                        </ListItemButton>\r\n                      ))}\r\n                      \r\n                      {!expandedSections.deals && (\r\n                        <ListItemButton\r\n                          onClick={() => handleShowMore('deals')}\r\n                          sx={{\r\n                            px: 2,\r\n                            py: 1,\r\n                            borderRadius: 0,\r\n                            color: 'primary.main',\r\n                            borderTop: `1px solid ${alpha(theme.palette.divider, 0.2)}`,\r\n                            justifyContent: 'center',\r\n                            '&:hover': {\r\n                              backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n                            }\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"body2\" sx={{ fontWeight: 'medium' }}>\r\n                            {t('pages.dashboard.showMoreDeals')}\r\n                          </Typography>\r\n                        </ListItemButton>\r\n                      )}\r\n                    </Paper>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n\r\n            {/* Dynamic KPI Stats - Crunchbase \"THIS MONTH ON CRUNCHBASE\" style */}\r\n            {!showSearchResults && <DynamicKPIStats />}\r\n\r\n            {/* Main Content Grid */}\r\n            {!showSearchResults && (\r\n              <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', lg: '2fr 1fr' }, gap: 4, mb: 4 }}>\r\n                {/* Left Column - Trending, Insights, Predictions */}\r\n                <Box>\r\n                  <TrendingInsightsPredictions />\r\n                </Box>\r\n\r\n                {/* Right Column - Charts and Reports */}\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\r\n                  {/* Dynamic Charts */}\r\n                  <Box>\r\n                    <DynamicCharts query={currentQuery} />\r\n                  </Box>\r\n\r\n                  {/* Saved Reports */}\r\n                  <Box>\r\n                    <SavedReports />\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n\r\n            {/* Footer */}\r\n            <Box sx={{ mt: 4, pt: 2, borderTop: `1px solid ${theme.palette.divider}`, textAlign: 'center' }}>\r\n              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                {t('pages.dashboard.footer')}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Fade>\r\n        \r\n        {/* CRM Assistant Panel */}\r\n        <CrmAssistantPanel\r\n          open={assistantOpen}\r\n          initialQuery={assistantQuery}\r\n          onClose={handleCloseAssistant}\r\n          onMinimize={handleMinimizeAssistant}\r\n        />\r\n        \r\n        {/* Minimized Assistant Button */}\r\n        {assistantMinimized && (\r\n          <Zoom in={assistantMinimized}>\r\n            <Paper\r\n              elevation={6}\r\n              sx={{\r\n                position: 'fixed',\r\n                bottom: 20,\r\n                right: 20,\r\n                width: 60,\r\n                height: 60,\r\n                borderRadius: '50%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                cursor: 'pointer',\r\n                backgroundColor: 'warning.main',\r\n                color: 'warning.contrastText',\r\n                zIndex: 1300,\r\n                '&:hover': {\r\n                  transform: 'scale(1.1)',\r\n                  boxShadow: `0 8px 25px ${alpha(theme.palette.warning.main, 0.4)}`\r\n                },\r\n                transition: 'all 0.3s ease-in-out'\r\n              }}\r\n              onClick={() => {\r\n                setAssistantMinimized(false);\r\n                setAssistantOpen(true);\r\n              }}\r\n            >\r\n              <SparkleIcon sx={{ fontSize: '1.5rem' }} />\r\n            </Paper>\r\n          </Zoom>\r\n        )}\r\n      </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["mockContacts","id","name","email","phone","owner","leadStatus","statusColor","mockDeals","customer","amount","stage","stageColor","deadline","formatAmount","concat","toFixed","MiniTable","_ref","type","data","onAction","theme","useTheme","t","i18n","useTranslation","locale","language","startsWith","formatDate","dateStr","d","Date","Intl","DateTimeFormat","year","month","day","format","contacts","_jsx","TableContainer","component","Paper","sx","maxHeight","border","alpha","palette","divider","children","_jsxs","Table","size","stickyHeader","TableHead","TableRow","TableCell","fontWeight","fontSize","TableBody","map","contact","hover","Chip","label","backgroundColor","color","height","Button","startIcon","OpenIcon","onClick","minWidth","px","deals","deal","Box","display","gap","TaskIcon","AssistantCard","_ref2","loading","onToggleSection","p","mb","borderRadius","primary","main","Skeleton","variant","width","i","Typography","query","summary","item","index","alignItems","mr","icon","PersonIcon","showContacts","cursor","BusinessIcon","showDeals","flexWrap","AddIcon","TrendingIcon","EmailIcon","ChatMessage","_ref3","message","isUser","justifyContent","maxWidth","isCard","cardData","content","_ref4","open","initialQuery","onClose","onMinimize","messages","setMessages","useState","inputValue","setInputValue","isTyping","setIsTyping","conversationTitle","setConversationTitle","setCardData","snackbar","setSnackbar","messagesEndRef","useRef","useEffect","length","split","slice","join","handleSendMessage","_messagesEndRef$curre","current","scrollIntoView","behavior","async","isInitial","arguments","undefined","trim","userMessage","now","toString","timestamp","prev","setTimeout","newCardData","reduce","sum","assistantMessage","responses","Math","floor","random","handleToggleSection","section","updatedCardData","_objectSpread","msg","handleAction","action","_Fragment","Dialog","PaperProps","overflow","BackdropProps","common","black","backdropFilter","borderBottom","background","paper","position","top","zIndex","AIIcon","lineHeight","IconButton","MinimizeIcon","ExpandIcon","CloseIcon","DialogContent","flex","flexDirection","grey","opacity","ref","borderTop","bottom","TextField","fullWidth","multiline","maxRows","placeholder","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","InputProps","endAdornment","InputAdornment","AttachIcon","disabled","SendIcon","borderColor","mt","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","DynamicKPIStats","kpiData","setKpiData","dynamicUpdates","setDynamicUpdates","isLoading","setIsLoading","lastRefresh","setLastRefresh","activeKpiIndex","setActiveKpiIndex","showAllKpis","setShowAllKpis","loadKPIData","loadDynamicUpdates","interval","setInterval","updateKPIData","addRandomUpdate","clearInterval","rotationInterval","prevIndex","Promise","resolve","currentDate","kpis","title","change","changeLabel","PeopleIcon","description","lastUpdated","DealsIcon","success","MoneyIcon","warning","TimelineIcon","info","StarIcon","secondary","updates","isNew","kpi","newUpdates","randomUpdate","update","u","getChangeColor","error","text","formatTimeAgo","date","diffMs","getTime","diffMins","diffHours","toLocaleDateString","Tooltip","ViewCarouselIcon","ViewModuleIcon","RefreshIcon","minHeight","gridTemplateColumns","xs","sm","md","Fade","in","timeout","enter","exit","style","transitionDelay","elevation","transition","left","transform","boxShadow","TrendingUpIcon","TrendingDownIcon","ml","TabPanel","props","other","_objectWithoutProperties","_excluded","role","hidden","pt","TrendingInsightsPredictions","tabValue","setTabValue","trendingData","setTrendingData","insightsData","setInsightsData","predictionsData","setPredictionsData","loadAllData","trendingRequest","trendingResponse","aiOrchestrator","processRequest","generateTrendingData","result","insightsRequest","insightsResponse","generateInsightsData","predictionsRequest","predictionsResponse","generatePredictionsData","console","aiResult","trends","defaultTrends","growth","confidence","category","ShowChartIcon","PsychologyIcon","trend","insights","defaultInsights","impact","actionable","source","insight","predictions","topDeals","defaultPredictions","probability","timeframe","riskLevel","prediction","getImpactColor","getRiskColor","risk","getTypeIcon","Tabs","newValue","Tab","iconPosition","py","LightbulbIcon","Card","CardContent","Avatar","ArrowUpIcon","round","LinearProgress","List","React","ListItem","ListItemAvatar","ListItemText","toUpperCase","toLocaleTimeString","Divider","textTransform","REVENUE_DATA","DEAL_STATUS_DATA","NEW_CUSTOMERS_DATA","REVENUE_BY_MONTH_DATA","CONVERSION_RATE_DATA","MONTHLY_REVENUE_DATA","COLORS","chartType","setChartType","timeRange","setTimeRange","getChartTypeFromQuery","lowercaseQuery","toLowerCase","includes","chartDataType","newChartType","chartData","getChartData","formatValue","ToggleButtonGroup","exclusive","handleChartTypeChange","event","ToggleButton","BarChartIcon","PieChartIcon","LineChartIcon","TableChartIcon","FormControl","InputLabel","Select","labelId","MenuItem","ResponsiveContainer","BarChart","margin","right","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","formatter","Legend","Bar","fill","PieChart","Pie","cx","cy","labelLine","outerRadius","nameKey","percent","entry","Cell","LineChart","Line","stroke","activeDot","r","borderCollapse","padding","textAlign","SAVED_REPORTS","createdAt","favorite","tags","SavedReports","anchorEl","setAnchorEl","selectedReportId","setSelectedReportId","searchQuery","setSearchQuery","favorites","setFavorites","acc","report","handleMenuClose","getChartIcon","filteredReports","filter","some","tag","startAdornment","SearchIcon","stopPropagation","FavoriteIcon","FavoriteBorderIcon","idx","ListItemSecondaryAction","edge","handleMenuOpen","currentTarget","MoreVertIcon","Menu","Boolean","DownloadIcon","EditIcon","ShareIcon","DeleteIcon","globalAISearch","constructor","searchHistory","searchCache","Map","contextData","this","loadSearchHistory","setContext","context","search","filters","cacheKey","generateCacheKey","has","get","searchRequest","response","results","processSearchResults","set","addToSearchHistory","getFallbackResults","quickSearch","maxResults","getSearchSuggestions","partialQuery","currentPage","getPopularSearches","suggestionRequest","suggestions","contextualSearch","_this$contextData","contextualFilters","types","contextual","semanticSearch","semanticRequest","originalQuery","relevanceScore","relevance","metadata","url","generateResultUrl","contract","invoice","requirement","quotation","JSON","stringify","popularSearches","default","unshift","saveSearchHistory","saved","localStorage","getItem","parse","setItem","clearCache","clear","getSearchStats","historyCount","cacheSize","recentSearches","exportSearchData","history","avatar","Dashboard","_searchRef$current","location","useLocation","navigate","useNavigate","currentQuery","setCurrentQuery","isLoaded","setIsLoaded","isSearchOpen","setIsSearchOpen","setSuggestions","isMinimized","setIsMinimized","showScrollToTop","setShowScrollToTop","scrollY","setScrollY","showSearchResults","setShowSearchResults","activeTab","setActiveTab","expandedSections","setExpandedSections","assistantOpen","setAssistantOpen","assistantMinimized","setAssistantMinimized","assistantQuery","setAssistantQuery","searchRef","inputRef","timer","clearTimeout","handleScroll","currentScrollY","window","addEventListener","removeEventListener","loadSuggestions","pathname","handleSearch","log","handleGenerateReport","getContactDisplay","test","handleContactClick","contactId","handleDealClick","dealId","handleShowMore","getExtendedContacts","extended","push","getExtendedDeals","getStatusColor","status","gutterBottom","mx","ClickAwayListener","onClickAway","handleClickAway","Zoom","onFocus","handleInputFocus","onKeyDown","_inputRef$current","blur","CircularProgress","borderWidth","Popper","placement","clientWidth","letterSpacing","ListItemButton","charAt","whiteSpace","textOverflow","flexShrink","handleViewAllContacts","handleViewAllDeals","my","handleOpenAssistant","SparkleIcon","substring","Slide","direction","mountOnEnter","unmountOnExit","handleScrollToTop","scrollTo","KeyboardArrowUpIcon","MicIcon","handleBackToDropdown","ArrowBackIcon","HandshakeIcon","lg","DynamicCharts","CrmAssistantPanel","handleCloseAssistant","handleMinimizeAssistant"],"sourceRoot":""}