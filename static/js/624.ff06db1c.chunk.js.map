{"version":3,"file":"static/js/624.ff06db1c.chunk.js","mappings":"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","sources":["pages/ContractManagement/components/TemplateList/TemplateFilters.tsx","pages/ContractManagement/components/TemplateList/TemplateTable.tsx","pages/ContractManagement/components/AIContractGeneration/AIPromptInput.tsx","pages/ContractManagement/components/AIContractGeneration/ContractPreview.tsx","pages/ContractManagement/components/AIContractGeneration/mockData.ts","pages/ContractManagement/components/AIContractGeneration/index.tsx","pages/ContractManagement/components/TemplateList/index.tsx","pages/ContractManagement/components/UploadTemplate/index.tsx","pages/ContractManagement/components/PaymentScheduleStep/index.tsx","pages/ContractManagement/components/CreateContract/index.tsx","pages/ContractManagement/components/ContractDetail/index.tsx","pages/ContractManagement/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, TextField, MenuItem, Button } from '@mui/material';\r\nimport { TemplateFilterValues } from './types';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\r\n\r\ninterface TemplateFiltersProps {\r\n  filters: TemplateFilterValues;\r\n  onFilterChange: (filters: TemplateFilterValues) => void;\r\n  onUploadClick: () => void;\r\n  onCreateWithAIClick?: () => void;\r\n}\r\n\r\nconst TemplateFilters: React.FC<TemplateFiltersProps> = ({\r\n  filters,\r\n  onFilterChange,\r\n  onUploadClick,\r\n  onCreateWithAIClick = () => console.log('Create with AI clicked'),\r\n}) => {\r\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    onFilterChange({ ...filters, search: e.target.value });\r\n  };\r\n\r\n  const handleTypeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    onFilterChange({ ...filters, type: e.target.value as any });\r\n  };\r\n\r\n  const handleStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    onFilterChange({ ...filters, status: e.target.value as any });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mb: 3 }}>\r\n      <Box sx={{ \r\n        display: 'grid',\r\n        gridTemplateColumns: { xs: '1fr', md: '1fr 1fr 1fr' },\r\n        gap: 2,\r\n        alignItems: 'center',\r\n        mb: 2\r\n      }}>\r\n        <Box>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder=\"Tìm kiếm template...\"\r\n            value={filters.search}\r\n            onChange={handleSearchChange}\r\n            InputProps={{\r\n              startAdornment: <SearchIcon sx={{ color: 'text.secondary', mr: 1 }} />,\r\n            }}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            label=\"Loại template\"\r\n            value={filters.type}\r\n            onChange={handleTypeChange}\r\n            variant=\"outlined\"\r\n          >\r\n            <MenuItem value=\"all\">Tất cả</MenuItem>\r\n            <MenuItem value=\"internal\">Nội bộ</MenuItem>\r\n            <MenuItem value=\"customer\">Khách hàng</MenuItem>\r\n            <MenuItem value=\"AI\">AI</MenuItem>\r\n          </TextField>\r\n        </Box>\r\n        <Box>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            label=\"Trạng thái\"\r\n            value={filters.status}\r\n            onChange={handleStatusChange}\r\n            variant=\"outlined\"\r\n          >\r\n            <MenuItem value=\"all\">Tất cả</MenuItem>\r\n            <MenuItem value=\"active\">Đang hoạt động</MenuItem>\r\n            <MenuItem value=\"inactive\">Ngừng hoạt động</MenuItem>\r\n          </TextField>\r\n        </Box>\r\n      </Box>\r\n      <Box sx={{ \r\n        display: 'flex', \r\n        justifyContent: 'flex-end',\r\n        gap: 2,\r\n        mt: { xs: 2, md: 0 }\r\n      }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={onUploadClick}\r\n          sx={{\r\n            width: { xs: '100%', md: 'auto' },\r\n            maxWidth: '250px'\r\n          }}\r\n        >\r\n          Tải lên Template\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<SmartToyIcon />}\r\n          onClick={onCreateWithAIClick}\r\n          sx={{\r\n            width: { xs: '100%', md: 'auto' },\r\n            maxWidth: '250px'\r\n          }}\r\n        >\r\n          Tạo hợp đồng bằng AI\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TemplateFilters;\r\n","import React from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  Tooltip,\r\n  Chip,\r\n  Box,\r\n  Typography,\r\n  TablePagination,\r\n} from '@mui/material';\r\nimport {\r\n  Visibility as ViewIcon,\r\n  Edit as EditIcon,\r\n  Star as StarIcon,\r\n  StarBorder as StarBorderIcon,\r\n  Delete as DeleteIcon,\r\n} from '@mui/icons-material';\r\nimport { Template } from './types';\r\n\r\ninterface TemplateTableProps {\r\n  templates: Template[];\r\n  page: number;\r\n  rowsPerPage: number;\r\n  totalRows: number;\r\n  onPageChange: (page: number) => void;\r\n  onRowsPerPageChange: (rowsPerPage: number) => void;\r\n  onView: (id: string) => void;\r\n  onEdit: (id: string) => void;\r\n  onSetDefault: (id: string) => void;\r\n  onDelete: (id: string) => void;\r\n}\r\n\r\nconst TemplateTable: React.FC<TemplateTableProps> = ({\r\n  templates,\r\n  page,\r\n  rowsPerPage,\r\n  totalRows,\r\n  onPageChange,\r\n  onRowsPerPageChange,\r\n  onView,\r\n  onEdit,\r\n  onSetDefault,\r\n  onDelete,\r\n}) => {\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    onPageChange(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    onRowsPerPageChange(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Tên template</TableCell>\r\n              <TableCell align=\"center\">Loại</TableCell>\r\n              <TableCell align=\"center\">Trạng thái</TableCell>\r\n              <TableCell align=\"center\">Số trường</TableCell>\r\n              <TableCell align=\"center\">Ngày tạo</TableCell>\r\n              <TableCell align=\"center\">Người tạo</TableCell>\r\n              <TableCell align=\"center\">Thao tác</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {templates.length > 0 ? (\r\n              templates.map((template) => (\r\n                <TableRow key={template.id} hover>\r\n                  <TableCell>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      {template.isDefault && (\r\n                        <StarIcon\r\n                          color=\"primary\"\r\n                          sx={{ fontSize: '1rem', mr: 1 }}\r\n                        />\r\n                      )}\r\n                      <Typography variant=\"body2\">{template.name}</Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Chip\r\n                      label={template.type === 'internal' ? 'Nội bộ' : 'Khách hàng'}\r\n                      color={template.type === 'internal' ? 'primary' : 'default'}\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Chip\r\n                      label={template.status === 'active' ? 'Hoạt động' : 'Ngừng'}\r\n                      color={template.status === 'active' ? 'success' : 'default'}\r\n                      size=\"small\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{template.placeholderCount}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {new Date(template.createdAt).toLocaleDateString()}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{template.createdBy}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                      <Tooltip title=\"Xem chi tiết\">\r\n                        <IconButton size=\"small\" onClick={() => onView(template.id)}>\r\n                          <ViewIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Chỉnh sửa\">\r\n                        <IconButton size=\"small\" onClick={() => onEdit(template.id)}>\r\n                          <EditIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title={template.isDefault ? 'Mặc định' : 'Đặt làm mặc định'}>\r\n                        <span>\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            onClick={() => onSetDefault(template.id)}\r\n                            disabled={template.isDefault}\r\n                            color={template.isDefault ? 'primary' : 'default'}\r\n                          >\r\n                            {template.isDefault ? (\r\n                              <StarIcon fontSize=\"small\" />\r\n                            ) : (\r\n                              <StarBorderIcon fontSize=\"small\" />\r\n                            )}\r\n                          </IconButton>\r\n                        </span>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Xóa\">\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          onClick={() => onDelete(template.id)}\r\n                          color=\"error\"\r\n                        >\r\n                          <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan={7} align=\"center\" sx={{ py: 4 }}>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    Không có dữ liệu\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={totalRows}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n        labelRowsPerPage=\"Số dòng mỗi trang:\"\r\n        labelDisplayedRows={({ from, to, count }) =>\r\n          `${from}-${to} trong ${count}`\r\n        }\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TemplateTable;\r\n","import React, { useState } from 'react';\r\nimport { \r\n  Box, \r\n  TextField, \r\n  Button, \r\n  CircularProgress, \r\n  Typography, \r\n  Paper,\r\n  Chip,\r\n  Divider\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\ninterface AIPromptInputProps {\r\n  onSubmit: (prompt: string) => void;\r\n  loading: boolean;\r\n  chatHistory: Array<{ role: 'user' | 'assistant', content: string }>;\r\n}\r\n\r\n// Sample prompt suggestions\r\nconst PROMPT_SUGGESTIONS = [\r\n  'Dịch vụ phần mềm',\r\n  'Hợp đồng thương mại',\r\n  'Bảo trì phần mềm',\r\n  'Hợp đồng NDA',\r\n  'Hợp đồng đại lý'\r\n];\r\n\r\nconst AIPromptInput: React.FC<AIPromptInputProps> = ({ \r\n  onSubmit, \r\n  loading, \r\n  chatHistory \r\n}) => {\r\n  const [prompt, setPrompt] = useState<string>('');\r\n  \r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (prompt.trim() && !loading) {\r\n      onSubmit(prompt.trim());\r\n      setPrompt('');\r\n    }\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion: string) => {\r\n    const newPrompt = `Tạo hợp đồng ${suggestion}`;\r\n    setPrompt(newPrompt);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      flexDirection: 'column', \r\n      height: '100%',\r\n      p: 0\r\n    }}>\r\n      {/* Chat History */}\r\n      <Box sx={{ \r\n        flexGrow: 1, \r\n        overflowY: 'auto',\r\n        p: 2,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: 2\r\n      }}>\r\n        {chatHistory.length === 0 ? (\r\n          <Box sx={{ \r\n            display: 'flex', \r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: '100%',\r\n            color: 'text.secondary',\r\n            textAlign: 'center',\r\n            p: 3\r\n          }}>\r\n            <SmartToyIcon sx={{ fontSize: 60, mb: 2, opacity: 0.7 }} />\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Tạo hợp đồng bằng AI\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{ maxWidth: '80%', mx: 'auto' }}>\r\n              Nhập yêu cầu của bạn dưới dạng văn bản tự nhiên để AI tạo hợp đồng phù hợp với nhu cầu của bạn.\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mt: 2, fontStyle: 'italic' }}>\r\n              Ví dụ: \"Tạo hợp đồng phát triển phần mềm giữa ITV và Công ty ABC, giá trị 500 triệu, thời gian 6 tháng, thanh toán từng giai đoạn...\"\r\n            </Typography>\r\n          </Box>\r\n        ) : (\r\n          chatHistory.map((message, index) => (\r\n            <Paper\r\n              key={index}\r\n              elevation={0}\r\n              sx={{\r\n                p: 2,\r\n                backgroundColor: message.role === 'assistant' ? 'rgba(0, 0, 0, 0.04)' : 'transparent',\r\n                borderRadius: 2,\r\n                maxWidth: '90%',\r\n                alignSelf: message.role === 'assistant' ? 'flex-start' : 'flex-end',\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex', alignItems: 'flex-start', gap: 1 }}>\r\n                <Box sx={{ \r\n                  display: 'flex', \r\n                  alignItems: 'center', \r\n                  justifyContent: 'center',\r\n                  backgroundColor: message.role === 'assistant' ? 'primary.main' : 'secondary.main',\r\n                  borderRadius: '50%',\r\n                  width: 32,\r\n                  height: 32,\r\n                  color: 'white'\r\n                }}>\r\n                  {message.role === 'assistant' ? <SmartToyIcon fontSize=\"small\" /> : <PersonIcon fontSize=\"small\" />}\r\n                </Box>\r\n                <Typography variant=\"body1\">\r\n                  {message.content}\r\n                </Typography>\r\n              </Box>\r\n            </Paper>\r\n          ))\r\n        )}\r\n      </Box>\r\n\r\n      {/* Prompt Suggestions */}\r\n      {chatHistory.length === 0 && (\r\n        <Box sx={{ px: 2, py: 1 }}>\r\n          <Typography variant=\"subtitle2\" gutterBottom>\r\n            Gợi ý:\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n            {PROMPT_SUGGESTIONS.map((suggestion, index) => (\r\n              <Chip\r\n                key={index}\r\n                label={suggestion}\r\n                onClick={() => handleSuggestionClick(suggestion)}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                clickable\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      <Divider />\r\n\r\n      {/* Input Area */}\r\n      <Box \r\n        component=\"form\" \r\n        onSubmit={handleSubmit}\r\n        sx={{ \r\n          p: 2, \r\n          display: 'flex',\r\n          alignItems: 'flex-end',\r\n          gap: 1\r\n        }}\r\n      >\r\n        <TextField\r\n          multiline\r\n          maxRows={4}\r\n          placeholder=\"Nhập yêu cầu tạo hợp đồng...\"\r\n          value={prompt}\r\n          onChange={(e) => setPrompt(e.target.value)}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          disabled={loading}\r\n          sx={{ \r\n            '& .MuiOutlinedInput-root': {\r\n              borderRadius: 2\r\n            }\r\n          }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          endIcon={loading ? <CircularProgress size={20} color=\"inherit\" /> : <SendIcon />}\r\n          disabled={!prompt.trim() || loading}\r\n          type=\"submit\"\r\n          sx={{ \r\n            height: 56,\r\n            borderRadius: 2,\r\n            px: 3\r\n          }}\r\n        >\r\n          {loading ? 'Đang xử lý...' : 'Sinh hợp đồng'}\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AIPromptInput;\r\n","import React from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Paper, \r\n  Skeleton, \r\n  Button,\r\n  Divider\r\n} from '@mui/material';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\ninterface ContractPreviewProps {\r\n  content: string;\r\n  onUpdate: (newContent: string) => void;\r\n  loading: boolean;\r\n  onSaveTemplate?: (content: string) => void;\r\n}\r\n\r\nconst ContractPreview: React.FC<ContractPreviewProps> = ({ \r\n  content, \r\n  onUpdate,\r\n  loading,\r\n  onSaveTemplate\r\n}) => {\r\n  // Function to handle content changes\r\n  const handleContentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    onUpdate(e.target.value);\r\n  };\r\n\r\n  // Function to handle save template\r\n  const handleSaveTemplate = () => {\r\n    if (onSaveTemplate && content) {\r\n      onSaveTemplate(content);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      height: '100%', \r\n      display: 'flex', \r\n      flexDirection: 'column',\r\n      p: 0\r\n    }}>\r\n      {/* Header */}\r\n      <Box sx={{ \r\n        p: 2, \r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n      }}>\r\n        <Typography variant=\"h6\">\r\n          Xem trước hợp đồng\r\n        </Typography>\r\n        \r\n        <Box sx={{ display: 'flex', gap: 1 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            startIcon={<EditIcon />}\r\n            disabled={!content || loading}\r\n          >\r\n            Chỉnh sửa\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            startIcon={<DownloadIcon />}\r\n            disabled={!content || loading}\r\n          >\r\n            Tải xuống\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            startIcon={<SaveIcon />}\r\n            disabled={!content || loading}\r\n            onClick={handleSaveTemplate}\r\n          >\r\n            Lưu thành Template\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      \r\n      {/* Content Area */}\r\n      <Box sx={{ \r\n        flexGrow: 1, \r\n        overflowY: 'auto',\r\n        p: 2\r\n      }}>\r\n        {loading ? (\r\n          // Loading skeleton\r\n          <Box>\r\n            <Skeleton variant=\"text\" height={40} width=\"60%\" />\r\n            <Skeleton variant=\"text\" height={20} />\r\n            <Skeleton variant=\"text\" height={20} />\r\n            <Skeleton variant=\"text\" height={20} width=\"80%\" />\r\n            <Box sx={{ my: 2 }}>\r\n              <Divider />\r\n            </Box>\r\n            <Skeleton variant=\"text\" height={30} width=\"40%\" />\r\n            <Skeleton variant=\"text\" height={20} />\r\n            <Skeleton variant=\"text\" height={20} />\r\n            <Skeleton variant=\"text\" height={20} width=\"90%\" />\r\n            <Box sx={{ my: 2 }}>\r\n              <Divider />\r\n            </Box>\r\n            <Skeleton variant=\"text\" height={30} width=\"40%\" />\r\n            <Skeleton variant=\"text\" height={20} />\r\n            <Skeleton variant=\"text\" height={20} />\r\n          </Box>\r\n        ) : content ? (\r\n          // Contract content editor\r\n          <Paper \r\n            elevation={0} \r\n            sx={{ \r\n              height: '100%', \r\n              p: 2,\r\n              backgroundColor: 'rgba(0, 0, 0, 0.02)',\r\n              borderRadius: 2\r\n            }}\r\n          >\r\n            <textarea\r\n              value={content}\r\n              onChange={handleContentChange}\r\n              style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                padding: '16px',\r\n                border: '1px solid rgba(0, 0, 0, 0.12)',\r\n                borderRadius: '8px',\r\n                resize: 'none',\r\n                fontFamily: 'inherit',\r\n                fontSize: '14px',\r\n                lineHeight: '1.5',\r\n                backgroundColor: 'white'\r\n              }}\r\n            />\r\n          </Paper>\r\n        ) : (\r\n          // Empty state\r\n          <Box sx={{ \r\n            display: 'flex', \r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: '100%',\r\n            color: 'text.secondary',\r\n            textAlign: 'center',\r\n            p: 3\r\n          }}>\r\n            <EditIcon sx={{ fontSize: 60, mb: 2, opacity: 0.7 }} />\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Chưa có nội dung hợp đồng\r\n            </Typography>\r\n            <Typography variant=\"body1\">\r\n              Nhập yêu cầu của bạn ở bên trái và nhấn \"Sinh hợp đồng\" để AI tạo nội dung hợp đồng.\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContractPreview;\r\n","/**\r\n * Mock data and functions to simulate AI contract generation\r\n */\r\n\r\n/**\r\n * Generate a mock contract based on the provided prompt\r\n * @param prompt User's input prompt\r\n * @returns Generated contract content\r\n */\r\nexport const mockGenerateContract = (prompt: string): string => {\r\n  // Extract key information from prompt (in a real implementation, this would be done by AI)\r\n  const companyNames = extractCompanyNames(prompt);\r\n  const contractType = extractContractType(prompt);\r\n  const contractValue = extractContractValue(prompt);\r\n  const contractDuration = extractContractDuration(prompt);\r\n  \r\n  // Generate contract based on extracted information\r\n  return `\r\nHỢP ĐỒNG ${contractType.toUpperCase()}\r\n\r\nSố: ${Math.floor(Math.random() * 1000)}/2025/HĐDV\r\n\r\nGIỮA\r\n\r\n${companyNames.party1 || 'CÔNG TY CỔ PHẦN ITV'} (Bên A)\r\n\r\nVÀ\r\n\r\n${companyNames.party2 || 'CÔNG TY ABC'} (Bên B)\r\n\r\nHôm nay, ngày ${new Date().getDate()} tháng ${new Date().getMonth() + 1} năm ${new Date().getFullYear()}, tại Thành phố Hồ Chí Minh, chúng tôi gồm:\r\n\r\nBÊN A: ${companyNames.party1 || 'CÔNG TY CỔ PHẦN ITV'}\r\n- Địa chỉ: 123 Đường Nguyễn Văn Linh, Quận 7, TP.HCM\r\n- Điện thoại: 028.1234.5678\r\n- Mã số thuế: 0123456789\r\n- Đại diện: Ông Nguyễn Văn A\r\n- Chức vụ: Giám đốc\r\n\r\nBÊN B: ${companyNames.party2 || 'CÔNG TY ABC'}\r\n- Địa chỉ: 456 Đường Lê Lợi, Quận 1, TP.HCM\r\n- Điện thoại: 028.8765.4321\r\n- Mã số thuế: 9876543210\r\n- Đại diện: Bà Trần Thị B\r\n- Chức vụ: Giám đốc\r\n\r\nSau khi bàn bạc, hai bên thống nhất ký kết Hợp đồng ${contractType} với các điều khoản sau:\r\n\r\nĐIỀU 1: NỘI DUNG HỢP ĐỒNG\r\n\r\n1.1. Bên A đồng ý cung cấp cho Bên B dịch vụ ${contractType} theo các yêu cầu và tiêu chuẩn được quy định trong Phụ lục đính kèm Hợp đồng này.\r\n\r\n1.2. Bên B đồng ý sử dụng dịch vụ và thanh toán cho Bên A theo quy định tại Hợp đồng này.\r\n\r\nĐIỀU 2: GIÁ TRỊ HỢP ĐỒNG VÀ PHƯƠNG THỨC THANH TOÁN\r\n\r\n2.1. Tổng giá trị hợp đồng: ${contractValue || '500.000.000 VNĐ (Năm trăm triệu đồng)'}.\r\n\r\n2.2. Phương thức thanh toán: Thanh toán theo từng giai đoạn như sau:\r\n   - Đợt 1: 30% giá trị hợp đồng, tương đương ${calculatePercentage(contractValue, 30)} - Thanh toán sau khi ký hợp đồng.\r\n   - Đợt 2: 40% giá trị hợp đồng, tương đương ${calculatePercentage(contractValue, 40)} - Thanh toán sau khi hoàn thành giai đoạn 1.\r\n   - Đợt 3: 30% giá trị hợp đồng, tương đương ${calculatePercentage(contractValue, 30)} - Thanh toán sau khi nghiệm thu và bàn giao.\r\n\r\n2.3. Hình thức thanh toán: Chuyển khoản ngân hàng.\r\n\r\nĐIỀU 3: THỜI GIAN THỰC HIỆN\r\n\r\n3.1. Thời gian thực hiện hợp đồng: ${contractDuration || '6 tháng'} kể từ ngày ký.\r\n\r\n3.2. Lịch trình thực hiện chi tiết được quy định trong Phụ lục đính kèm.\r\n\r\nĐIỀU 4: QUYỀN VÀ NGHĨA VỤ CỦA BÊN A\r\n\r\n4.1. Quyền của Bên A:\r\n   - Yêu cầu Bên B thanh toán đúng hạn theo quy định tại Hợp đồng.\r\n   - Yêu cầu Bên B cung cấp thông tin, tài liệu cần thiết để thực hiện Hợp đồng.\r\n\r\n4.2. Nghĩa vụ của Bên A:\r\n   - Cung cấp dịch vụ đúng tiến độ và chất lượng theo thỏa thuận.\r\n   - Bảo mật thông tin của Bên B trong quá trình thực hiện Hợp đồng.\r\n\r\nĐIỀU 5: QUYỀN VÀ NGHĨA VỤ CỦA BÊN B\r\n\r\n5.1. Quyền của Bên B:\r\n   - Yêu cầu Bên A cung cấp dịch vụ đúng tiến độ và chất lượng.\r\n   - Được cung cấp thông tin về tiến độ thực hiện dự án.\r\n\r\n5.2. Nghĩa vụ của Bên B:\r\n   - Thanh toán đầy đủ và đúng hạn cho Bên A.\r\n   - Cung cấp thông tin, tài liệu cần thiết cho Bên A để thực hiện Hợp đồng.\r\n\r\nĐIỀU 6: ĐIỀU KHOẢN CHUNG\r\n\r\n6.1. Hợp đồng này có hiệu lực kể từ ngày ký và sẽ chấm dứt sau khi hai bên hoàn thành nghĩa vụ.\r\n\r\n6.2. Mọi tranh chấp phát sinh sẽ được giải quyết thông qua thương lượng. Trường hợp không thể thương lượng được, tranh chấp sẽ được đưa ra Tòa án có thẩm quyền để giải quyết.\r\n\r\n6.3. Hợp đồng này được lập thành 04 bản, mỗi bên giữ 02 bản có giá trị pháp lý như nhau.\r\n\r\nĐẠI DIỆN BÊN A                                  ĐẠI DIỆN BÊN B\r\n`;\r\n};\r\n\r\n// Helper functions to extract information from the prompt\r\nconst extractCompanyNames = (prompt: string): { party1: string; party2: string } => {\r\n  const party1 = prompt.includes('ITV') ? 'CÔNG TY CỔ PHẦN ITV' : '';\r\n  \r\n  // Try to extract company name after \"và Công ty\" or \"và\"\r\n  let party2 = '';\r\n  const companyMatch = prompt.match(/(?:và|giữa)(?:\\s+Công\\s+ty)?\\s+([A-Za-z0-9\\s]+)(?:,|\\.|$)/i);\r\n  if (companyMatch && companyMatch[1]) {\r\n    party2 = `CÔNG TY ${companyMatch[1].trim().toUpperCase()}`;\r\n  }\r\n  \r\n  return { party1, party2 };\r\n};\r\n\r\nconst extractContractType = (prompt: string): string => {\r\n  if (prompt.toLowerCase().includes('phát triển phần mềm')) {\r\n    return 'phát triển phần mềm';\r\n  } else if (prompt.toLowerCase().includes('dịch vụ phần mềm')) {\r\n    return 'dịch vụ phần mềm';\r\n  } else if (prompt.toLowerCase().includes('bảo trì')) {\r\n    return 'bảo trì phần mềm';\r\n  } else if (prompt.toLowerCase().includes('thương mại')) {\r\n    return 'thương mại';\r\n  } else if (prompt.toLowerCase().includes('nda') || prompt.toLowerCase().includes('bảo mật')) {\r\n    return 'bảo mật thông tin (NDA)';\r\n  } else {\r\n    return 'dịch vụ';\r\n  }\r\n};\r\n\r\nconst extractContractValue = (prompt: string): string => {\r\n  // Try to extract monetary values (e.g., 500 triệu, 1 tỷ)\r\n  const valueMatch = prompt.match(/(\\d+(?:\\.\\d+)?)\\s*(triệu|tỷ|trieu|ty)/i);\r\n  if (valueMatch) {\r\n    const value = parseFloat(valueMatch[1]);\r\n    const unit = valueMatch[2].toLowerCase();\r\n    \r\n    if (unit === 'tỷ' || unit === 'ty') {\r\n      return `${value.toLocaleString('vi-VN')}.000.000.000 VNĐ (${value} tỷ đồng)`;\r\n    } else {\r\n      return `${value.toLocaleString('vi-VN')}.000.000 VNĐ (${value} triệu đồng)`;\r\n    }\r\n  }\r\n  \r\n  return '500.000.000 VNĐ (Năm trăm triệu đồng)';\r\n};\r\n\r\nconst extractContractDuration = (prompt: string): string => {\r\n  // Try to extract time duration (e.g., 6 tháng, 1 năm)\r\n  const durationMatch = prompt.match(/(\\d+)\\s*(tháng|năm|thang|nam)/i);\r\n  if (durationMatch) {\r\n    const duration = parseInt(durationMatch[1]);\r\n    const unit = durationMatch[2].toLowerCase();\r\n    \r\n    if (unit === 'năm' || unit === 'nam') {\r\n      return `${duration} năm`;\r\n    } else {\r\n      return `${duration} tháng`;\r\n    }\r\n  }\r\n  \r\n  return '6 tháng';\r\n};\r\n\r\nconst calculatePercentage = (value: string, percentage: number): string => {\r\n  // Extract numeric value from contract value string\r\n  const numericMatch = value ? value.match(/(\\d+(?:\\.\\d+)?)/g) : null;\r\n  \r\n  if (numericMatch && numericMatch.length > 0) {\r\n    const numericValue = parseFloat(numericMatch[0].replace(/\\./g, ''));\r\n    const result = (numericValue * percentage / 100).toLocaleString('vi-VN');\r\n    return `${result}.000 VNĐ`;\r\n  }\r\n  \r\n  // Default values if extraction fails\r\n  const defaultValues: Record<number, string> = {\r\n    30: '150.000.000 VNĐ',\r\n    40: '200.000.000 VNĐ',\r\n    50: '250.000.000 VNĐ'\r\n  };\r\n  \r\n  return defaultValues[percentage] || `${percentage}% giá trị hợp đồng`;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogTitle, IconButton, Box, Typography, TextField, Button } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport AIPromptInput from './AIPromptInput';\r\nimport ContractPreview from './ContractPreview';\r\nimport { mockGenerateContract } from './mockData';\r\nimport { Template } from '../TemplateList/types';\r\n\r\ninterface AIContractGenerationProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onSaveTemplate?: (template: Omit<Template, 'id'>) => void;\r\n}\r\n\r\nconst AIContractGeneration: React.FC<AIContractGenerationProps> = ({ \r\n  open, \r\n  onClose,\r\n  onSaveTemplate = () => console.log('Template saved') \r\n}) => {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [contractContent, setContractContent] = useState<string>('');\r\n  const [chatHistory, setChatHistory] = useState<Array<{ role: 'user' | 'assistant', content: string }>>([]);\r\n  const [saveDialogOpen, setSaveDialogOpen] = useState<boolean>(false);\r\n  const [templateName, setTemplateName] = useState<string>('');\r\n  const [savingTemplate, setSavingTemplate] = useState<boolean>(false);\r\n\r\n  const handleGenerateContract = async (prompt: string) => {\r\n    // Add user message to chat history\r\n    setChatHistory(prev => [...prev, { role: 'user', content: prompt }]);\r\n    \r\n    // Set loading state\r\n    setLoading(true);\r\n    \r\n    try {\r\n      // In a real implementation, this would call an API\r\n      // For now, we'll use a mock function with a delay to simulate API call\r\n      setTimeout(() => {\r\n        const generatedContract = mockGenerateContract(prompt);\r\n        \r\n        // Update contract content\r\n        setContractContent(generatedContract);\r\n        \r\n        // Add assistant response to chat history\r\n        setChatHistory(prev => [...prev, { \r\n          role: 'assistant', \r\n          content: 'Tôi đã tạo hợp đồng dựa trên yêu cầu của bạn. Bạn có thể xem và chỉnh sửa ở bên phải.' \r\n        }]);\r\n        \r\n        // End loading state\r\n        setLoading(false);\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.error('Error generating contract:', error);\r\n      setLoading(false);\r\n      \r\n      // Add error message to chat history\r\n      setChatHistory(prev => [...prev, { \r\n        role: 'assistant', \r\n        content: 'Đã xảy ra lỗi khi tạo hợp đồng. Vui lòng thử lại.' \r\n      }]);\r\n    }\r\n  };\r\n\r\n  const handleUpdateContract = (newContent: string) => {\r\n    setContractContent(newContent);\r\n  };\r\n\r\n  // Handle opening the save template dialog\r\n  const handleOpenSaveDialog = (content: string) => {\r\n    if (content) {\r\n      setSaveDialogOpen(true);\r\n      // Extract a default name from the first line of the contract\r\n      const firstLine = content.split('\\n')[0];\r\n      setTemplateName(firstLine || 'Hợp đồng mới');\r\n    }\r\n  };\r\n\r\n  // Handle saving the template\r\n  const handleSaveTemplate = () => {\r\n    if (contractContent && templateName) {\r\n      setSavingTemplate(true);\r\n      \r\n      // Count placeholders in the content\r\n      const placeholderRegex = /\\{\\{([^}]+)\\}\\}/g;\r\n      const placeholders = contractContent.match(placeholderRegex) || [];\r\n      \r\n      // Create new template object\r\n      const newTemplate: Omit<Template, 'id'> = {\r\n        name: templateName,\r\n        type: 'AI',\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n        createdBy: 'Người dùng hiện tại',\r\n        placeholderCount: placeholders.length,\r\n        isDefault: false,\r\n        status: 'active',\r\n        content: contractContent // Note: This field might need to be added to the Template interface\r\n      };\r\n      \r\n      // Call the onSaveTemplate callback\r\n      onSaveTemplate(newTemplate);\r\n      \r\n      // Close dialogs and reset state\r\n      setSavingTemplate(false);\r\n      setSaveDialogOpen(false);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      fullWidth\r\n      maxWidth=\"xl\"\r\n      PaperProps={{\r\n        sx: {\r\n          height: '90vh',\r\n          maxHeight: '90vh',\r\n          m: 2,\r\n          borderRadius: 2\r\n        }\r\n      }}\r\n    >\r\n      <DialogTitle sx={{ \r\n        m: 0, \r\n        p: 2, \r\n        display: 'flex', \r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)'\r\n      }}>\r\n        <Typography variant=\"h6\" component=\"div\">\r\n          Tạo hợp đồng bằng AI\r\n        </Typography>\r\n        <IconButton\r\n          edge=\"end\"\r\n          color=\"inherit\"\r\n          onClick={onClose}\r\n          aria-label=\"close\"\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      \r\n      <DialogContent sx={{ p: 0, display: 'flex', overflow: 'hidden' }}>\r\n        <Box sx={{ \r\n          width: '50%', \r\n          height: '100%',\r\n          borderRight: '1px solid rgba(0, 0, 0, 0.12)',\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }}>\r\n          <AIPromptInput \r\n            onSubmit={handleGenerateContract} \r\n            loading={loading}\r\n            chatHistory={chatHistory}\r\n          />\r\n        </Box>\r\n        \r\n        <Box sx={{ width: '50%', height: '100%' }}>\r\n          <ContractPreview \r\n            content={contractContent} \r\n            onUpdate={handleUpdateContract}\r\n            loading={loading}\r\n            onSaveTemplate={handleOpenSaveDialog}\r\n          />\r\n        </Box>\r\n      </DialogContent>\r\n\r\n      {/* Save Template Dialog */}\r\n      <Dialog \r\n        open={saveDialogOpen} \r\n        onClose={() => setSaveDialogOpen(false)}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Lưu thành Template</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ pt: 1 }}>\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              Đặt tên cho template hợp đồng này để lưu vào hệ thống\r\n            </Typography>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label=\"Tên template\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={templateName}\r\n              onChange={(e) => setTemplateName(e.target.value)}\r\n              sx={{ mb: 3, mt: 2 }}\r\n            />\r\n            <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2, mt: 2 }}>\r\n              <Button \r\n                onClick={() => setSaveDialogOpen(false)}\r\n                disabled={savingTemplate}\r\n              >\r\n                Hủy\r\n              </Button>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                onClick={handleSaveTemplate}\r\n                disabled={!templateName.trim() || savingTemplate}\r\n              >\r\n                {savingTemplate ? 'Đang lưu...' : 'Lưu template'}\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AIContractGeneration;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Paper } from '@mui/material';\r\nimport TemplateFilters from './TemplateFilters';\r\nimport TemplateTable from './TemplateTable';\r\nimport AIContractGeneration from '../AIContractGeneration';\r\nimport { Template, TemplateFilterValues } from './types';\r\n\r\n// Mock data for demonstration\r\nconst mockTemplates: Template[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Hợp đồng dịch vụ phần mềm',\r\n    type: 'internal',\r\n    createdAt: '2025-01-15T00:00:00.000Z',\r\n    updatedAt: '2025-01-15T00:00:00.000Z',\r\n    createdBy: 'Nguyễn Văn A',\r\n    placeholderCount: 8,\r\n    isDefault: true,\r\n    status: 'active',\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Hợp đồng bảo trì',\r\n    type: 'customer',\r\n    createdAt: '2025-02-20T00:00:00.000Z',\r\n    updatedAt: '2025-02-20T00:00:00.000Z',\r\n    createdBy: 'Trần Thị B',\r\n    placeholderCount: 5,\r\n    isDefault: false,\r\n    status: 'active',\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Hợp đồng NDA',\r\n    type: 'internal',\r\n    createdAt: '2025-03-10T00:00:00.000Z',\r\n    updatedAt: '2025-03-10T00:00:00.000Z',\r\n    createdBy: 'Lê Văn C',\r\n    placeholderCount: 6,\r\n    isDefault: false,\r\n    status: 'inactive',\r\n  },\r\n];\r\n\r\ninterface TemplateListProps {\r\n  onUploadClick: () => void;\r\n  templates?: Template[];\r\n  loading?: boolean;\r\n}\r\n\r\nconst TemplateList: React.FC<TemplateListProps> = ({ \r\n  onUploadClick, \r\n  templates: propTemplates = [], \r\n  loading: propLoading = false \r\n}) => {\r\n  const [filters, setFilters] = useState<TemplateFilterValues>({\r\n    search: '',\r\n    type: 'all',\r\n    status: 'all',\r\n  });\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [aiModalOpen, setAIModalOpen] = useState(false);\r\n  const [lastAddedTemplateId, setLastAddedTemplateId] = useState<string | null>(null);\r\n  \r\n  // Sử dụng templates và loading từ props nếu được cung cấp, ngược lại sử dụng mockTemplates\r\n  const templates = propTemplates.length > 0 ? propTemplates : mockTemplates;\r\n  const loading = propLoading;\r\n\r\n  // Lọc và phân trang templates\r\n  const [filteredTemplates, setFilteredTemplates] = useState<Template[]>([]);\r\n  const [totalRows, setTotalRows] = useState<number>(0);\r\n  \r\n  // Xử lý lọc và phân trang templates\r\n  useEffect(() => {\r\n    const filterAndPaginateTemplates = async () => {\r\n      try {\r\n        // Lọc templates dựa trên filters\r\n        let filtered = [...templates];\r\n        \r\n        if (filters.search) {\r\n          const searchLower = filters.search.toLowerCase();\r\n          filtered = filtered.filter(template => \r\n            template.name.toLowerCase().includes(searchLower)\r\n          );\r\n        }\r\n        \r\n        if (filters.type !== 'all') {\r\n          filtered = filtered.filter(\r\n            template => template.type === filters.type\r\n          );\r\n        }\r\n        \r\n        if (filters.status !== 'all') {\r\n          filtered = filtered.filter(\r\n            template => template.status === filters.status\r\n          );\r\n        }\r\n        \r\n        setTotalRows(filtered.length);\r\n        \r\n        // Áp dụng phân trang\r\n        const startIndex = page * rowsPerPage;\r\n        const paginated = filtered.slice(\r\n          startIndex,\r\n          startIndex + rowsPerPage\r\n        );\r\n        \r\n        setFilteredTemplates(paginated);\r\n      } catch (error) {\r\n        console.error('Error filtering templates:', error);\r\n      }\r\n    };\r\n\r\n    filterAndPaginateTemplates();\r\n  }, [filters, page, rowsPerPage, templates]);\r\n\r\n  const handleFilterChange = (newFilters: TemplateFilterValues) => {\r\n    setFilters(newFilters);\r\n    setPage(0); // Reset to first page when filters change\r\n  };\r\n\r\n  const handlePageChange = (newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleRowsPerPageChange = (newRowsPerPage: number) => {\r\n    setRowsPerPage(newRowsPerPage);\r\n    setPage(0); // Reset to first page when rows per page changes\r\n  };\r\n\r\n  const handleViewTemplate = (id: string) => {\r\n    // TODO: Implement view template\r\n    console.log('View template:', id);\r\n  };\r\n\r\n  const handleEditTemplate = (id: string) => {\r\n    // TODO: Implement edit template\r\n    console.log('Edit template:', id);\r\n  };\r\n\r\n  const handleSetDefault = (id: string) => {\r\n    // TODO: Implement set default template\r\n    console.log('Set default template:', id);\r\n    \r\n    // Trong trường hợp thực tế, đây sẽ là API call\r\n    // Vì chúng ta đang sử dụng props templates, nên không thể cập nhật trực tiếp\r\n    // Các thay đổi sẽ được xử lý ở component cha\r\n  };\r\n\r\n  const handleDeleteTemplate = (id: string) => {\r\n    // TODO: Implement delete template\r\n    if (window.confirm('Bạn có chắc chắn muốn xóa template này?')) {\r\n      console.log('Delete template:', id);\r\n      \r\n      // Trong trường hợp thực tế, đây sẽ là API call\r\n      // Vì chúng ta đang sử dụng props templates, nên không thể cập nhật trực tiếp\r\n      setTotalRows(prev => prev - 1);\r\n    }\r\n  };\r\n\r\n  // Handle saving AI-generated template\r\n  const handleSaveAITemplate = (templateData: Omit<Template, 'id'>) => {\r\n    try {\r\n      // In a real implementation, this would be an API call\r\n      // For now, we'll simulate adding to the templates array\r\n      const newId = `ai-${Date.now()}`;\r\n      const newTemplate: Template = {\r\n        ...templateData,\r\n        id: newId\r\n      };\r\n\r\n      // Add to templates array\r\n      const updatedTemplates = [newTemplate, ...templates];\r\n      \r\n      // Update the templates state (in a real app, this would be handled by the parent component)\r\n      // For our mock implementation, we'll update the local state\r\n      setFilteredTemplates(prev => [newTemplate, ...prev]);\r\n      setTotalRows(prev => prev + 1);\r\n      setLastAddedTemplateId(newId);\r\n      \r\n      // Show success message\r\n      alert('Template đã được lưu thành công!');\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error saving AI template:', error);\r\n      alert('Có lỗi xảy ra khi lưu template!');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box mb={3}>\r\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n          Danh sách Template Hợp đồng\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          Quản lý và tạo mới các mẫu hợp đồng\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Paper sx={{ p: 3, mb: 3 }}>\r\n        <TemplateFilters \r\n          filters={filters} \r\n          onFilterChange={handleFilterChange}\r\n          onUploadClick={onUploadClick}\r\n          onCreateWithAIClick={() => setAIModalOpen(true)}\r\n        />\r\n        \r\n        <AIContractGeneration\r\n          open={aiModalOpen}\r\n          onClose={() => setAIModalOpen(false)}\r\n          onSaveTemplate={handleSaveAITemplate}\r\n        />\r\n        \r\n        {loading ? (\r\n          <Box py={4} textAlign=\"center\">\r\n            <Typography>Đang tải dữ liệu...</Typography>\r\n          </Box>\r\n        ) : (\r\n          <TemplateTable\r\n            templates={filteredTemplates}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            totalRows={totalRows}\r\n            onPageChange={handlePageChange}\r\n            onRowsPerPageChange={handleRowsPerPageChange}\r\n            onView={handleViewTemplate}\r\n            onEdit={handleEditTemplate}\r\n            onSetDefault={handleSetDefault}\r\n            onDelete={handleDeleteTemplate}\r\n          />\r\n        )}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TemplateList;\r\n","import React, { useState } from 'react';\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  Typography,\r\n  CircularProgress,\r\n  Paper,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\nimport { Close as CloseIcon, CloudUpload as UploadIcon, Delete as DeleteIcon } from '@mui/icons-material';\r\nimport { UploadTemplateFormValues, UploadTemplateProps } from './types';\r\n\r\n// Define validation schema\r\nconst schema = yup.object({\r\n  name: yup.string().required('Tên template là bắt buộc'),\r\n  description: yup.string().optional(),\r\n  type: yup.string().oneOf(['internal', 'customer']).required('Loại template là bắt buộc'),\r\n  file: yup.mixed<File>().required('File template là bắt buộc')\r\n    .test('fileType', 'Chỉ chấp nhận file .docx', (value) => {\r\n      if (!value) return false;\r\n      const file = value as File;\r\n      return file.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\r\n    }),\r\n  extractedFields: yup.array().of(\r\n    yup.object({\r\n      originalText: yup.string().required(),\r\n      placeholder: yup.string().required(),\r\n      type: yup.string().required(),\r\n      description: yup.string().optional()\r\n    })\r\n  ).default([])\r\n}).required();\r\n\r\ninterface ExtractedField {\r\n  originalText: string;\r\n  placeholder: string;\r\n  type: string;\r\n  description?: string;\r\n}\r\n\r\nconst UploadTemplate: React.FC<UploadTemplateProps> = ({ open, onClose, onSubmit }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [analyzing, setAnalyzing] = useState(false);\r\n  const [extractedFields, setExtractedFields] = useState<ExtractedField[]>([]);\r\n\r\n  type FormData = yup.InferType<typeof schema>;\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm<FormData>({\r\n    resolver: yupResolver(schema) as any,\r\n    defaultValues: {\r\n      name: '',\r\n      description: '',\r\n      type: 'customer' as const,\r\n      file: undefined,\r\n      extractedFields: [],\r\n    },\r\n  });\r\n\r\n  const selectedFile = watch('file');\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      setValue('file', file);\r\n      setAnalyzing(true);\r\n      \r\n      // Giả lập phân tích AI\r\n      setTimeout(() => {\r\n        // Mock dữ liệu được phân tích từ file\r\n        const mockExtractedFields: ExtractedField[] = [\r\n          {\r\n            originalText: 'CÔNG TY TNHH GIẤY CAO PHÁT',\r\n            placeholder: 'TEN_CONG_TY_A',\r\n            type: 'text',\r\n            description: 'Tên công ty bên A'\r\n          },\r\n          {\r\n            originalText: 'Thửa đất số 352, Tờ bản đồ số 14, Khu Phố Mỹ Hiệp, Phường Thái Hoà, Thành phố Tân Uyên, Tỉnh Bình Dương',\r\n            placeholder: 'DIA_CHI_A',\r\n            type: 'text',\r\n            description: 'Địa chỉ bên A'\r\n          },\r\n          {\r\n            originalText: '0274 3775 179',\r\n            placeholder: 'DIEN_THOAI_A',\r\n            type: 'phone',\r\n            description: 'Số điện thoại bên A'\r\n          },\r\n          {\r\n            originalText: '3701711279',\r\n            placeholder: 'MA_SO_THUE_A',\r\n            type: 'taxcode',\r\n            description: 'Mã số thuế bên A'\r\n          },\r\n          {\r\n            originalText: 'LÊ THỊ KIM CHI',\r\n            placeholder: 'NGUOI_DAI_DIEN_A',\r\n            type: 'text',\r\n            description: 'Người đại diện bên A'\r\n          },\r\n          {\r\n            originalText: 'Giám đốc',\r\n            placeholder: 'CHUC_VU_A',\r\n            type: 'text',\r\n            description: 'Chức vụ người đại diện bên A'\r\n          }\r\n        ];\r\n        \r\n        setExtractedFields(mockExtractedFields);\r\n        setValue('extractedFields', mockExtractedFields);\r\n        setAnalyzing(false);\r\n      }, 2000);\r\n    }\r\n  };\r\n  \r\n  const handleUpdatePlaceholder = (index: number, field: keyof ExtractedField, value: string) => {\r\n    const updatedFields = [...extractedFields];\r\n    updatedFields[index] = { ...updatedFields[index], [field]: value };\r\n    setExtractedFields(updatedFields);\r\n    setValue('extractedFields', updatedFields);\r\n  };\r\n\r\n  const handleFormSubmit: SubmitHandler<FormData> = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n      await onSubmit(data as UploadTemplateFormValues);\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error('Error uploading template:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    reset();\r\n    setExtractedFields([]);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" fullWidth>\r\n      <DialogTitle>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Typography variant=\"h6\">Tải lên Template mới</Typography>\r\n          <IconButton onClick={handleClose} size=\"small\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <form onSubmit={handleSubmit(handleFormSubmit as any)}>\r\n        <DialogContent dividers>\r\n          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 2fr' }, gap: 3 }}>\r\n            <Box>\r\n              <TextField\r\n                {...register('name')}\r\n                label=\"Tên template\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                error={!!errors.name}\r\n                helperText={errors.name?.message}\r\n                disabled={loading}\r\n              />\r\n              \r\n              <TextField\r\n                {...register('description')}\r\n                label=\"Mô tả\"\r\n                fullWidth\r\n                multiline\r\n                rows={3}\r\n                margin=\"normal\"\r\n                disabled={loading}\r\n              />\r\n              \r\n              <FormControl fullWidth margin=\"normal\" error={!!errors.type}>\r\n                <InputLabel>Loại template</InputLabel>\r\n                <Select\r\n                  label=\"Loại template\"\r\n                  defaultValue=\"customer\"\r\n                  disabled={loading}\r\n                  {...register('type')}\r\n                >\r\n                  <MenuItem value=\"customer\">Cho khách hàng</MenuItem>\r\n                  <MenuItem value=\"internal\">Nội bộ</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              \r\n              <Box mt={2} mb={2}>\r\n                <input\r\n                  accept=\".docx,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n                  style={{ display: 'none' }}\r\n                  id=\"template-upload\"\r\n                  type=\"file\"\r\n                  onChange={handleFileChange}\r\n                  disabled={loading || analyzing}\r\n                />\r\n                <label htmlFor=\"template-upload\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<UploadIcon />}\r\n                    disabled={loading || analyzing}\r\n                  >\r\n                    Chọn file template (.docx)\r\n                  </Button>\r\n                </label>\r\n                {selectedFile && (\r\n                  <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                    Đã chọn: {selectedFile.name}\r\n                  </Typography>\r\n                )}\r\n                {errors.file && (\r\n                  <Typography color=\"error\" variant=\"caption\" display=\"block\">\r\n                    {errors.file.message as React.ReactNode}\r\n                  </Typography>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n            \r\n            <Box>\r\n              <Paper variant=\"outlined\" sx={{ p: 2, height: '100%' }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Các trường được phân tích từ hợp đồng:\r\n                </Typography>\r\n                \r\n                {analyzing ? (\r\n                  <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" py={4}>\r\n                    <CircularProgress size={40} />\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mt: 2 }}>\r\n                      Đang phân tích nội dung hợp đồng...\r\n                    </Typography>\r\n                  </Box>\r\n                ) : extractedFields.length > 0 ? (\r\n                  <TableContainer component={Paper} variant=\"outlined\">\r\n                    <Table size=\"small\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Trường gốc trong file</TableCell>\r\n                          <TableCell>Placeholder gợi ý</TableCell>\r\n                          <TableCell>Kiểu dữ liệu</TableCell>\r\n                          <TableCell>Mô tả</TableCell>\r\n                          <TableCell align=\"center\">Thao tác</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {extractedFields.map((field, index) => (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{field.originalText}</TableCell>\r\n                            <TableCell>\r\n                              <TextField\r\n                                size=\"small\"\r\n                                value={field.placeholder}\r\n                                onChange={(e) => handleUpdatePlaceholder(index, 'placeholder', e.target.value)}\r\n                                fullWidth\r\n                                disabled={loading}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <FormControl fullWidth size=\"small\">\r\n                                <Select\r\n                                  value={field.type}\r\n                                  onChange={(e) => handleUpdatePlaceholder(index, 'type', e.target.value)}\r\n                                  disabled={loading}\r\n                                >\r\n                                  <MenuItem value=\"text\">Văn bản</MenuItem>\r\n                                  <MenuItem value=\"number\">Số</MenuItem>\r\n                                  <MenuItem value=\"date\">Ngày tháng</MenuItem>\r\n                                  <MenuItem value=\"phone\">Điện thoại</MenuItem>\r\n                                  <MenuItem value=\"email\">Email</MenuItem>\r\n                                  <MenuItem value=\"taxcode\">Mã số thuế</MenuItem>\r\n                                </Select>\r\n                              </FormControl>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <TextField\r\n                                size=\"small\"\r\n                                value={field.description || ''}\r\n                                onChange={(e) => handleUpdatePlaceholder(index, 'description', e.target.value)}\r\n                                fullWidth\r\n                                disabled={loading}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">\r\n                              <IconButton size=\"small\" color=\"error\" onClick={() => {\r\n                                const updatedFields = [...extractedFields];\r\n                                updatedFields.splice(index, 1);\r\n                                setExtractedFields(updatedFields);\r\n                                setValue('extractedFields', updatedFields);\r\n                              }} disabled={loading}>\r\n                                <DeleteIcon fontSize=\"small\" />\r\n                              </IconButton>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                ) : selectedFile ? (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    Không tìm thấy trường nào có thể trích xuất từ file. Vui lòng kiểm tra lại nội dung file.\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    Vui lòng tải lên file hợp đồng để AI phân tích và đề xuất các trường dữ liệu.\r\n                  </Typography>\r\n                )}\r\n                \r\n                <Box mt={3}>\r\n                  <Typography variant=\"subtitle2\" gutterBottom>\r\n                    Hướng dẫn sử dụng:\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    - AI sẽ tự động phân tích nội dung hợp đồng và đề xuất các trường cần điền\r\n                    <br />\r\n                    - Bạn có thể chỉnh sửa tên placeholder và mô tả cho phù hợp\r\n                    <br />\r\n                    - Khi tạo hợp đồng, hệ thống sẽ tự động điền các thông tin vào các vị trí tương ứng\r\n                  </Typography>\r\n                </Box>\r\n              </Paper>\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        \r\n        <DialogActions sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\r\n          <Button onClick={handleClose} disabled={loading}>\r\n            Hủy\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={loading || analyzing || extractedFields.length === 0}\r\n            startIcon={loading ? <CircularProgress size={20} /> : null}\r\n          >\r\n            {loading ? 'Đang tải lên...' : 'Lưu Template'}\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadTemplate;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputAdornment\r\n} from '@mui/material';\r\nimport { Add as AddIcon, Delete as DeleteIcon, ArrowBack as ArrowBackIcon } from '@mui/icons-material';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { vi } from 'date-fns/locale';\r\n\r\n// Định nghĩa kiểu dữ liệu cho đợt thanh toán\r\nexport interface PaymentItem {\r\n  id: string;\r\n  condition: string;\r\n  amount: number;\r\n  paymentDate: Date | null;\r\n  status: 'pending' | 'waiting' | 'paid';\r\n  note: string;\r\n}\r\n\r\ninterface PaymentScheduleStepProps {\r\n  payments: PaymentItem[];\r\n  onPaymentsChange: (payments: PaymentItem[]) => void;\r\n  onBack: () => void;\r\n  onNext: () => void;\r\n}\r\n\r\nconst PaymentScheduleStep: React.FC<PaymentScheduleStepProps> = ({\r\n  payments,\r\n  onPaymentsChange,\r\n  onBack,\r\n  onNext\r\n}) => {\r\n  // Định nghĩa các trạng thái thanh toán\r\n  const paymentStatuses = [\r\n    { value: 'pending', label: 'Chưa thanh toán' },\r\n    { value: 'waiting', label: 'Chờ thanh toán' },\r\n    { value: 'paid', label: 'Đã thanh toán' }\r\n  ];\r\n\r\n  // Hàm thêm đợt thanh toán mới\r\n  const handleAddPayment = () => {\r\n    const newPayment: PaymentItem = {\r\n      id: `payment-${Date.now()}`,\r\n      condition: '',\r\n      amount: 0,\r\n      paymentDate: new Date(),\r\n      status: 'pending',\r\n      note: ''\r\n    };\r\n    onPaymentsChange([...payments, newPayment]);\r\n  };\r\n\r\n  // Hàm xóa đợt thanh toán\r\n  const handleDeletePayment = (id: string) => {\r\n    onPaymentsChange(payments.filter(payment => payment.id !== id));\r\n  };\r\n\r\n  // Hàm cập nhật thông tin đợt thanh toán\r\n  const handlePaymentChange = (id: string, field: keyof PaymentItem, value: any) => {\r\n    onPaymentsChange(\r\n      payments.map(payment => \r\n        payment.id === id ? { ...payment, [field]: value } : payment\r\n      )\r\n    );\r\n  };\r\n\r\n  // Không cần hàm formatCurrency vì đã xử lý trực tiếp trong TextField\r\n\r\n  // Hàm xử lý khi người dùng nhập số tiền\r\n  const handleAmountChange = (id: string, value: string) => {\r\n    // Loại bỏ tất cả các ký tự không phải số\r\n    const numericValue = value.replace(/[^0-9]/g, '');\r\n    const amount = numericValue ? parseInt(numericValue, 10) : 0;\r\n    handlePaymentChange(id, 'amount', amount);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n        <IconButton onClick={onBack} sx={{ mr: 1 }}>\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\">\r\n          Hạng mục thanh toán\r\n        </Typography>\r\n      </Box>\r\n      \r\n      <Paper variant=\"outlined\" sx={{ p: 2, mb: 3 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n          Thêm các đợt thanh toán cho hợp đồng. Mỗi đợt thanh toán bao gồm điều kiện, số tiền, ngày thanh toán, trạng thái và ghi chú.\r\n        </Typography>\r\n        \r\n        <TableContainer>\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Điều kiện</TableCell>\r\n                <TableCell>Số tiền</TableCell>\r\n                <TableCell>Ngày thanh toán</TableCell>\r\n                <TableCell>Trạng thái</TableCell>\r\n                <TableCell>Ghi chú</TableCell>\r\n                <TableCell>Xóa</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {payments.length === 0 ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align=\"center\">\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Chưa có đợt thanh toán nào. Nhấn \"Thêm đợt thanh toán\" để bắt đầu.\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                payments.map((payment) => (\r\n                  <TableRow key={payment.id}>\r\n                    <TableCell>\r\n                      <TextField\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        value={payment.condition}\r\n                        onChange={(e) => handlePaymentChange(payment.id, 'condition', e.target.value)}\r\n                        placeholder=\"Ví dụ: Sau khi ký HĐ\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <TextField\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        value={payment.amount === 0 ? '' : payment.amount.toString()}\r\n                        onChange={(e) => handleAmountChange(payment.id, e.target.value)}\r\n                        placeholder=\"0\"\r\n                        InputProps={{\r\n                          endAdornment: <InputAdornment position=\"end\">VNĐ</InputAdornment>,\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <LocalizationProvider dateAdapter={AdapterDateFns} adapterLocale={vi}>\r\n                        <DatePicker\r\n                          value={payment.paymentDate}\r\n                          onChange={(date) => handlePaymentChange(payment.id, 'paymentDate', date)}\r\n                          slotProps={{ textField: { size: 'small', fullWidth: true } }}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <FormControl fullWidth size=\"small\">\r\n                        <Select\r\n                          value={payment.status}\r\n                          onChange={(e) => handlePaymentChange(payment.id, 'status', e.target.value)}\r\n                        >\r\n                          {paymentStatuses.map((status) => (\r\n                            <MenuItem key={status.value} value={status.value}>\r\n                              {status.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <TextField\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        value={payment.note}\r\n                        onChange={(e) => handlePaymentChange(payment.id, 'note', e.target.value)}\r\n                        placeholder=\"Ghi chú\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <IconButton \r\n                        color=\"error\" \r\n                        onClick={() => handleDeletePayment(payment.id)}\r\n                        size=\"small\"\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        \r\n        <Box sx={{ mt: 2 }}>\r\n          <Button\r\n            startIcon={<AddIcon />}\r\n            variant=\"outlined\"\r\n            onClick={handleAddPayment}\r\n          >\r\n            Thêm đợt thanh toán\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n      \r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <Button \r\n          variant=\"outlined\" \r\n          onClick={onBack}\r\n        >\r\n          Quay lại\r\n        </Button>\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\"\r\n          onClick={onNext}\r\n        >\r\n          Tiếp tục\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PaymentScheduleStep;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Button, \r\n  Stepper, \r\n  Step, \r\n  StepLabel,\r\n  Paper,\r\n  TextField,\r\n  IconButton,\r\n  Chip\r\n} from '@mui/material';\r\nimport { \r\n  Description as TemplateIcon,\r\n  ArrowBack as ArrowBackIcon\r\n} from '@mui/icons-material';\r\nimport PdfPageEditor from '../../../../components/PdfPageEditor';\r\nimport { Template } from '../TemplateList/types';\r\nimport { ExtractedField } from '../UploadTemplate/types';\r\nimport { toast } from 'react-toastify';\r\nimport PaymentScheduleStep, { PaymentItem } from '../PaymentScheduleStep';\r\n\r\n// Mở rộng interface Template để thêm trường extractedFields\r\ninterface ExtendedTemplate extends Template {\r\n  extractedFields?: ExtractedField[];\r\n}\r\n\r\ninterface CreateContractProps {\r\n  templates: ExtendedTemplate[];\r\n  onBack: () => void;\r\n  onCreate: (contract: any) => void;\r\n}\r\n\r\nconst CreateContract: React.FC<CreateContractProps> = ({ \r\n  templates, \r\n  onBack,\r\n  onCreate \r\n}) => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [selectedTemplate, setSelectedTemplate] = useState<ExtendedTemplate | null>(null);\r\n  // Sử dụng formData để lưu các giá trị nhập vào form\r\n  const [formData, setFormData] = useState<Record<string, string>>({});\r\n  // Lưu nội dung hợp đồng để hiển thị trong PdfPageEditor\r\n  const [contractContent, setContractContent] = useState<string[]>(['']);\r\n  // Lưu các đợt thanh toán\r\n  const [payments, setPayments] = useState<PaymentItem[]>([]);\r\n  \r\n  // Hàm tạo nội dung HTML cho hợp đồng từ formData\r\n  const generateContractHTML = React.useCallback(() => {\r\n    // Tạo số hợp đồng\r\n    const contractNumber = `HD${new Date().getFullYear()}${(new Date().getMonth() + 1).toString().padStart(2, '0')}${new Date().getDate().toString().padStart(2, '0')}001`;\r\n    \r\n    // Định dạng số tiền\r\n    const formatCurrency = (amount: number) => {\r\n      return new Intl.NumberFormat('vi-VN').format(amount);\r\n    };\r\n    \r\n    // Tạo HTML cho bảng thanh toán\r\n    const paymentScheduleHTML = payments.length > 0 ? `\r\n      <h3 style=\"font-weight: bold; margin-top: 30px; margin-bottom: 20px;\">ĐIỀU 2: LỊCH THANH TOÁN</h3>\r\n      <table style=\"width: 100%; border-collapse: collapse; margin-bottom: 20px;\">\r\n        <thead>\r\n          <tr style=\"background-color: #f2f2f2;\">\r\n            <th style=\"border: 1px solid #ddd; padding: 8px; text-align: left;\">STT</th>\r\n            <th style=\"border: 1px solid #ddd; padding: 8px; text-align: left;\">Điều kiện</th>\r\n            <th style=\"border: 1px solid #ddd; padding: 8px; text-align: left;\">Số tiền</th>\r\n            <th style=\"border: 1px solid #ddd; padding: 8px; text-align: left;\">Ngày thanh toán</th>\r\n            <th style=\"border: 1px solid #ddd; padding: 8px; text-align: left;\">Ghi chú</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          ${payments.map((payment, index) => `\r\n            <tr>\r\n              <td style=\"border: 1px solid #ddd; padding: 8px;\">${index + 1}</td>\r\n              <td style=\"border: 1px solid #ddd; padding: 8px;\">${payment.condition}</td>\r\n              <td style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\">${formatCurrency(payment.amount)} VNĐ</td>\r\n              <td style=\"border: 1px solid #ddd; padding: 8px;\">${payment.paymentDate ? new Date(payment.paymentDate).toLocaleDateString('vi-VN') : ''}</td>\r\n              <td style=\"border: 1px solid #ddd; padding: 8px;\">${payment.note}</td>\r\n            </tr>\r\n          `).join('')}\r\n          <tr style=\"font-weight: bold; background-color: #f9f9f9;\">\r\n            <td style=\"border: 1px solid #ddd; padding: 8px;\" colspan=\"2\">Tổng cộng</td>\r\n            <td style=\"border: 1px solid #ddd; padding: 8px; text-align: right;\">${formatCurrency(payments.reduce((sum, payment) => sum + payment.amount, 0))} VNĐ</td>\r\n            <td style=\"border: 1px solid #ddd; padding: 8px;\" colspan=\"2\"></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    ` : '';\r\n    \r\n    // Tạo HTML cho hợp đồng\r\n    return `\r\n      <div style=\"text-align: center; margin-bottom: 20px;\">\r\n        <h2 style=\"font-weight: bold; text-transform: uppercase;\">Cộng Hòa Xã Hội Chủ Nghĩa Việt Nam</h2>\r\n        <h3 style=\"font-weight: bold;\">Độc Lập – Tự Do – Hạnh Phúc</h3>\r\n        <p style=\"margin-bottom: 20px;\">__________</p>\r\n        <h1 style=\"font-weight: bold; text-transform: uppercase; margin-bottom: 20px;\">HỢP ĐỒNG NGUYÊN TẮC CUNG CẤP DỊCH VỤ PHẦN MỀM</h1>\r\n        <h2 style=\"font-weight: bold; margin-bottom: 30px;\">Số: ${contractNumber}</h2>\r\n      </div>\r\n\r\n      <p>\r\n        Căn cứ vào Luật Thương Mại của Quốc hội nước Cộng Hòa Xã Hội Chủ Nghĩa Việt Nam được ban hành ngày 14/06/2005, có hiệu lực từ ngày 01/01/2006.\r\n      </p>\r\n      \r\n      ${Object.entries(formData).map(([field, value]) => `<p>Căn cứ vào ${field}: <strong>${value}</strong></p>`).join('\\n')}\r\n\r\n      <h3 style=\"font-weight: bold; margin-top: 30px; margin-bottom: 20px;\">ĐIỀU 1: NỘI DUNG HỢP ĐỒNG</h3>\r\n      <p>\r\n        Bên A ủy thác cho bên B công việc xây dựng và phát triển phần mềm và cung cấp các dịch vụ liên quan đến phần mềm của bên A.\r\n      </p>\r\n      <p>\r\n        Bên B sẽ chịu trách nhiệm xây dựng phần mềm đúng như thỏa thuận của cả Bên A và Bên B.\r\n      </p>\r\n      <p>\r\n        Về chi tiết nội dung công việc và chi phí thực hiện sẽ được trình bày trong từng Phụ lục cụ thể.\r\n      </p>\r\n      \r\n      ${paymentScheduleHTML}\r\n    `;\r\n  }, [formData, payments]);\r\n  \r\n  // Cập nhật nội dung hợp đồng khi formData thay đổi\r\n  useEffect(() => {\r\n    // Chỉ cập nhật khi đã điền ít nhất một trường và đã đến bước xem trước\r\n    if (activeStep === 3 && Object.keys(formData).length > 0 && Object.values(formData).some(value => value)) {\r\n      setContractContent([generateContractHTML()]);\r\n    }\r\n  }, [formData, activeStep, generateContractHTML]);\r\n  \r\n  // Bước 1: Chọn template\r\n  const renderTemplateSelection = () => (\r\n    <Box>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Chọn mẫu hợp đồng\r\n      </Typography>\r\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(280px, 1fr))', gap: 16 }}>\r\n        {templates.map((template) => (\r\n          <div \r\n            key={template.id} \r\n            style={{ \r\n              marginBottom: '16px'\r\n            }}>\r\n          \r\n            <Paper \r\n              elevation={selectedTemplate?.id === template.id ? 4 : 1}\r\n              sx={{ \r\n                p: 2, \r\n                cursor: 'pointer',\r\n                border: selectedTemplate?.id === template.id ? '2px solid #1976d2' : '1px solid #e0e0e0',\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column'\r\n              }}\r\n              onClick={() => setSelectedTemplate(template)}\r\n            >\r\n              <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                <TemplateIcon color=\"primary\" sx={{ mr: 1 }} />\r\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                  {template.name}\r\n                </Typography>\r\n              </Box>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" sx={{ flexGrow: 1 }}>\r\n                {template.name} - {template.type}\r\n              </Typography>\r\n              <Chip \r\n                label={`${template.placeholderCount} trường`} \r\n                size=\"small\" \r\n                sx={{ mt: 1, alignSelf: 'flex-start' }} \r\n              />\r\n            </Paper>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 3 }}>\r\n        <Button \r\n          variant=\"contained\" \r\n          disabled={!selectedTemplate}\r\n          onClick={() => {\r\n            // Khởi tạo formData chỉ với các trường được trích xuất từ template\r\n            const formFields: Record<string, string> = {};\r\n            \r\n            // Thêm các trường từ template nếu có\r\n            if (selectedTemplate?.extractedFields && selectedTemplate.extractedFields.length > 0) {\r\n              selectedTemplate.extractedFields.forEach((field: ExtractedField) => {\r\n                formFields[field.placeholder] = '';\r\n              });\r\n            } else {\r\n              // Nếu không có trường nào được trích xuất, hiển thị thông báo\r\n              alert('Không tìm thấy trường nào trong mẫu hợp đồng. Vui lòng chọn mẫu khác.');\r\n              return;\r\n            }\r\n            \r\n            // Khởi tạo formData với các trường cần điền từ template\r\n            \r\n            // Khởi tạo formData với các trường cần điền\r\n            setFormData(formFields);\r\n            // Chuyển sang bước điền thông tin\r\n            setActiveStep(1);\r\n          }}\r\n        >\r\n          Tiếp tục\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  // Bước 2: Điền thông tin qua form trực tiếp\r\n  const renderContractForm = () => {\r\n    // Kiểm tra xem đã điền đủ thông tin chưa\r\n    const checkFormCompletion = () => {\r\n      const fieldNames = Object.keys(formData);\r\n      const missingFields = fieldNames.filter(field => !formData[field]);\r\n      return missingFields.length === 0;\r\n    };\r\n\r\n    // Xử lý khi người dùng thay đổi giá trị của một trường\r\n    const handleFieldChange = (fieldName: string, value: string) => {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [fieldName]: value\r\n      }));\r\n    };\r\n\r\n    // Xử lý khi người dùng nhấn nút Tiếp tục\r\n    const handleContinue = () => {\r\n      if (checkFormCompletion()) {\r\n        setActiveStep(2); // Chuyển sang bước hạng mục thanh toán\r\n      } else {\r\n        // Hiển thị thông báo nếu chưa điền đủ thông tin\r\n        alert('Vui lòng điền đầy đủ thông tin trước khi tiếp tục.');\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n          <IconButton onClick={() => setActiveStep(0)} sx={{ mr: 1 }}>\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">\r\n            Tạo hợp đồng: {selectedTemplate?.name}\r\n          </Typography>\r\n        </Box>\r\n        \r\n        <Paper \r\n          variant=\"outlined\" \r\n          sx={{ \r\n            p: 3, \r\n            flexGrow: 1, \r\n            mb: 2, \r\n            overflowY: 'auto',\r\n            maxHeight: '600px'\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Thông tin hợp đồng\r\n          </Typography>\r\n          \r\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n            Vui lòng điền đầy đủ các thông tin sau để tạo hợp đồng.\r\n          </Typography>\r\n          \r\n          <Box sx={{ \r\n            display: 'grid', \r\n            gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' },\r\n            gap: 3,\r\n            mt: 2\r\n          }}>\r\n            {Object.keys(formData).map((fieldName) => (\r\n              <TextField\r\n                key={fieldName}\r\n                label={fieldName}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={formData[fieldName]}\r\n                onChange={(e) => handleFieldChange(fieldName, e.target.value)}\r\n                required\r\n                error={!formData[fieldName]}\r\n                helperText={!formData[fieldName] ? 'Trường này là bắt buộc' : ''}\r\n                sx={{ mb: 2 }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Paper>\r\n        \r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <Button \r\n            variant=\"outlined\" \r\n            onClick={() => setActiveStep(0)}\r\n            startIcon={<ArrowBackIcon />}\r\n          >\r\n            Quay lại\r\n          </Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            onClick={handleContinue}\r\n            disabled={!checkFormCompletion()}\r\n          >\r\n            Tiếp tục\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  // Xử lý tạo hợp đồng\r\n  const handleCreateContract = () => {\r\n    if (!selectedTemplate) return;\r\n    \r\n    const newContract = {\r\n      id: `C${Math.floor(1000 + Math.random() * 9000)}`,\r\n      name: `Hợp đồng ${selectedTemplate?.name} - ${new Date().toLocaleDateString()}`,\r\n      templateId: selectedTemplate?.id || '',\r\n      templateName: selectedTemplate?.name || '',\r\n      status: 'draft',\r\n      partyA: 'Công ty TNHH ABC',\r\n      partyB: 'Công ty TNHH XYZ',\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString(),\r\n      createdBy: 'Người dùng hiện tại',\r\n      // Lưu formData và payments vào contract\r\n      contractData: formData,\r\n      payments: payments\r\n    };\r\n    \r\n    // Gọi hàm tạo hợp đồng\r\n    onCreate(newContract);\r\n    toast.success('Tạo hợp đồng thành công!');\r\n  };\r\n\r\n  // Bước 3: Xem trước và xác nhận\r\n  const renderPreview = () => {\r\n    if (!selectedTemplate) return null;\r\n\r\n    return (\r\n      <Box>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n          <IconButton onClick={() => setActiveStep(2)} sx={{ mr: 1 }}>\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">\r\n            Xem trước & Xác nhận\r\n          </Typography>\r\n        </Box>\r\n        \r\n        <Box sx={{ border: '1px solid #e0e0e0', borderRadius: 1, padding: 0, overflow: 'hidden', mb: 3 }}>\r\n          <PdfPageEditor \r\n            initialContent={contractContent}\r\n            onSave={setContractContent}\r\n            onExportPdf={() => {\r\n              toast.success('Xuất PDF thành công!');\r\n            }}\r\n          />\r\n        </Box>\r\n        \r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <Button \r\n            variant=\"outlined\" \r\n            onClick={() => setActiveStep(1)}\r\n            startIcon={<ArrowBackIcon />}\r\n          >\r\n            Quay lại\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleCreateContract}\r\n          >\r\n            Tạo hợp đồng\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n  // Bước 3: Thêm hạng mục thanh toán\r\n  const renderPaymentSchedule = () => {\r\n    return (\r\n      <PaymentScheduleStep\r\n        payments={payments}\r\n        onPaymentsChange={setPayments}\r\n        onBack={() => setActiveStep(1)}\r\n        onNext={() => setActiveStep(3)}\r\n      />\r\n    );\r\n  };\r\n\r\n  const steps = [\r\n    { label: 'Chọn mẫu hợp đồng', component: renderTemplateSelection },\r\n    { label: 'Điền thông tin', component: renderContractForm },\r\n    { label: 'Hạng mục thanh toán', component: renderPaymentSchedule },\r\n    { label: 'Xem trước & Xác nhận', component: renderPreview },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Stepper activeStep={activeStep} sx={{ mb: 4 }}>\r\n        {steps.map((step, index) => (\r\n          <Step key={step.label} completed={activeStep > index}>\r\n            <StepLabel>{step.label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      \r\n      <Box sx={{ mt: 2 }}>\r\n        {steps[activeStep].component()}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Component này đã được thay thế bằng PdfPageEditor trong bước xem trước\r\n// const ContractPreview: React.FC = () => {\r\n//   return null;\r\n// };\r\n\r\nexport default CreateContract;\r\n","import React from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Paper, \r\n  Button, \r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Divider,\r\n  Chip\r\n} from '@mui/material';\r\nimport { ArrowBack, Download, Print, Share, Delete, Edit } from '@mui/icons-material';\r\n\r\ninterface ContractDetailProps {\r\n  contract: {\r\n    id: string;\r\n    name: string;\r\n    templateName: string;\r\n    status: 'draft' | 'pending' | 'signed' | 'expired' | 'cancelled';\r\n    partyA: string;\r\n    partyB: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    createdBy: string;\r\n    signedAt?: string;\r\n    expiresAt?: string;\r\n    contractData?: {\r\n      tenBenA: string;\r\n      tenBenB: string;\r\n      ngayKy: string;\r\n      diaChiA: string;\r\n      dienThoaiA: string;\r\n      maSoThueA: string;\r\n      nguoiDaiDienA: string;\r\n      chucVuA: string;\r\n      giaTriHopDong: string;\r\n    };\r\n  };\r\n  onClose: () => void;\r\n  onDelete: (id: string) => void;\r\n  onEdit: (id: string) => void;\r\n}\r\n\r\nconst ContractDetail: React.FC<ContractDetailProps> = ({ \r\n  contract, \r\n  onClose, \r\n  onDelete,\r\n  onEdit\r\n}) => {\r\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = React.useState(false);\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'signed': return 'success';\r\n      case 'pending': return 'warning';\r\n      case 'draft': return 'default';\r\n      case 'expired': return 'error';\r\n      case 'cancelled': return 'error';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    if (!dateString) return 'Chưa xác định';\r\n    return new Date(dateString).toLocaleDateString('vi-VN');\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3, gap: 2 }}>\r\n        <IconButton onClick={onClose}>\r\n          <ArrowBack />\r\n        </IconButton>\r\n        <Typography variant=\"h5\">\r\n          Chi tiết hợp đồng: {contract.name}\r\n        </Typography>\r\n        <Chip \r\n          label={contract.status.toUpperCase()} \r\n          color={getStatusColor(contract.status) as any}\r\n          size=\"small\"\r\n          sx={{ ml: 2 }}\r\n        />\r\n      </Box>\r\n\r\n      <Paper sx={{ p: 3, mb: 3 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3, flexWrap: 'wrap', gap: 2 }}>\r\n          <Box>\r\n            <Typography variant=\"h6\" gutterBottom>Thông tin chung</Typography>\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\r\n              <Box sx={{ flex: '1 1 300px' }}>\r\n                <Typography><strong>Mã hợp đồng:</strong> {contract.id}</Typography>\r\n                <Typography><strong>Mẫu hợp đồng:</strong> {contract.templateName}</Typography>\r\n                <Typography><strong>Ngày tạo:</strong> {formatDate(contract.createdAt)}</Typography>\r\n              </Box>\r\n              <Box sx={{ flex: '1 1 300px' }}>\r\n                <Typography><strong>Người tạo:</strong> {contract.createdBy}</Typography>\r\n                <Typography><strong>Cập nhật lần cuối:</strong> {formatDate(contract.updatedAt)}</Typography>\r\n                {contract.signedAt && (\r\n                  <Typography><strong>Ngày ký:</strong> {formatDate(contract.signedAt)}</Typography>\r\n                )}\r\n                {contract.expiresAt && (\r\n                  <Typography><strong>Ngày hết hạn:</strong> {formatDate(contract.expiresAt)}</Typography>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          \r\n          <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n            <Button variant=\"outlined\" startIcon={<Download />} size=\"small\">\r\n              Tải xuống\r\n            </Button>\r\n            <Button variant=\"outlined\" startIcon={<Print />} size=\"small\">\r\n              In\r\n            </Button>\r\n            <Button variant=\"outlined\" startIcon={<Share />} size=\"small\">\r\n              Chia sẻ\r\n            </Button>\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\" \r\n              startIcon={<Edit />}\r\n              onClick={() => onEdit(contract.id)}\r\n              size=\"small\"\r\n            >\r\n              Chỉnh sửa\r\n            </Button>\r\n            <Button \r\n              variant=\"outlined\" \r\n              color=\"error\" \r\n              startIcon={<Delete />}\r\n              onClick={() => setDeleteConfirmOpen(true)}\r\n              size=\"small\"\r\n            >\r\n              Xóa\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Divider sx={{ my: 3 }} />\r\n\r\n        <Box sx={{ mb: 4 }}>\r\n          <Typography variant=\"h6\" gutterBottom>Thông tin các bên</Typography>\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 4 }}>\r\n            <Box sx={{ flex: '1 1 300px' }}>\r\n              <Paper variant=\"outlined\" sx={{ p: 2, height: '100%' }}>\r\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\" gutterBottom>\r\n                  Bên A (Bên giao kết hợp đồng)\r\n                </Typography>\r\n                {contract.contractData ? (\r\n                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n                    <Typography><strong>Tên công ty:</strong> {contract.contractData.tenBenA}</Typography>\r\n                    <Typography><strong>Địa chỉ:</strong> {contract.contractData.diaChiA}</Typography>\r\n                    <Typography><strong>Điện thoại:</strong> {contract.contractData.dienThoaiA}</Typography>\r\n                    <Typography><strong>Mã số thuế:</strong> {contract.contractData.maSoThueA}</Typography>\r\n                    <Typography><strong>Người đại diện:</strong> {contract.contractData.nguoiDaiDienA}</Typography>\r\n                    <Typography><strong>Chức vụ:</strong> {contract.contractData.chucVuA}</Typography>\r\n                  </Box>\r\n                ) : (\r\n                  <Typography>Không có thông tin chi tiết</Typography>\r\n                )}\r\n              </Paper>\r\n            </Box>\r\n            <Box sx={{ flex: '1 1 300px' }}>\r\n              <Paper variant=\"outlined\" sx={{ p: 2, height: '100%' }}>\r\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\" gutterBottom>\r\n                  Bên B (Đối tác)\r\n                </Typography>\r\n                {contract.contractData ? (\r\n                  <Typography><strong>Tên công ty:</strong> {contract.contractData.tenBenB}</Typography>\r\n                ) : (\r\n                  <Typography>Không có thông tin chi tiết</Typography>\r\n                )}\r\n              </Paper>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box>\r\n          <Typography variant=\"h6\" gutterBottom>Nội dung hợp đồng</Typography>\r\n          <Paper variant=\"outlined\" sx={{ p: 3 }}>\r\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n              HỢP ĐỒNG DỊCH VỤ\r\n            </Typography>\r\n            <Typography paragraph align=\"center\">\r\n              Số: {contract.id}\r\n            </Typography>\r\n            \r\n            <Typography paragraph align=\"center\">\r\n              <em>Căn cứ Bộ luật Dân sự số 91/2015/QH13 ngày 24 tháng 11 năm 2015 của Quốc hội</em><br />\r\n              <em>Căn cứ Luật Thương mại số 36/2005/QH11 ngày 14 tháng 6 năm 2005 của Quốc hội</em>\r\n            </Typography>\r\n            \r\n            <Typography paragraph align=\"center\">\r\n              <strong>Hôm nay, ngày {contract.contractData?.ngayKy || formatDate(contract.createdAt)}</strong>\r\n            </Typography>\r\n            \r\n            <Typography paragraph>\r\n              <strong>BÊN A:</strong> {contract.contractData?.tenBenA || contract.partyA}\r\n            </Typography>\r\n            \r\n            <Typography paragraph>\r\n              <strong>BÊN B:</strong> {contract.contractData?.tenBenB || contract.partyB}\r\n            </Typography>\r\n            \r\n            <Typography paragraph>\r\n              Hai bên cùng thỏa thuận ký kết Hợp đồng dịch vụ với những nội dung và điều khoản sau đây:\r\n            </Typography>\r\n            \r\n            <Typography variant=\"h6\" gutterBottom>ĐIỀU 1: NỘI DUNG CÔNG VIỆC</Typography>\r\n            <Typography paragraph>\r\n              Bên B đồng ý cung cấp dịch vụ theo yêu cầu của Bên A với nội dung chi tiết như trong Phụ lục đính kèm.\r\n            </Typography>\r\n            \r\n            <Typography variant=\"h6\" gutterBottom>ĐIỀU 2: THỜI HẠN HỢP ĐỒNG</Typography>\r\n            <Typography paragraph>\r\n              Hợp đồng có hiệu lực từ ngày ký đến ngày {contract.expiresAt ? formatDate(contract.expiresAt) : 'khi hoàn thành nghĩa vụ hợp đồng'}.\r\n            </Typography>\r\n            \r\n            <Typography variant=\"h6\" gutterBottom>ĐIỀU 3: GIÁ TRỊ HỢP ĐỒNG</Typography>\r\n            <Typography paragraph>\r\n              Tổng giá trị hợp đồng: {contract.contractData?.giaTriHopDong || 'Theo thỏa thuận giữa hai bên'}\r\n            </Typography>\r\n            \r\n            <Box sx={{ mt: 6, display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', gap: 2 }}>\r\n              <Box sx={{ textAlign: 'center', minWidth: 200, flex: 1 }}>\r\n                <Typography fontWeight=\"bold\">ĐẠI DIỆN BÊN A</Typography>\r\n                <Typography fontStyle=\"italic\">(Ký, ghi rõ họ tên)</Typography>\r\n                <Box sx={{ height: 80, mt: 2 }}></Box>\r\n                <Typography fontWeight=\"bold\">{contract.contractData?.nguoiDaiDienA || 'Người đại diện'}</Typography>\r\n                <Typography>{contract.contractData?.chucVuA || 'Chức vụ'}</Typography>\r\n              </Box>\r\n              \r\n              <Box sx={{ textAlign: 'center', minWidth: 200, flex: 1 }}>\r\n                <Typography fontWeight=\"bold\">ĐẠI DIỆN BÊN B</Typography>\r\n                <Typography fontStyle=\"italic\">(Ký, ghi rõ họ tên)</Typography>\r\n                <Box sx={{ height: 80, mt: 2 }}></Box>\r\n                <Typography fontWeight=\"bold\">Người đại diện</Typography>\r\n                <Typography>Chức vụ</Typography>\r\n              </Box>\r\n            </Box>\r\n          </Paper>\r\n        </Box>\r\n      </Paper>\r\n\r\n      {/* Delete confirmation dialog */}\r\n      <Dialog open={deleteConfirmOpen} onClose={() => setDeleteConfirmOpen(false)}>\r\n        <DialogTitle>Xác nhận xóa hợp đồng</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>Bạn có chắc chắn muốn xóa hợp đồng này? Hành động này không thể hoàn tác.</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setDeleteConfirmOpen(false)}>Hủy</Button>\r\n          <Button \r\n            onClick={() => {\r\n              onDelete(contract.id);\r\n              setDeleteConfirmOpen(false);\r\n            }} \r\n            color=\"error\"\r\n            variant=\"contained\"\r\n          >\r\n            Xác nhận xóa\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContractDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Snackbar, Alert, Tabs, Tab, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\nimport { Visibility, Delete, FileDownload, Add, Close, ArrowBack } from '@mui/icons-material';\r\nimport TemplateList from './components/TemplateList';\r\nimport UploadTemplate from './components/UploadTemplate';\r\nimport CreateContract from './components/CreateContract';\r\nimport ContractDetail from './components/ContractDetail';\r\nimport { UploadTemplateFormValues } from './components/UploadTemplate/types';\r\n\r\n// Import interface Template từ TemplateList/types.ts\r\nimport { Template as TemplateType } from './components/TemplateList/types';\r\n\r\n// Mở rộng interface Template để phù hợp với TemplateList/types.ts\r\ninterface Template extends TemplateType {\r\n  description?: string;\r\n  extractedFields?: any[];\r\n}\r\n\r\n// Interface cho hợp đồng\r\ninterface Contract {\r\n  id: string;\r\n  name: string;\r\n  templateId: string;\r\n  templateName: string;\r\n  status: 'draft' | 'pending' | 'signed' | 'expired' | 'cancelled';\r\n  partyA: string;\r\n  partyB: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  createdBy: string;\r\n  signedAt?: string;\r\n  expiresAt?: string;\r\n}\r\n\r\n// Tab value\r\ntype ContractTab = 'templates' | 'contracts';\r\n\r\nconst ContractManagement: React.FC = () => {\r\n  const [currentTab, setCurrentTab] = useState<ContractTab>('templates');\r\n  const [uploadDialogOpen, setUploadDialogOpen] = useState(false);\r\n  const [createContractOpen, setCreateContractOpen] = useState(false);\r\n  const [templates, setTemplates] = useState<Template[]>([]);\r\n  const [contracts, setContracts] = useState<Contract[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedContract, setSelectedContract] = useState<Contract | null>(null);\r\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\r\n  const [contractToDelete, setContractToDelete] = useState<string | null>(null);\r\n  const [snackbar, setSnackbar] = useState<{\r\n    open: boolean;\r\n    message: string;\r\n    severity: 'success' | 'error' | 'info' | 'warning';\r\n  }>({ open: false, message: '', severity: 'success' });\r\n\r\n  const handleOpenUploadDialog = () => {\r\n    setUploadDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseUploadDialog = () => {\r\n    setUploadDialogOpen(false);\r\n  };\r\n\r\n  // Tải dữ liệu khi component được mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // TODO: Replace with actual API call\r\n        // Simulate API call\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        \r\n        // Mock data\r\n        const mockTemplates: Template[] = [\r\n          {\r\n            id: '1',\r\n            name: 'Hợp đồng mua bán',\r\n            description: 'Template hợp đồng mua bán hàng hóa',\r\n            type: 'customer',\r\n            status: 'active',\r\n            createdAt: '2025-06-30T10:00:00Z',\r\n            updatedAt: '2025-06-30T10:00:00Z',\r\n            createdBy: 'Nguyễn Văn A',\r\n            placeholderCount: 8,\r\n            isDefault: true,\r\n            extractedFields: []\r\n          },\r\n          {\r\n            id: '2',\r\n            name: 'Hợp đồng dịch vụ',\r\n            description: 'Template hợp đồng cung cấp dịch vụ',\r\n            type: 'internal',\r\n            status: 'active',\r\n            createdAt: '2025-06-29T15:30:00Z',\r\n            updatedAt: '2025-06-29T15:30:00Z',\r\n            createdBy: 'Trần Thị B',\r\n            placeholderCount: 5,\r\n            isDefault: false,\r\n            extractedFields: []\r\n          }\r\n        ];\r\n        \r\n        setTemplates(mockTemplates);\r\n      } catch (error) {\r\n        console.error('Error fetching templates:', error);\r\n        setSnackbar({\r\n          open: true,\r\n          message: 'Có lỗi xảy ra khi tải dữ liệu. Vui lòng thử lại.',\r\n          severity: 'error',\r\n        });\r\n      }\r\n      \r\n      // Tải dữ liệu hợp đồng mẫu\r\n      try {\r\n        const mockContracts: Contract[] = [\r\n          {\r\n            id: 'C001',\r\n            name: 'Hợp đồng mua bán số 2025/001',\r\n            templateId: '1',\r\n            templateName: 'Hợp đồng mua bán',\r\n            status: 'signed',\r\n            partyA: 'Công ty TNHH ABC',\r\n            partyB: 'Ông Nguyễn Văn A',\r\n            createdAt: '2025-07-01T09:00:00Z',\r\n            updatedAt: '2025-07-01T09:30:00Z',\r\n            createdBy: 'Nguyễn Văn B',\r\n            signedAt: '2025-07-01T10:00:00Z',\r\n            expiresAt: '2025-12-31T23:59:59Z'\r\n          },\r\n          {\r\n            id: 'C002',\r\n            name: 'Hợp đồng dịch vụ số 2025/002',\r\n            templateId: '2',\r\n            templateName: 'Hợp đồng dịch vụ',\r\n            status: 'pending',\r\n            partyA: 'Công ty TNHH ABC',\r\n            partyB: 'Công ty TNHH XYZ',\r\n            createdAt: '2025-07-02T14:00:00Z',\r\n            updatedAt: '2025-07-02T14:30:00Z',\r\n            createdBy: 'Trần Thị C'\r\n          },\r\n          {\r\n            id: 'C003',\r\n            name: 'Hợp đồng thuê nhà số 2025/003',\r\n            templateId: '3',\r\n            templateName: 'Hợp đồng thuê nhà',\r\n            status: 'draft',\r\n            partyA: 'Công ty TNHH ABC',\r\n            partyB: 'Bà Lê Thị D',\r\n            createdAt: '2025-07-03T10:00:00Z',\r\n            updatedAt: '2025-07-03T10:15:00Z',\r\n            createdBy: 'Nguyễn Văn B',\r\n            expiresAt: '2026-07-02T23:59:59Z'\r\n          }\r\n        ];\r\n        \r\n        setContracts(mockContracts);\r\n      } catch (error) {\r\n        console.error('Error loading contracts:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleUploadTemplate = async (values: UploadTemplateFormValues): Promise<void> => {\r\n    try {\r\n      setLoading(true);\r\n      // TODO: Replace with actual API call\r\n      console.log('Uploading template:', values);\r\n      \r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      \r\n      // Tạo template mới với ID ngẫu nhiên\r\n      const newTemplate: Template = {\r\n        id: Math.random().toString(36).substring(2, 9),\r\n        name: values.name,\r\n        description: values.description || '',\r\n        type: values.type,\r\n        status: 'active',\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n        createdBy: 'Người dùng hiện tại', // Trong thực tế sẽ lấy từ thông tin đăng nhập\r\n        placeholderCount: values.extractedFields.length,\r\n        isDefault: false,\r\n        extractedFields: values.extractedFields\r\n      };\r\n      \r\n      // Thêm template mới vào danh sách\r\n      setTemplates(prevTemplates => [newTemplate, ...prevTemplates]);\r\n      \r\n      setSnackbar({\r\n        open: true,\r\n        message: 'Tải lên template thành công!',\r\n        severity: 'success',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error uploading template:', error);\r\n      setSnackbar({\r\n        open: true,\r\n        message: 'Có lỗi xảy ra khi tải lên template. Vui lòng thử lại.',\r\n        severity: 'error',\r\n      });\r\n      throw error; // Ném lỗi để component UploadTemplate xử lý\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar(prev => ({ ...prev, open: false }));\r\n  };\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: ContractTab) => {\r\n    setCurrentTab(newValue);\r\n  };\r\n  \r\n  const handleCreateContract = (newContract: any) => {\r\n    setContracts(prev => [newContract, ...prev]);\r\n    setCreateContractOpen(false);\r\n    setSelectedContract(newContract);\r\n    setSnackbar({\r\n      open: true,\r\n      message: 'Tạo hợp đồng mới thành công!',\r\n      severity: 'success',\r\n    });\r\n  };\r\n\r\n  const handleViewContract = (contract: Contract) => {\r\n    setSelectedContract(contract);\r\n  };\r\n\r\n  const handleCloseDetail = () => {\r\n    setSelectedContract(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contractId: string) => {\r\n    setContractToDelete(contractId);\r\n    setDeleteConfirmOpen(true);\r\n  };\r\n\r\n  const handleConfirmDelete = () => {\r\n    if (contractToDelete) {\r\n      setContracts(prev => prev.filter(c => c.id !== contractToDelete));\r\n      setDeleteConfirmOpen(false);\r\n      setSelectedContract(null);\r\n      setSnackbar({\r\n        open: true,\r\n        message: 'Đã xóa hợp đồng thành công!',\r\n        severity: 'success',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditContract = (contractId: string) => {\r\n    // In a real app, this would navigate to an edit page or open an edit dialog\r\n    setSnackbar({\r\n      open: true,\r\n      message: 'Chức năng chỉnh sửa hợp đồng đang được phát triển',\r\n      severity: 'info' as const,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Quản lý Hợp đồng\r\n        </Typography>\r\n      </Box>\r\n      \r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\r\n        <Tabs \r\n          value={currentTab} \r\n          onChange={handleTabChange}\r\n          aria-label=\"contract management tabs\"\r\n        >\r\n          <Tab label=\"Mẫu hợp đồng\" value=\"templates\" />\r\n          <Tab label=\"Hợp đồng\" value=\"contracts\" />\r\n        </Tabs>\r\n      </Box>\r\n      \r\n      {currentTab === 'templates' ? (\r\n        <>\r\n          <TemplateList \r\n            templates={templates}\r\n            loading={loading}\r\n            onUploadClick={handleOpenUploadDialog} \r\n          />\r\n          \r\n          <UploadTemplate \r\n            open={uploadDialogOpen}\r\n            onClose={handleCloseUploadDialog}\r\n            onSubmit={handleUploadTemplate}\r\n          />\r\n        </>\r\n      ) : (\r\n        <Paper sx={{ p: 3 }}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Danh sách Hợp đồng\r\n            </Typography>\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\"\r\n              startIcon={<Add />}\r\n              onClick={() => setCreateContractOpen(true)}\r\n            >\r\n              Tạo hợp đồng mới\r\n            </Button>\r\n          </Box>\r\n          \r\n          {loading ? (\r\n            <Typography color=\"textSecondary\" paragraph>\r\n              Đang tải danh sách hợp đồng...\r\n            </Typography>\r\n          ) : (\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Mã HĐ</TableCell>\r\n                    <TableCell>Tên hợp đồng</TableCell>\r\n                    <TableCell>Loại HĐ</TableCell>\r\n                    <TableCell>Bên A</TableCell>\r\n                    <TableCell>Bên B</TableCell>\r\n                    <TableCell>Ngày tạo</TableCell>\r\n                    <TableCell>Trạng thái</TableCell>\r\n                    <TableCell>Hành động</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {contracts.map((contract) => (\r\n                    <TableRow \r\n                      key={contract.id} \r\n                      hover \r\n                      onClick={() => handleViewContract(contract)}\r\n                      sx={{ cursor: 'pointer' }}\r\n                    >\r\n                      <TableCell>{contract.id}</TableCell>\r\n                      <TableCell>{contract.name}</TableCell>\r\n                      <TableCell>{contract.templateName}</TableCell>\r\n                      <TableCell>{contract.partyA}</TableCell>\r\n                      <TableCell>{contract.partyB}</TableCell>\r\n                      <TableCell>{new Date(contract.createdAt).toLocaleDateString()}</TableCell>\r\n                      <TableCell>\r\n                        <Chip \r\n                          label={\r\n                            contract.status === 'signed' ? 'Đã ký' :\r\n                            contract.status === 'pending' ? 'Chờ ký' :\r\n                            contract.status === 'draft' ? 'Nháp' :\r\n                            contract.status === 'expired' ? 'Hết hạn' : 'Đã hủy'\r\n                          }\r\n                          color={\r\n                            contract.status === 'signed' ? 'success' :\r\n                            contract.status === 'pending' ? 'warning' :\r\n                            contract.status === 'draft' ? 'default' : 'error'\r\n                          }\r\n                          size=\"small\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <IconButton \r\n                          size=\"small\" \r\n                          title=\"Xem chi tiết\"\r\n                          onClick={() => handleViewContract(contract)}\r\n                        >\r\n                          <Visibility fontSize=\"small\" />\r\n                        </IconButton>\r\n                        <IconButton size=\"small\" title=\"Tải về\">\r\n                          <FileDownload fontSize=\"small\" />\r\n                        </IconButton>\r\n                        <IconButton \r\n                          size=\"small\" \r\n                          title=\"Xóa\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleDeleteClick(contract.id);\r\n                          }}\r\n                        >\r\n                          <Delete fontSize=\"small\" color=\"error\" />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </Paper>\r\n      )}\r\n      \r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnackbar}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <Alert \r\n          onClose={handleCloseSnackbar} \r\n          severity={snackbar.severity}\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {/* Contract Detail Dialog */}\r\n      <Dialog \r\n        open={!!selectedContract} \r\n        onClose={handleCloseDetail}\r\n        fullWidth\r\n        maxWidth=\"md\"\r\n      >\r\n        <DialogTitle>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <IconButton onClick={handleCloseDetail} sx={{ mr: 1 }}>\r\n              <ArrowBack />\r\n            </IconButton>\r\n            <span>Chi tiết hợp đồng</span>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          {selectedContract && (\r\n            <ContractDetail\r\n              contract={{\r\n                ...selectedContract,\r\n                contractData: {\r\n                  tenBenA: selectedContract.partyA,\r\n                  tenBenB: selectedContract.partyB,\r\n                  ngayKy: new Date(selectedContract.createdAt).toLocaleDateString('vi-VN'),\r\n                  diaChiA: '123 Lê Lợi, Q.1, TP.HCM',\r\n                  dienThoaiA: '0901234567',\r\n                  maSoThueA: '0123456789',\r\n                  nguoiDaiDienA: 'Nguyễn Văn A',\r\n                  chucVuA: 'Giám đốc',\r\n                  giaTriHopDong: '50,000,000 VNĐ'\r\n                }\r\n              }}\r\n              onClose={handleCloseDetail}\r\n              onDelete={handleDeleteClick}\r\n              onEdit={handleEditContract}\r\n            />\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog\r\n        open={deleteConfirmOpen}\r\n        onClose={() => setDeleteConfirmOpen(false)}\r\n      >\r\n        <DialogTitle>Xác nhận xóa</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>Bạn có chắc chắn muốn xóa hợp đồng này? Hành động này không thể hoàn tác.</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setDeleteConfirmOpen(false)}>Hủy</Button>\r\n          <Button \r\n            onClick={handleConfirmDelete} \r\n            color=\"error\"\r\n            variant=\"contained\"\r\n          >\r\n            Xác nhận xóa\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Dialog tạo hợp đồng mới */}\r\n      <Dialog \r\n        open={createContractOpen} \r\n        onClose={() => setCreateContractOpen(false)}\r\n        maxWidth=\"lg\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: { \r\n            height: '90vh',\r\n            maxHeight: '90vh',\r\n            width: '95%',\r\n            maxWidth: '1400px'\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle>\r\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Typography variant=\"h6\">Tạo hợp đồng mới</Typography>\r\n            <IconButton onClick={() => setCreateContractOpen(false)}>\r\n              <Close />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <CreateContract \r\n            templates={templates} \r\n            onBack={() => setCreateContractOpen(false)}\r\n            onCreate={handleCreateContract}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContractManagement;\r\n"],"names":["_ref","filters","onFilterChange","onUploadClick","onCreateWithAIClick","console","log","_jsxs","Box","sx","mb","children","display","gridTemplateColumns","xs","md","gap","alignItems","_jsx","TextField","fullWidth","variant","placeholder","value","search","onChange","e","_objectSpread","target","InputProps","startAdornment","SearchIcon","color","mr","select","label","type","MenuItem","status","justifyContent","mt","Button","startIcon","AddIcon","onClick","width","maxWidth","SmartToyIcon","templates","page","rowsPerPage","totalRows","onPageChange","onRowsPerPageChange","onView","onEdit","onSetDefault","onDelete","Paper","overflow","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","length","map","template","hover","isDefault","StarIcon","fontSize","Typography","name","Chip","size","placeholderCount","Date","createdAt","toLocaleDateString","createdBy","Tooltip","title","IconButton","id","ViewIcon","EditIcon","disabled","StarBorderIcon","DeleteIcon","colSpan","py","TablePagination","rowsPerPageOptions","component","count","handleChangePage","event","newPage","parseInt","labelRowsPerPage","labelDisplayedRows","_ref2","from","to","concat","PROMPT_SUGGESTIONS","onSubmit","loading","chatHistory","prompt","setPrompt","useState","flexDirection","height","p","flexGrow","overflowY","textAlign","opacity","gutterBottom","mx","fontStyle","message","index","elevation","backgroundColor","role","borderRadius","alignSelf","PersonIcon","content","px","flexWrap","suggestion","newPrompt","handleSuggestionClick","clickable","Divider","preventDefault","trim","multiline","maxRows","endIcon","CircularProgress","SendIcon","onUpdate","onSaveTemplate","borderBottom","DownloadIcon","SaveIcon","handleSaveTemplate","Skeleton","my","style","padding","border","resize","fontFamily","lineHeight","extractCompanyNames","party1","includes","party2","companyMatch","match","toUpperCase","extractContractType","toLowerCase","extractContractValue","valueMatch","parseFloat","unit","toLocaleString","extractContractDuration","durationMatch","duration","calculatePercentage","percentage","numericMatch","result","replace","open","onClose","setLoading","contractContent","setContractContent","setChatHistory","saveDialogOpen","setSaveDialogOpen","templateName","setTemplateName","savingTemplate","setSavingTemplate","Dialog","PaperProps","maxHeight","m","DialogTitle","edge","CloseIcon","DialogContent","borderRight","AIPromptInput","async","prev","setTimeout","generatedContract","companyNames","contractType","contractValue","contractDuration","Math","floor","random","getDate","getMonth","getFullYear","mockGenerateContract","error","ContractPreview","newContent","firstLine","split","pt","autoFocus","margin","placeholderRegex","placeholders","newTemplate","toISOString","updatedAt","mockTemplates","propTemplates","propLoading","setFilters","setPage","setRowsPerPage","aiModalOpen","setAIModalOpen","lastAddedTemplateId","setLastAddedTemplateId","filteredTemplates","setFilteredTemplates","setTotalRows","useEffect","filtered","searchLower","filter","startIndex","paginated","slice","filterAndPaginateTemplates","TemplateFilters","newFilters","AIContractGeneration","templateData","newId","now","alert","TemplateTable","newRowsPerPage","window","confirm","schema","yup","required","description","optional","oneOf","file","test","extractedFields","of","originalText","default","_errors$name","analyzing","setAnalyzing","setExtractedFields","register","handleSubmit","reset","setValue","watch","formState","errors","useForm","resolver","yupResolver","defaultValues","undefined","selectedFile","handleUpdatePlaceholder","field","updatedFields","handleClose","data","dividers","helperText","rows","FormControl","InputLabel","Select","defaultValue","accept","_event$target$files","files","mockExtractedFields","htmlFor","UploadIcon","splice","DialogActions","borderTop","borderColor","payments","onPaymentsChange","onBack","onNext","paymentStatuses","handlePaymentChange","payment","ArrowBackIcon","paragraph","condition","amount","toString","handleAmountChange","numericValue","endAdornment","InputAdornment","position","LocalizationProvider","dateAdapter","AdapterDateFns","adapterLocale","vi","DatePicker","paymentDate","date","slotProps","textField","note","handleDeletePayment","handleAddPayment","newPayment","onCreate","activeStep","setActiveStep","selectedTemplate","setSelectedTemplate","formData","setFormData","setPayments","generateContractHTML","React","contractNumber","padStart","formatCurrency","Intl","NumberFormat","format","paymentScheduleHTML","join","reduce","sum","Object","entries","keys","values","some","handleCreateContract","newContract","templateId","partyA","partyB","contractData","toast","success","steps","renderTemplateSelection","marginBottom","cursor","TemplateIcon","fontWeight","formFields","forEach","renderContractForm","checkFormCompletion","fieldName","handleFieldChange","handleContinue","renderPaymentSchedule","PaymentScheduleStep","renderPreview","PdfPageEditor","initialContent","onSave","onExportPdf","Stepper","step","Step","completed","StepLabel","_contract$contractDat","_contract$contractDat2","_contract$contractDat3","_contract$contractDat4","_contract$contractDat5","_contract$contractDat6","contract","deleteConfirmOpen","setDeleteConfirmOpen","formatDate","dateString","ArrowBack","getStatusColor","ml","flex","signedAt","expiresAt","Download","Print","Share","Edit","Delete","tenBenA","diaChiA","dienThoaiA","maSoThueA","nguoiDaiDienA","chucVuA","tenBenB","ngayKy","giaTriHopDong","minWidth","ContractManagement","currentTab","setCurrentTab","uploadDialogOpen","setUploadDialogOpen","createContractOpen","setCreateContractOpen","setTemplates","contracts","setContracts","selectedContract","setSelectedContract","contractToDelete","setContractToDelete","snackbar","setSnackbar","severity","Promise","resolve","fetchData","handleCloseSnackbar","handleViewContract","handleCloseDetail","handleDeleteClick","contractId","Tabs","handleTabChange","newValue","Tab","_Fragment","TemplateList","handleOpenUploadDialog","UploadTemplate","handleCloseUploadDialog","substring","prevTemplates","Add","Visibility","FileDownload","stopPropagation","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","ContractDetail","handleConfirmDelete","c","Close","CreateContract"],"sourceRoot":""}